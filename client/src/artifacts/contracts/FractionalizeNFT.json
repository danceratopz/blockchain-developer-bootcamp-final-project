{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "BoughtOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        }
      ],
      "name": "Fractionalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "NftReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "buyout",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fracNFTCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fracNFTs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "erc721Address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "erc20Symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "originalOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "buyoutPrice",
          "type": "uint256"
        },
        {
          "internalType": "enum FractionalizeNFT.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "erc20Symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "erc20Supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "buyoutPrice",
          "type": "uint256"
        }
      ],
      "name": "fractionalizeNft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getERC20Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getERC20Symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "enum FractionalizeNFT.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "idListLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "12": "contracts/ERC20Factory.sol",
    "13": "contracts/FractionalizeNFT.sol",
    "3": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
    "5": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
    "7": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
    "9": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol"
  },
  "ast": {
    "absolutePath": "contracts/FractionalizeNFT.sol",
    "exportedSymbols": {
      "Address": [
        2490
      ],
      "Context": [
        2032
      ],
      "ERC165": [
        2717
      ],
      "ERC20": [
        1062
      ],
      "ERC20Factory": [
        1907
      ],
      "ERC721": [
        1878
      ],
      "FractionalizeNFT": [
        516
      ],
      "IERC165": [
        2729
      ],
      "IERC20": [
        1985
      ],
      "IERC20Metadata": [
        2010
      ],
      "IERC721": [
        2148
      ],
      "IERC721Metadata": [
        2193
      ],
      "IERC721Receiver": [
        2166
      ],
      "Strings": [
        2693
      ]
    },
    "id": 517,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:13"
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 517,
        "sourceUnit": 1063,
        "src": "65:55:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 517,
        "sourceUnit": 1879,
        "src": "121:57:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC20Factory.sol",
        "file": "./ERC20Factory.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 517,
        "sourceUnit": 1908,
        "src": "180:28:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2166,
              "src": "461:15:13"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "461:15:13"
          }
        ],
        "canonicalName": "FractionalizeNFT",
        "contractDependencies": [
          1907
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 516,
        "linearizedBaseContracts": [
          516,
          2166
        ],
        "name": "FractionalizeNFT",
        "nameLocation": "441:16:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b141d781",
            "id": 11,
            "mutability": "mutable",
            "name": "fracNFTs",
            "nameLocation": "529:8:13",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "484:53:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 7,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "492:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "484:37:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT)"
              },
              "valueType": {
                "id": 9,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 8,
                  "name": "FractionalizedNFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34,
                  "src": "503:17:13"
                },
                "referencedDeclaration": 34,
                "src": "503:17:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage_ptr",
                  "typeString": "struct FractionalizeNFT.FractionalizedNFT"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7ff58ad9",
            "id": 14,
            "mutability": "mutable",
            "name": "fracNFTCount",
            "nameLocation": "599:12:13",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "584:31:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "584:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 13,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "614:1:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalizeNFT.FractionalizedNFT",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "fracNFTId",
                "nameLocation": "665:9:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "657:17:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "657:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "nftTokenId",
                "nameLocation": "692:10:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "684:18:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "684:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "erc721Address",
                "nameLocation": "720:13:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "712:21:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 19,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "712:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "erc20Address",
                "nameLocation": "751:12:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "743:20:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "743:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "erc20Symbol",
                "nameLocation": "780:11:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "773:18:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 23,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "773:6:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "erc20Name",
                "nameLocation": "808:9:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "801:16:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 25,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "801:6:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "originalOwner",
                "nameLocation": "843:13:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "827:29:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "827:15:13",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "buyoutPrice",
                "nameLocation": "874:11:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "866:19:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "866:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "901:5:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "895:11:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$38",
                  "typeString": "enum FractionalizeNFT.State"
                },
                "typeName": {
                  "id": 32,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 31,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 38,
                    "src": "895:5:13"
                  },
                  "referencedDeclaration": 38,
                  "src": "895:5:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$38",
                    "typeString": "enum FractionalizeNFT.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FractionalizedNFT",
            "nameLocation": "629:17:13",
            "nodeType": "StructDefinition",
            "scope": 516,
            "src": "622:291:13",
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalizeNFT.State",
            "id": 38,
            "members": [
              {
                "id": 35,
                "name": "Fractionalized",
                "nameLocation": "940:14:13",
                "nodeType": "EnumValue",
                "src": "940:14:13"
              },
              {
                "id": 36,
                "name": "Redeemed",
                "nameLocation": "964:8:13",
                "nodeType": "EnumValue",
                "src": "964:8:13"
              },
              {
                "id": 37,
                "name": "BoughtOut",
                "nameLocation": "982:9:13",
                "nodeType": "EnumValue",
                "src": "982:9:13"
              }
            ],
            "name": "State",
            "nameLocation": "924:5:13",
            "nodeType": "EnumDefinition",
            "src": "919:78:13"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "1017:2:13",
              "statements": []
            },
            "id": 42,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:2:13"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1017:0:13"
            },
            "scope": 516,
            "src": "1003:16:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "1025:161:13",
              "text": "@notice Emitted when ether is sent to the contract.\n @param sender The sender of the transaction/ether.\n @param value The amount of ether sent."
            },
            "id": 49,
            "name": "Received",
            "nameLocation": "1197:8:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1222:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "1206:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1246:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "1230:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:47:13"
            },
            "src": "1191:62:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 50,
              "nodeType": "StructuredDocumentation",
              "src": "1259:133:13",
              "text": "@notice Emitted when an NFT is transferred to the FractionalizeNFT contract.\n @param sender The address that sent the NFT."
            },
            "id": 54,
            "name": "NftReceived",
            "nameLocation": "1403:11:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1431:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "1415:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1414:24:13"
            },
            "src": "1397:42:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 55,
              "nodeType": "StructuredDocumentation",
              "src": "1445:462:13",
              "text": "@notice Emitted when a user successfully fractionalizes an NFT and receives the total supply of the newly created ERC20 token.\n @param sender The address that sent/fractionalized the NFT (i.e., the address that called fractionalize()).\n @param fracNFTId The ID of the newly fractionalized NFT.\n @param erc20Name The name of the newly created ERC20 token.\n @param erc20Address The contract address of the newly created ERC20 token."
            },
            "id": 65,
            "name": "Fractionalized",
            "nameLocation": "1918:14:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1958:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1942:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1942:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "1990:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1974:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "erc20Name",
                  "nameLocation": "2024:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "2009:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2009:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nameLocation": "2051:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "2043:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1932:137:13"
            },
            "src": "1912:158:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 66,
              "nodeType": "StructuredDocumentation",
              "src": "2076:277:13",
              "text": "@notice Emitted when a user successfully redeems an NFT in exchange for the total ERC20 supply.\n @param sender The address that redeemed the NFT (i.e., the address that called redeem()).\n @param fracNFTId The index of the fractionalized NFT that was redeemed."
            },
            "id": 72,
            "name": "Redeemed",
            "nameLocation": "2364:8:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2389:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "2373:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2373:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "2413:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "2397:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2372:51:13"
            },
            "src": "2358:66:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 73,
              "nodeType": "StructuredDocumentation",
              "src": "2430:316:13",
              "text": "@notice Emitted when a user successfully claims a payout following the buyout of an NFT from the FractionalizeNFT contract.\n @param sender The address that the user held ERC20 tokens for (i.e., the address that called claim()).\n @param fracNFTId The index of the fractionalized NFT that was bought."
            },
            "id": 79,
            "name": "Claimed",
            "nameLocation": "2757:7:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2781:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "2765:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "2805:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "2789:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2764:51:13"
            },
            "src": "2751:65:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 80,
              "nodeType": "StructuredDocumentation",
              "src": "2822:266:13",
              "text": "@notice Emitted when a user successfully buys an NFT from the FractionalizeNFT contract.\n @param sender The address that bought the NFT (i.e., the address that called buyout()).\n @param fracNFTId The index of the fractionalized NFT that was bought."
            },
            "id": 86,
            "name": "BoughtOut",
            "nameLocation": "3099:9:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3125:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "3109:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3109:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "3149:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "3133:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3133:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3108:51:13"
            },
            "src": "3093:67:13"
          },
          {
            "constant": false,
            "documentation": {
              "id": 87,
              "nodeType": "StructuredDocumentation",
              "src": "3166:138:13",
              "text": "@notice List of all fractionalized NFT ids.\n @dev Used as a helper when iterating over fractionalized NFTs in frontend clients."
            },
            "functionSelector": "6313531f",
            "id": 90,
            "mutability": "mutable",
            "name": "idList",
            "nameLocation": "3326:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "3309:23:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 88,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3309:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 89,
              "nodeType": "ArrayTypeName",
              "src": "3309:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 91,
              "nodeType": "StructuredDocumentation",
              "src": "3339:117:13",
              "text": "@notice idList length.\n @dev Used as a helper when iterating over fractionalized NFTs in frontend clients."
            },
            "functionSelector": "6386cd17",
            "id": 93,
            "mutability": "mutable",
            "name": "idListLength",
            "nameLocation": "3476:12:13",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "3461:27:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 92,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3461:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "3522:53:13",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 97,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3546:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3546:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 99,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3558:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3558:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 96,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "3537:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3537:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "EmitStatement",
                  "src": "3532:36:13"
                }
              ]
            },
            "id": 104,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3502:2:13"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3522:0:13"
            },
            "scope": 516,
            "src": "3495:80:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "3609:25:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 107,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "3619:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3619:8:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "3619:8:13"
                }
              ]
            },
            "id": 111,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3589:2:13"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3609:0:13"
            },
            "scope": 516,
            "src": "3581:53:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "3915:56:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 119,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "3932:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 121,
                      "indexExpression": {
                        "id": 120,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "3941:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3932:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc20Address",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22,
                    "src": "3932:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 118,
                  "id": 123,
                  "nodeType": "Return",
                  "src": "3925:39:13"
                }
              ]
            },
            "documentation": {
              "id": 112,
              "nodeType": "StructuredDocumentation",
              "src": "3640:196:13",
              "text": "@notice A getter function for the contract address of a fractionalized NFT's ERC20 token.\n @param fracNFTId The ID of the fractionalized NFT.\n @return The ERC20 contract address."
            },
            "functionSelector": "d1bc6caa",
            "id": 125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getERC20Address",
            "nameLocation": "3850:15:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "3874:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3866:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3866:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3865:19:13"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3906:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3906:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3905:9:13"
            },
            "scope": 516,
            "src": "3841:130:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "4267:55:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 133,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "4284:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 135,
                      "indexExpression": {
                        "id": 134,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "4293:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4284:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc20Symbol",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "4284:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 132,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "4277:38:13"
                }
              ]
            },
            "documentation": {
              "id": 126,
              "nodeType": "StructuredDocumentation",
              "src": "3977:178:13",
              "text": "@notice A getter function for the symbol of a fractionalized NFT's ERC20 token.\n @param fracNFTId The ID of the fractionalized NFT.\n @return The ERC20's symobl."
            },
            "functionSelector": "78fe17e5",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getERC20Symbol",
            "nameLocation": "4169:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "4192:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "4184:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4184:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4183:19:13"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "4248:13:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4248:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4247:15:13"
            },
            "scope": 516,
            "src": "4160:162:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "4613:49:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 148,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "4630:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 150,
                      "indexExpression": {
                        "id": 149,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "4639:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4630:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33,
                    "src": "4630:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$38",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "functionReturnParameters": 147,
                  "id": 152,
                  "nodeType": "Return",
                  "src": "4623:32:13"
                }
              ]
            },
            "documentation": {
              "id": 140,
              "nodeType": "StructuredDocumentation",
              "src": "4328:215:13",
              "text": "@notice A getter function for the state of a fractionalized NFT.\n @param fracNFTId The ID of the fractionalized NFT.\n @return The fractionalized NFT's state (Fractionalized, Redeemed or BoughtOut)."
            },
            "functionSelector": "44c9af28",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getState",
            "nameLocation": "4557:8:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "4574:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "4566:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4566:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4565:19:13"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "4606:5:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$38",
                    "typeString": "enum FractionalizeNFT.State"
                  },
                  "typeName": {
                    "id": 145,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 144,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38,
                      "src": "4606:5:13"
                    },
                    "referencedDeclaration": 38,
                    "src": "4606:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$38",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4605:7:13"
            },
            "scope": 516,
            "src": "4548:114:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "5747:945:13",
              "statements": [
                {
                  "assignments": [
                    174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 174,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "5764:3:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 261,
                      "src": "5757:10:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1878",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 173,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 172,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1878,
                          "src": "5757:6:13"
                        },
                        "referencedDeclaration": 1878,
                        "src": "5757:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1878",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 176,
                        "name": "nftContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "5777:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 175,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1878,
                      "src": "5770:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1878_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5770:26:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1878",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5757:39:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5827:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5827:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 186,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5847:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$516",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$516",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5839:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 184,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5839:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5839:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 188,
                        "name": "nftTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "5854:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 179,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "5806:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1878",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1441,
                      "src": "5806:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5806:59:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "5806:59:13"
                },
                {
                  "assignments": [
                    193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 193,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "5881:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 261,
                      "src": "5875:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1062",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 192,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 191,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1062,
                          "src": "5875:5:13"
                        },
                        "referencedDeclaration": 1062,
                        "src": "5875:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1062",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 204,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 198,
                        "name": "erc20Name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "5921:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 199,
                        "name": "erc20Symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "5944:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 200,
                        "name": "erc20Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "5969:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 201,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5994:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5994:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "components": [
                        {
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "5890:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Factory_$1907_$",
                            "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Factory)"
                          },
                          "typeName": {
                            "id": 195,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 194,
                              "name": "ERC20Factory",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1907,
                              "src": "5894:12:13"
                            },
                            "referencedDeclaration": 1907,
                            "src": "5894:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Factory_$1907",
                              "typeString": "contract ERC20Factory"
                            }
                          }
                        }
                      ],
                      "id": 197,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5889:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Factory_$1907_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Factory)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5889:125:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Factory_$1907",
                      "typeString": "contract ERC20Factory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5875:139:13"
                },
                {
                  "assignments": [
                    206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 206,
                      "mutability": "mutable",
                      "name": "fracNFTId",
                      "nameLocation": "6032:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 261,
                      "src": "6024:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 205,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6024:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 208,
                  "initialValue": {
                    "id": 207,
                    "name": "fracNFTCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "6044:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6024:32:13"
                },
                {
                  "expression": {
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 209,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "6066:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 211,
                      "indexExpression": {
                        "id": 210,
                        "name": "fracNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "6075:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6066:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 213,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "6134:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 214,
                          "name": "nftTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 159,
                          "src": "6169:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 215,
                          "name": "nftContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "6208:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 218,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "6262:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1062",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$1062",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6254:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 216,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6254:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6254:14:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 220,
                          "name": "erc20Symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "6295:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 221,
                          "name": "erc20Name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "6331:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 224,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6377:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6377:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6369:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 222,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6369:8:13",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6369:19:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 227,
                          "name": "buyoutPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "6415:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 228,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "6447:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$38_$",
                              "typeString": "type(enum FractionalizeNFT.State)"
                            }
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Fractionalized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "6447:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$38",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$38",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        ],
                        "id": 212,
                        "name": "FractionalizedNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "6091:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FractionalizedNFT_$34_storage_ptr_$",
                          "typeString": "type(struct FractionalizeNFT.FractionalizedNFT storage pointer)"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "fracNFTId",
                        "nftTokenId",
                        "erc721Address",
                        "erc20Address",
                        "erc20Symbol",
                        "erc20Name",
                        "originalOwner",
                        "buyoutPrice",
                        "state"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6091:387:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$34_memory_ptr",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT memory"
                      }
                    },
                    "src": "6066:412:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                      "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "6066:412:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 236,
                        "name": "fracNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "6500:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 233,
                        "name": "idList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "6488:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6488:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6488:25:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "6488:25:13"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 239,
                      "name": "idListLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "6523:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 240,
                        "name": "idList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "6538:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6538:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6523:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "6523:28:13"
                },
                {
                  "expression": {
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 244,
                      "name": "fracNFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "6561:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6577:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6561:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "6561:17:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 249,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6608:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6608:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 251,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "6620:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 252,
                        "name": "erc20Symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "6631:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 255,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "6652:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1062",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1062",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6644:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 253,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6644:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6644:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 248,
                      "name": "Fractionalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "6593:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,string memory,address)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6593:66:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "EmitStatement",
                  "src": "6588:71:13"
                },
                {
                  "expression": {
                    "id": 259,
                    "name": "fracNFTId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 206,
                    "src": "6676:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 171,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "6669:16:13"
                }
              ]
            },
            "documentation": {
              "id": 155,
              "nodeType": "StructuredDocumentation",
              "src": "4668:827:13",
              "text": "@notice Create a fractionalized NFT: Lock the NFT in the contract; create a new ERC20 token, as specified; and transfer the total supply of the token to the sender.\n @param nftContractAddress The address of the NFT that is to be fractionalized.\n @param nftTokenId The token ID of the NFT that is to be fractionalized.\n @param erc20Name The name of the newly created ERC20 token.\n @param erc20Symbol The symbol of the newly created ERC20 token.\n @param erc20Supply The total supply of the newly created ERC20 token.\n @param buyoutPrice The price (in Wei) for which the fractionalized NFT can be be bought for from the contract.\n @dev Note, the NFT must be approved for transfer by the FractionalizeNFT contract.\n @return The ID of the newly created fractionalized NFT."
            },
            "functionSelector": "06fbd1f2",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fractionalizeNft",
            "nameLocation": "5509:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "nftContractAddress",
                  "nameLocation": "5543:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5535:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5535:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "nftTokenId",
                  "nameLocation": "5579:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5571:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5571:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "erc20Name",
                  "nameLocation": "5613:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5599:23:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5599:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "erc20Symbol",
                  "nameLocation": "5646:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5632:25:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5632:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "erc20Supply",
                  "nameLocation": "5675:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5667:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5667:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "buyoutPrice",
                  "nameLocation": "5704:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5696:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5696:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5525:196:13"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5738:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5738:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5737:9:13"
            },
            "scope": 516,
            "src": "5500:1192:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "7109:636:13",
              "statements": [
                {
                  "assignments": [
                    270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 270,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "7125:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "7119:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1062",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 269,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 268,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1062,
                          "src": "7119:5:13"
                        },
                        "referencedDeclaration": 1062,
                        "src": "7119:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1062",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 272,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "7139:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 274,
                          "indexExpression": {
                            "id": 273,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "7148:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7139:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "7139:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 271,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1062,
                      "src": "7133:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1062_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7133:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1062",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7119:53:13"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "redeemerBalance",
                      "nameLocation": "7190:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "7182:23:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7182:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 285,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 282,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7224:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7224:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 280,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "7208:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1062",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 615,
                      "src": "7208:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7208:27:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7182:53:13"
                },
                {
                  "assignments": [
                    287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 287,
                      "mutability": "mutable",
                      "name": "erc20Supply",
                      "nameLocation": "7253:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "7245:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 286,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7245:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 291,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 288,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "7267:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1062",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 601,
                      "src": "7267:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7267:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7245:41:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 293,
                          "name": "redeemerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "7317:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 294,
                          "name": "erc20Supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "7336:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7317:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656465656d65657220646f6573206e6f7420686f6c642074686520656e7469726520737570706c792e",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7361:44:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_236101e21dee81e2f18f31894ab8347381b8b05dc8924dcc491bb1cb5e2effc5",
                          "typeString": "literal_string \"Redeemeer does not hold the entire supply.\""
                        },
                        "value": "Redeemeer does not hold the entire supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_236101e21dee81e2f18f31894ab8347381b8b05dc8924dcc491bb1cb5e2effc5",
                          "typeString": "literal_string \"Redeemeer does not hold the entire supply.\""
                        }
                      ],
                      "id": 292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7296:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7296:119:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "7296:119:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 302,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7444:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7444:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 306,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7464:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$516",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$516",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7456:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 304,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7456:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7456:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 308,
                        "name": "redeemerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "7471:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 299,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "7425:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1062",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 723,
                      "src": "7425:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7425:62:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "7425:62:13"
                },
                {
                  "assignments": [
                    313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 313,
                      "mutability": "mutable",
                      "name": "erc721",
                      "nameLocation": "7504:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "7497:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1878",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 312,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 311,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1878,
                          "src": "7497:6:13"
                        },
                        "referencedDeclaration": 1878,
                        "src": "7497:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1878",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 320,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 315,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "7520:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 317,
                          "indexExpression": {
                            "id": 316,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "7529:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7520:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20,
                        "src": "7520:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 314,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1878,
                      "src": "7513:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1878_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7513:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1878",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7497:57:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 326,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7609:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$516",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$516",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7601:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 324,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7601:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7601:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 328,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7628:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7628:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 330,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "7652:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 332,
                          "indexExpression": {
                            "id": 331,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "7661:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7652:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "7652:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 321,
                        "name": "erc721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "7564:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1878",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1441,
                      "src": "7564:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7564:128:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "7564:128:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7716:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7716:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 339,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "7728:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 336,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "7707:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7707:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "EmitStatement",
                  "src": "7702:36:13"
                }
              ]
            },
            "documentation": {
              "id": 263,
              "nodeType": "StructuredDocumentation",
              "src": "6698:364:13",
              "text": "@notice A holder of the entire ERC20 supply can call redeem in order to receive the underlying NFT from the contract. The ERC20 tokens get transferred to the contract address.\n @param fracNFTId The ID of the fractionalized NFT to redem.\n @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling redeem()."
            },
            "functionSelector": "db006a75",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "7076:6:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "7091:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "7083:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7083:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7082:19:13"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7109:0:13"
            },
            "scope": 516,
            "src": "7067:678:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "8141:682:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$38",
                          "typeString": "enum FractionalizeNFT.State"
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 350,
                              "name": "fracNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "8172:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                              }
                            },
                            "id": 352,
                            "indexExpression": {
                              "id": 351,
                              "name": "fracNFTId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 346,
                              "src": "8181:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8172:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                              "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "8172:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$38",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 354,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "8201:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$38_$",
                              "typeString": "type(enum FractionalizeNFT.State)"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "BoughtOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37,
                          "src": "8201:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$38",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        },
                        "src": "8172:44:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4672616374696f6e616c697a6564204e465420686173206e6f74206265656e20626f75676874206f75742e",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8230:45:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6d91eba7472d4b813c8f94f076251f17b02a0abaa0ce0e02ab9b764eb0faeb0",
                          "typeString": "literal_string \"Fractionalized NFT has not been bought out.\""
                        },
                        "value": "Fractionalized NFT has not been bought out."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6d91eba7472d4b813c8f94f076251f17b02a0abaa0ce0e02ab9b764eb0faeb0",
                          "typeString": "literal_string \"Fractionalized NFT has not been bought out.\""
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8151:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8151:134:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "8151:134:13"
                },
                {
                  "assignments": [
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "8301:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "8295:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1062",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 361,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 360,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1062,
                          "src": "8295:5:13"
                        },
                        "referencedDeclaration": 1062,
                        "src": "8295:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1062",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 369,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 364,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "8315:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 366,
                          "indexExpression": {
                            "id": 365,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "8324:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8315:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "8315:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 363,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1062,
                      "src": "8309:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1062_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8309:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1062",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8295:53:13"
                },
                {
                  "assignments": [
                    371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 371,
                      "mutability": "mutable",
                      "name": "claimerBalance",
                      "nameLocation": "8366:14:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "8358:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 370,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8358:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 377,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 374,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8399:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8399:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 372,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "8383:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1062",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 615,
                      "src": "8383:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8383:27:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8358:52:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 379,
                          "name": "claimerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 371,
                          "src": "8428:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8445:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8428:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d657220646f6573206e6f7420686f6c6420616e7920746f6b656e732e",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8448:35:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ef2c2aa2fbe0e8bc377bb41a097869566475b4d7ba3c50ff52a2b50a0a082d5",
                          "typeString": "literal_string \"Claimer does not hold any tokens.\""
                        },
                        "value": "Claimer does not hold any tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ef2c2aa2fbe0e8bc377bb41a097869566475b4d7ba3c50ff52a2b50a0a082d5",
                          "typeString": "literal_string \"Claimer does not hold any tokens.\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8420:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8420:64:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "8420:64:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 388,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8513:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8513:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 392,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8533:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$516",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$516",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8525:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 390,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8525:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8525:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 394,
                        "name": "claimerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "8540:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 385,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "8494:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1062",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 723,
                      "src": "8494:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8494:61:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "8494:61:13"
                },
                {
                  "assignments": [
                    398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 398,
                      "mutability": "mutable",
                      "name": "erc20Supply",
                      "nameLocation": "8573:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "8565:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 397,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8565:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 402,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 399,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "8587:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1062",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 601,
                      "src": "8587:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8587:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8565:41:13"
                },
                {
                  "assignments": [
                    404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "claimAmountWei",
                      "nameLocation": "8624:14:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "8616:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 403,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8616:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 414,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 405,
                                "name": "fracNFTs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "8642:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                                  "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                                }
                              },
                              "id": 407,
                              "indexExpression": {
                                "id": 406,
                                "name": "fracNFTId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 346,
                                "src": "8651:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8642:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                                "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                              }
                            },
                            "id": 408,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyoutPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "8642:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 409,
                            "name": "claimerBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "8688:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8642:60:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 411,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8641:62:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 412,
                      "name": "erc20Supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "8706:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8641:76:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8616:101:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 421,
                        "name": "claimAmountWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "8756:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 417,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8735:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8735:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8727:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 415,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8727:8:13",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8727:19:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "8727:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8727:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "8727:44:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 425,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8794:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8794:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 427,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "8806:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 424,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "8786:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8786:30:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "EmitStatement",
                  "src": "8781:35:13"
                }
              ]
            },
            "documentation": {
              "id": 344,
              "nodeType": "StructuredDocumentation",
              "src": "7751:344:13",
              "text": "@notice Allows a holder of the ERC20 tokens to claim his share of the sale proceedings (in ether) following a buyout of the fractionalized NFT.\n @param fracNFTId The ID of the fractionalized NFT to claim a payout for.\n @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling claim()."
            },
            "functionSelector": "379607f5",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "8109:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "8123:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "8115:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8115:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8114:19:13"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8141:0:13"
            },
            "scope": 516,
            "src": "8100:723:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "9044:552:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 438,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9175:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9175:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 440,
                              "name": "fracNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "9188:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                              }
                            },
                            "id": 442,
                            "indexExpression": {
                              "id": 441,
                              "name": "fracNFTId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 434,
                              "src": "9197:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9188:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                              "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "9188:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9175:44:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e6465722073656e74206c657373207468616e20746865206275796f75742070726963652e",
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9233:41:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd942614136c8476e28cdebb64c2d910549cbb0b70edce8dfe326f03f4643a50",
                          "typeString": "literal_string \"Sender sent less than the buyout price.\""
                        },
                        "value": "Sender sent less than the buyout price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd942614136c8476e28cdebb64c2d910549cbb0b70edce8dfe326f03f4643a50",
                          "typeString": "literal_string \"Sender sent less than the buyout price.\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9154:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9154:130:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "9154:130:13"
                },
                {
                  "expression": {
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 448,
                          "name": "fracNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "9294:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                            "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                          }
                        },
                        "id": 450,
                        "indexExpression": {
                          "id": 449,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 434,
                          "src": "9303:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9294:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                          "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "9294:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$38",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 452,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "9322:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$38_$",
                          "typeString": "type(enum FractionalizeNFT.State)"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BoughtOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "9322:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$38",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "src": "9294:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$38",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "9294:43:13"
                },
                {
                  "assignments": [
                    458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 458,
                      "mutability": "mutable",
                      "name": "erc721",
                      "nameLocation": "9354:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 487,
                      "src": "9347:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1878",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 457,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 456,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1878,
                          "src": "9347:6:13"
                        },
                        "referencedDeclaration": 1878,
                        "src": "9347:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1878",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 465,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 460,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "9370:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 462,
                          "indexExpression": {
                            "id": 461,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "9379:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9370:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20,
                        "src": "9370:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 459,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1878,
                      "src": "9363:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1878_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9363:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1878",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9347:57:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 471,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9459:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$516",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$516",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9451:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 469,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9451:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9451:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 473,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9478:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9478:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 475,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "9502:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 477,
                          "indexExpression": {
                            "id": 476,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "9511:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9502:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 478,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "9502:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 466,
                        "name": "erc721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "9414:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1878",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1441,
                      "src": "9414:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9414:128:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "9414:128:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 482,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9567:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9567:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 484,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "9579:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 481,
                      "name": "BoughtOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "9557:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9557:32:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "EmitStatement",
                  "src": "9552:37:13"
                }
              ]
            },
            "documentation": {
              "id": 432,
              "nodeType": "StructuredDocumentation",
              "src": "8829:160:13",
              "text": "@notice Allows an account to buy the NFT from the contract for the specified buyout price.\n @param fracNFTId The ID of the fractionalized NFT to buy."
            },
            "functionSelector": "07bec66f",
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyout",
            "nameLocation": "9003:6:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "9018:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "9010:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9010:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9009:19:13"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9044:0:13"
            },
            "scope": 516,
            "src": "8994:602:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2165
            ],
            "body": {
              "id": 514,
              "nodeType": "Block",
              "src": "9888:172:13",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 503,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9915:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9915:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 502,
                      "name": "NftReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "9903:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9903:23:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "EmitStatement",
                  "src": "9898:28:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f6e455243373231526563656976656428616464726573732c616464726573732c75696e743235362c627974657329",
                            "id": 510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9989:49:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            },
                            "value": "onERC721Received(address,address,uint256,bytes)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            }
                          ],
                          "id": 509,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "9979:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9979:60:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9955:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 507,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "9955:6:13",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9955:98:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 501,
                  "id": 513,
                  "nodeType": "Return",
                  "src": "9936:117:13"
                }
              ]
            },
            "documentation": {
              "id": 489,
              "nodeType": "StructuredDocumentation",
              "src": "9602:122:13",
              "text": "@dev Required to use safeTransferFrom() from OpenZeppelin's ERC721 contract (when transferring NFTs to this contract)."
            },
            "functionSelector": "150b7a02",
            "id": 515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "9738:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9772:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "9764:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9764:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 493,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9798:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "9790:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9790:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "nftTokenId",
                  "nameLocation": "9820:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "9812:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9812:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "9853:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "9840:17:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9840:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9754:109:13"
            },
            "returnParameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "9880:6:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "9880:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9879:8:13"
            },
            "scope": 516,
            "src": "9729:331:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 517,
        "src": "432:9630:13",
        "usedErrors": []
      }
    ],
    "src": "32:10031:13"
  },
  "bytecode": "6080604052600060015534801561001557600080fd5b5061220f806100256000396000f3fe608060405260043610620000b95760003560e01c80636386cd17116200006c5780636386cd17146200021357806378fe17e5146200022b5780637ff58ad9146200025f578063b141d7811462000277578063d1bc6caa14620002b3578063db006a75146200030957600080fd5b806306fbd1f214620000f357806307bec66f146200012b578063150b7a021462000144578063379607f5146200018357806344c9af2814620001a85780636313531f14620001ee57600080fd5b36620000ee57604051349033907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587490600090a3005b600080fd5b3480156200010057600080fd5b50620001186200011236600462001131565b6200032e565b6040519081526020015b60405180910390f35b620001426200013c366004620011ca565b620005fd565b005b3480156200015157600080fd5b506200016962000163366004620011e4565b62000736565b6040516001600160e01b0319909116815260200162000122565b3480156200019057600080fd5b5062000142620001a2366004620011ca565b6200078d565b348015620001b557600080fd5b50620001df620001c7366004620011ca565b60009081526020819052604090206008015460ff1690565b604051620001229190620012a2565b348015620001fb57600080fd5b50620001186200020d366004620011ca565b62000aa1565b3480156200022057600080fd5b506200011860035481565b3480156200023857600080fd5b50620002506200024a366004620011ca565b62000ac3565b60405162000122919062001319565b3480156200026c57600080fd5b506200011860015481565b3480156200028457600080fd5b506200029c62000296366004620011ca565b62000b70565b60405162000122999897969594939291906200132e565b348015620002c057600080fd5b50620002f0620002d2366004620011ca565b6000908152602081905260409020600301546001600160a01b031690565b6040516001600160a01b03909116815260200162000122565b3480156200031657600080fd5b506200014262000328366004620011ca565b62000cf5565b604051632142170760e11b815260009087906001600160a01b038216906342842e0e906200036590339030908c90600401620013b1565b600060405180830381600087803b1580156200038057600080fd5b505af115801562000395573d6000803e3d6000fd5b50505050600086868633604051620003ad9062000fa3565b620003bc9493929190620013d5565b604051809103906000f080158015620003d9573d6000803e3d6000fd5b509050600060015490506040518061012001604052808281526020018a81526020018b6001600160a01b03168152602001836001600160a01b03168152602001888152602001898152602001336001600160a01b031681526020018681526020016000600281111562000450576200045062001269565b90526001805460009081526020818152604091829020845181558482015193810193909355908301516002830180546001600160a01b039283166001600160a01b031991821617909155606085015160038501805491909316911617905560808301518051620004c7926004850192019062000fb1565b5060a08201518051620004e591600584019160209091019062000fb1565b5060c08201516006820180546001600160a01b0319166001600160a01b0390921691909117905560e0820151600782015561010082015160088201805460ff191660018360028111156200053d576200053d62001269565b0217905550506001805460028054808401825560008281527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910183905590546003559192508291906200059490839062001436565b9091555050604051620005a990889062001451565b6040519081900381206001600160a01b038416825290829033907fe2c8aefc9d0a52c93c762509eeeac2a518c41c52f791b6888c0673d07312c6059060200160405180910390a49998505050505050505050565b600081815260208190526040902060070154341015620006745760405162461bcd60e51b815260206004820152602760248201527f53656e6465722073656e74206c657373207468616e20746865206275796f757460448201526610383934b1b29760c91b60648201526084015b60405180910390fd5b6000818152602081905260409081902060088101805460ff191660029081179091558101546001909101549151632142170760e11b81526001600160a01b039091169182916342842e0e91620006d19130913391600401620013b1565b600060405180830381600087803b158015620006ec57600080fd5b505af115801562000701573d6000803e3d6000fd5b50506040518492503391507ffbbd268bb69cf922e3840dc96a6702dc064baf4b2d9594b5a66a2fe428f3f2aa90600090a35050565b60405160009033907fcce71fc9cfcacc4ce8153bde254a735ae423cdc2b7852fb754f4de746ac3018f908390a2507f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f949350505050565b600260008281526020819052604090206008015460ff166002811115620007b857620007b862001269565b146200081b5760405162461bcd60e51b815260206004820152602b60248201527f4672616374696f6e616c697a6564204e465420686173206e6f74206265656e2060448201526a3137bab3b43a1037baba1760a91b60648201526084016200066b565b6000818152602081905260408082206003015490516370a0823160e01b81523360048201526001600160a01b03909116919082906370a082319060240160206040518083038186803b1580156200087157600080fd5b505afa15801562000886573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008ac91906200146f565b9050600081116200090a5760405162461bcd60e51b815260206004820152602160248201527f436c61696d657220646f6573206e6f7420686f6c6420616e7920746f6b656e736044820152601760f91b60648201526084016200066b565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906200093c90339030908690600401620013b1565b602060405180830381600087803b1580156200095757600080fd5b505af11580156200096c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000992919062001489565b506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015620009cf57600080fd5b505afa158015620009e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a0a91906200146f565b60008581526020819052604081206007015491925090829062000a2f908590620014ad565b62000a3b9190620014cf565b604051909150339082156108fc029083906000818181858888f1935050505015801562000a6c573d6000803e3d6000fd5b50604051859033907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a90600090a35050505050565b6002818154811062000ab257600080fd5b600091825260209091200154905081565b600081815260208190526040902060040180546060919062000ae590620014f2565b80601f016020809104026020016040519081016040528092919081815260200182805462000b1390620014f2565b801562000b645780601f1062000b385761010080835404028352916020019162000b64565b820191906000526020600020905b81548152906001019060200180831162000b4657829003601f168201915b50505050509050919050565b60006020819052908152604090208054600182015460028301546003840154600485018054949593946001600160a01b0393841694929093169262000bb590620014f2565b80601f016020809104026020016040519081016040528092919081815260200182805462000be390620014f2565b801562000c345780601f1062000c085761010080835404028352916020019162000c34565b820191906000526020600020905b81548152906001019060200180831162000c1657829003601f168201915b50505050509080600501805462000c4b90620014f2565b80601f016020809104026020016040519081016040528092919081815260200182805462000c7990620014f2565b801562000cca5780601f1062000c9e5761010080835404028352916020019162000cca565b820191906000526020600020905b81548152906001019060200180831162000cac57829003601f168201915b505050506006830154600784015460089094015492936001600160a01b039091169290915060ff1689565b6000818152602081905260408082206003015490516370a0823160e01b81523360048201526001600160a01b03909116919082906370a082319060240160206040518083038186803b15801562000d4b57600080fd5b505afa15801562000d60573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d8691906200146f565b90506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000dc457600080fd5b505afa15801562000dd9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000dff91906200146f565b905080821462000e655760405162461bcd60e51b815260206004820152602a60248201527f52656465656d65657220646f6573206e6f7420686f6c642074686520656e746960448201526939329039bab838363c9760b11b60648201526084016200066b565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9062000e9790339030908790600401620013b1565b602060405180830381600087803b15801562000eb257600080fd5b505af115801562000ec7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000eed919062001489565b506000848152602081905260409081902060028101546001909101549151632142170760e11b81526001600160a01b039091169182916342842e0e9162000f3b9130913391600401620013b1565b600060405180830381600087803b15801562000f5657600080fd5b505af115801562000f6b573d6000803e3d6000fd5b50506040518792503391507f4896181ff8f4543cc00db9fe9b6fb7e6f032b7eb772c72ab1ec1b4d2e03b936990600090a35050505050565b610caa806200153083390190565b82805462000fbf90620014f2565b90600052602060002090601f01602090048101928262000fe357600085556200102e565b82601f1062000ffe57805160ff19168380011785556200102e565b828001600101855582156200102e579182015b828111156200102e57825182559160200191906001019062001011565b506200103c92915062001040565b5090565b5b808211156200103c576000815560010162001041565b80356001600160a01b03811681146200106f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115620010a857620010a862001074565b604051601f8501601f19908116603f01168101908282118183101715620010d357620010d362001074565b81604052809350858152868686011115620010ed57600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126200111957600080fd5b6200112a838335602085016200108a565b9392505050565b60008060008060008060c087890312156200114b57600080fd5b620011568762001057565b955060208701359450604087013567ffffffffffffffff808211156200117b57600080fd5b620011898a838b0162001107565b95506060890135915080821115620011a057600080fd5b50620011af89828a0162001107565b9350506080870135915060a087013590509295509295509295565b600060208284031215620011dd57600080fd5b5035919050565b60008060008060808587031215620011fb57600080fd5b620012068562001057565b9350620012166020860162001057565b925060408501359150606085013567ffffffffffffffff8111156200123a57600080fd5b8501601f810187136200124c57600080fd5b6200125d878235602084016200108a565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b600381106200129e57634e487b7160e01b600052602160045260246000fd5b9052565b60208101620012b282846200127f565b92915050565b60005b83811015620012d5578181015183820152602001620012bb565b83811115620012e5576000848401525b50505050565b6000815180845262001305816020860160208601620012b8565b601f01601f19169290920160200192915050565b6020815260006200112a6020830184620012eb565b898152602081018990526001600160a01b0388811660408301528781166060830152610120608083018190526000916200136b8483018a620012eb565b915083820360a0850152620013818289620012eb565b925080871660c085015250508360e0830152620013a36101008301846200127f565b9a9950505050505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b608081526000620013ea6080830187620012eb565b8281036020840152620013fe8187620012eb565b604084019590955250506001600160a01b039190911660609091015292915050565b634e487b7160e01b600052601160045260246000fd5b600082198211156200144c576200144c62001420565b500190565b6000825162001465818460208701620012b8565b9190910192915050565b6000602082840312156200148257600080fd5b5051919050565b6000602082840312156200149c57600080fd5b815180151581146200112a57600080fd5b6000816000190483118215151615620014ca57620014ca62001420565b500290565b600082620014ed57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200150757607f821691505b602082108114156200152957634e487b7160e01b600052602260045260246000fd5b5091905056fe60806040523480156200001157600080fd5b5060405162000caa38038062000caa8339810160408190526200003491620002dd565b8351849084906200004d9060039060208501906200016a565b508051620000639060049060208401906200016a565b5050506200007881836200008260201b60201c565b50505050620003d6565b6001600160a01b038216620000dd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f1919062000372565b90915550506001600160a01b038216600090815260208190526040812080548392906200012090849062000372565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001789062000399565b90600052602060002090601f0160209004810192826200019c5760008555620001e7565b82601f10620001b757805160ff1916838001178555620001e7565b82800160010185558215620001e7579182015b82811115620001e7578251825591602001919060010190620001ca565b50620001f5929150620001f9565b5090565b5b80821115620001f55760008155600101620001fa565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023857600080fd5b81516001600160401b038082111562000255576200025562000210565b604051601f8301601f19908116603f0116810190828211818310171562000280576200028062000210565b816040528381526020925086838588010111156200029d57600080fd5b600091505b83821015620002c15785820183015181830184015290820190620002a2565b83821115620002d35760008385830101525b9695505050505050565b60008060008060808587031215620002f457600080fd5b84516001600160401b03808211156200030c57600080fd5b6200031a8883890162000226565b955060208701519150808211156200033157600080fd5b50620003408782880162000226565b60408701516060880151919550935090506001600160a01b03811681146200036757600080fd5b939692955090935050565b600082198211156200039457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620003ae57607f821691505b60208210811415620003d057634e487b7160e01b600052602260045260246000fd5b50919050565b6108c480620003e66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212209147407f41d281300cec2a9f644c0521d6e4697b4af5985bc81dfe0f3c829c0064736f6c63430008090033a26469706673582212201c7735fc9b64141619a1475f5430652e71e3555d3c88fb9fe8a568136513514f64736f6c63430008090033",
  "bytecodeSha1": "356e002ccd993ece09ce625543d2d201d331afad",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "FractionalizeNFT",
  "coverageMap": {
    "branches": {
      "0": {},
      "12": {},
      "13": {
        "FractionalizeNFT.buyout": {
          "27": [
            9175,
            9219,
            true
          ]
        },
        "FractionalizeNFT.claim": {
          "28": [
            8172,
            8216,
            true
          ],
          "29": [
            8428,
            8446,
            true
          ]
        },
        "FractionalizeNFT.redeem": {
          "30": [
            7317,
            7347,
            true
          ]
        }
      },
      "3": {},
      "5": {},
      "7": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "12": {},
      "13": {
        "FractionalizeNFT.<fallback>": {
          "0": [
            3619,
            3627
          ]
        },
        "FractionalizeNFT.<receive>": {
          "1": [
            3532,
            3568
          ]
        },
        "FractionalizeNFT.buyout": {
          "11": [
            9154,
            9284
          ],
          "12": [
            9294,
            9337
          ],
          "13": [
            9414,
            9542
          ],
          "14": [
            9552,
            9589
          ]
        },
        "FractionalizeNFT.claim": {
          "17": [
            8151,
            8285
          ],
          "18": [
            8420,
            8484
          ],
          "19": [
            8494,
            8555
          ],
          "20": [
            8727,
            8771
          ],
          "21": [
            8781,
            8816
          ]
        },
        "FractionalizeNFT.fractionalizeNft": {
          "4": [
            5806,
            5865
          ],
          "5": [
            6066,
            6478
          ],
          "6": [
            6488,
            6513
          ],
          "7": [
            6523,
            6551
          ],
          "8": [
            6561,
            6578
          ],
          "9": [
            6588,
            6659
          ],
          "10": [
            6669,
            6685
          ]
        },
        "FractionalizeNFT.getERC20Address": {
          "3": [
            3925,
            3964
          ]
        },
        "FractionalizeNFT.getERC20Symbol": {
          "22": [
            4277,
            4315
          ]
        },
        "FractionalizeNFT.getState": {
          "2": [
            4623,
            4655
          ]
        },
        "FractionalizeNFT.onERC721Received": {
          "15": [
            9898,
            9926
          ],
          "16": [
            9936,
            10053
          ]
        },
        "FractionalizeNFT.redeem": {
          "23": [
            7296,
            7415
          ],
          "24": [
            7425,
            7487
          ],
          "25": [
            7564,
            7692
          ],
          "26": [
            7702,
            7738
          ]
        }
      },
      "3": {},
      "5": {},
      "7": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC20",
    "ERC20Factory",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "432:9630:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3619:8;;;432:9630;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3619:8;;;432:9630;;;;3537:31;;3558:9;;3546:10;;3537:31;;;;;432:9630;;3619:8;;;5500:1192;;;;;;;;;;-1:-1:-1;5500:1192:13;;;;;:::i;:::-;;:::i;:::-;;;2163:25:14;;;2151:2;2136:18;5500:1192:13;;;;;;;;8994:602;;;;;;:::i;:::-;;:::i;:::-;;9729:331;;;;;;;;;;-1:-1:-1;9729:331:13;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3218:33:14;;;3200:52;;3188:2;3173:18;9729:331:13;3056:202:14;8100:723:13;;;;;;;;;;-1:-1:-1;8100:723:13;;;;;:::i;:::-;;:::i;4548:114::-;;;;;;;;;;-1:-1:-1;4548:114:13;;;;;:::i;:::-;4606:5;4630:19;;;;;;;;;;:25;;;;;;4548:114;;;;;;;;:::i;3309:23::-;;;;;;;;;;-1:-1:-1;3309:23:13;;;;;:::i;:::-;;:::i;3461:27::-;;;;;;;;;;;;;;;;4160:162;;;;;;;;;;-1:-1:-1;4160:162:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;584:31::-;;;;;;;;;;;;;;;;484:53;;;;;;;;;;-1:-1:-1;484:53:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;3841:130::-;;;;;;;;;;-1:-1:-1;3841:130:13;;;;;:::i;:::-;3906:7;3932:19;;;;;;;;;;:32;;;-1:-1:-1;;;;;3932:32:13;;3841:130;;;;-1:-1:-1;;;;;5765:32:14;;;5747:51;;5735:2;5720:18;3841:130:13;5601:203:14;7067:678:13;;;;;;;;;;-1:-1:-1;7067:678:13;;;;;:::i;:::-;;:::i;5500:1192::-;5806:59;;-1:-1:-1;;;5806:59:13;;5738:7;;5777:18;;-1:-1:-1;;;;;5806:20:13;;;;;:59;;5827:10;;5847:4;;5854:10;;5806:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5875:11;5921:9;5944:11;5969;5994:10;5889:125;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5875:139;;6024:17;6044:12;;6024:32;;6091:387;;;;;;;;6134:9;6091:387;;;;6169:10;6091:387;;;;6208:18;-1:-1:-1;;;;;6091:387:13;;;;;6262:5;-1:-1:-1;;;;;6091:387:13;;;;;6295:11;6091:387;;;;6331:9;6091:387;;;;6377:10;-1:-1:-1;;;;;6091:387:13;;;;;6415:11;6091:387;;;;6447:20;6091:387;;;;;;;;:::i;:::-;;;6075:12;;;6066:8;:22;;;;;;;;;;;;:412;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6066:412:13;;;-1:-1:-1;;;;;;6066:412:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6066:412:13;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6066:412:13;;;;;;;;;-1:-1:-1;;;;;;6066:412:13;-1:-1:-1;;;;;6066:412:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6066:412:13;-1:-1:-1;6066:412:13;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;6500:12:13;;;6488:6;:25;;;;;;;-1:-1:-1;6488:25:13;;;;;;;;;;6538:13;;6523:12;:28;6500:12;;-1:-1:-1;6500:12:13;;-1:-1:-1;6561:17:13;;6500:12;;6561:17;:::i;:::-;;;;-1:-1:-1;;6593:66:13;;;;6631:11;;6593:66;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;5765:32:14;;5747:51;;6593:66:13;6620:9;;6608:10;;6593:66;;5735:2:14;5720:18;6593:66:13;;;;;;;6676:9;5500:1192;-1:-1:-1;;;;;;;;;5500:1192:13:o;8994:602::-;9188:8;:19;;;;;;;;;;:31;;;9175:9;:44;;9154:130;;;;-1:-1:-1;;;9154:130:13;;7495:2:14;9154:130:13;;;7477:21:14;7534:2;7514:18;;;7507:30;7573:34;7553:18;;;7546:62;-1:-1:-1;;;7624:18:14;;;7617:37;7671:19;;9154:130:13;;;;;;;;;9294:8;:19;;;;;;;;;;;;:25;;;:43;;-1:-1:-1;;9294:43:13;9322:15;9294:43;;;;;;9370:33;;;9294:43;9502:30;;;;9414:128;;-1:-1:-1;;;9414:128:13;;-1:-1:-1;;;;;9370:33:13;;;;;;9414:23;;:128;;9459:4;;9478:10;;9414:128;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9557:32:13;;9579:9;;-1:-1:-1;9567:10:13;;-1:-1:-1;9557:32:13;;;;;9044:552;8994:602;:::o;9729:331::-;9903:23;;9880:6;;9915:10;;9903:23;;9880:6;;9903:23;-1:-1:-1;9979:60:13;9729:331;;;;;;:::o;8100:723::-;8201:15;8172:8;:19;;;;;;;;;;:25;;;;;:44;;;;;;;;:::i;:::-;;8151:134;;;;-1:-1:-1;;;8151:134:13;;7903:2:14;8151:134:13;;;7885:21:14;7942:2;7922:18;;;7915:30;7981:34;7961:18;;;7954:62;-1:-1:-1;;;8032:18:14;;;8025:41;8083:19;;8151:134:13;7701:407:14;8151:134:13;8295:11;8315:19;;;;;;;;;;;:32;;;8383:27;;-1:-1:-1;;;8383:27:13;;8399:10;8383:27;;;5747:51:14;-1:-1:-1;;;;;8315:32:13;;;;8295:11;8315:32;;8383:15;;5720:18:14;;8383:27:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8358:52;;8445:1;8428:14;:18;8420:64;;;;-1:-1:-1;;;8420:64:13;;8504:2:14;8420:64:13;;;8486:21:14;8543:2;8523:18;;;8516:30;8582:34;8562:18;;;8555:62;-1:-1:-1;;;8633:18:14;;;8626:31;8674:19;;8420:64:13;8302:397:14;8420:64:13;8494:61;;-1:-1:-1;;;8494:61:13;;-1:-1:-1;;;;;8494:18:13;;;;;:61;;8513:10;;8533:4;;8540:14;;8494:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8565:19;8587:5;-1:-1:-1;;;;;8587:17:13;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8616:22;8642:19;;;;;;;;;;:31;;;8565:41;;-1:-1:-1;8616:22:13;8565:41;;8642:60;;8688:14;;8642:60;:::i;:::-;8641:76;;;;:::i;:::-;8727:44;;8616:101;;-1:-1:-1;8735:10:13;;8727:44;;;;;8616:101;;8727:44;;;;8616:101;8735:10;8727:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8786:30:13;;8806:9;;8794:10;;8786:30;;;;;8141:682;;;;8100:723;:::o;3309:23::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3309:23:13;:::o;4160:162::-;4284:8;:19;;;;;;;;;;:31;;4277:38;;4248:13;;4284:31;4277:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4160:162;;;:::o;484:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;484:53:13;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;484:53:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;484:53:13;;;;;;-1:-1:-1;484:53:13;;;:::o;7067:678::-;7119:11;7139:19;;;;;;;;;;;:32;;;7208:27;;-1:-1:-1;;;7208:27:13;;7224:10;7208:27;;;5747:51:14;-1:-1:-1;;;;;7139:32:13;;;;7119:11;7139:32;;7208:15;;5720:18:14;;7208:27:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7182:53;;7245:19;7267:5;-1:-1:-1;;;;;7267:17:13;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7245:41;;7336:11;7317:15;:30;7296:119;;;;-1:-1:-1;;;7296:119:13;;9968:2:14;7296:119:13;;;9950:21:14;10007:2;9987:18;;;9980:30;10046:34;10026:18;;;10019:62;-1:-1:-1;;;10097:18:14;;;10090:40;10147:19;;7296:119:13;9766:406:14;7296:119:13;7425:62;;-1:-1:-1;;;7425:62:13;;-1:-1:-1;;;;;7425:18:13;;;;;:62;;7444:10;;7464:4;;7471:15;;7425:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7497:13:13;7520:19;;;;;;;;;;;;:33;;;;;7652:30;;;;7564:128;;-1:-1:-1;;;7564:128:13;;-1:-1:-1;;;;;7520:33:13;;;;;;7564:23;;:128;;7609:4;;7628:10;;7564:128;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7707:31:13;;7728:9;;-1:-1:-1;7716:10:13;;-1:-1:-1;7707:31:13;;;;;7109:636;;;;7067:678;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:14;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:632;389:5;419:18;460:2;452:6;449:14;446:40;;;466:18;;:::i;:::-;541:2;535:9;509:2;595:15;;-1:-1:-1;;591:24:14;;;617:2;587:33;583:42;571:55;;;641:18;;;661:22;;;638:46;635:72;;;687:18;;:::i;:::-;727:10;723:2;716:22;756:6;747:15;;786:6;778;771:22;826:3;817:6;812:3;808:16;805:25;802:45;;;843:1;840;833:12;802:45;893:6;888:3;881:4;873:6;869:17;856:44;948:1;941:4;932:6;924;920:19;916:30;909:41;;;;324:632;;;;;:::o;961:222::-;1004:5;1057:3;1050:4;1042:6;1038:17;1034:27;1024:55;;1075:1;1072;1065:12;1024:55;1097:80;1173:3;1164:6;1151:20;1144:4;1136:6;1132:17;1097:80;:::i;:::-;1088:89;961:222;-1:-1:-1;;;961:222:14:o;1188:824::-;1312:6;1320;1328;1336;1344;1352;1405:3;1393:9;1384:7;1380:23;1376:33;1373:53;;;1422:1;1419;1412:12;1373:53;1445:29;1464:9;1445:29;:::i;:::-;1435:39;;1521:2;1510:9;1506:18;1493:32;1483:42;;1576:2;1565:9;1561:18;1548:32;1599:18;1640:2;1632:6;1629:14;1626:34;;;1656:1;1653;1646:12;1626:34;1679:50;1721:7;1712:6;1701:9;1697:22;1679:50;:::i;:::-;1669:60;;1782:2;1771:9;1767:18;1754:32;1738:48;;1811:2;1801:8;1798:16;1795:36;;;1827:1;1824;1817:12;1795:36;;1850:52;1894:7;1883:8;1872:9;1868:24;1850:52;:::i;:::-;1840:62;;;1949:3;1938:9;1934:19;1921:33;1911:43;;2001:3;1990:9;1986:19;1973:33;1963:43;;1188:824;;;;;;;;:::o;2199:180::-;2258:6;2311:2;2299:9;2290:7;2286:23;2282:32;2279:52;;;2327:1;2324;2317:12;2279:52;-1:-1:-1;2350:23:14;;2199:180;-1:-1:-1;2199:180:14:o;2384:667::-;2479:6;2487;2495;2503;2556:3;2544:9;2535:7;2531:23;2527:33;2524:53;;;2573:1;2570;2563:12;2524:53;2596:29;2615:9;2596:29;:::i;:::-;2586:39;;2644:38;2678:2;2667:9;2663:18;2644:38;:::i;:::-;2634:48;;2729:2;2718:9;2714:18;2701:32;2691:42;;2784:2;2773:9;2769:18;2756:32;2811:18;2803:6;2800:30;2797:50;;;2843:1;2840;2833:12;2797:50;2866:22;;2919:4;2911:13;;2907:27;-1:-1:-1;2897:55:14;;2948:1;2945;2938:12;2897:55;2971:74;3037:7;3032:2;3019:16;3014:2;3010;3006:11;2971:74;:::i;:::-;2961:84;;;2384:667;;;;;;;:::o;3263:127::-;3324:10;3319:3;3315:20;3312:1;3305:31;3355:4;3352:1;3345:15;3379:4;3376:1;3369:15;3395:233;3472:1;3465:5;3462:12;3452:143;;3517:10;3512:3;3508:20;3505:1;3498:31;3552:4;3549:1;3542:15;3580:4;3577:1;3570:15;3452:143;3604:18;;3395:233::o;3633:198::-;3773:2;3758:18;;3785:40;3762:9;3807:6;3785:40;:::i;:::-;3633:198;;;;:::o;3836:258::-;3908:1;3918:113;3932:6;3929:1;3926:13;3918:113;;;4008:11;;;4002:18;3989:11;;;3982:39;3954:2;3947:10;3918:113;;;4049:6;4046:1;4043:13;4040:48;;;4084:1;4075:6;4070:3;4066:16;4059:27;4040:48;;3836:258;;;:::o;4099:::-;4141:3;4179:5;4173:12;4206:6;4201:3;4194:19;4222:63;4278:6;4271:4;4266:3;4262:14;4255:4;4248:5;4244:16;4222:63;:::i;:::-;4339:2;4318:15;-1:-1:-1;;4314:29:14;4305:39;;;;4346:4;4301:50;;4099:258;-1:-1:-1;;4099:258:14:o;4362:220::-;4511:2;4500:9;4493:21;4474:4;4531:45;4572:2;4561:9;4557:18;4549:6;4531:45;:::i;4587:1009::-;5006:25;;;5062:2;5047:18;;5040:34;;;-1:-1:-1;;;;;5148:15:14;;;5143:2;5128:18;;5121:43;5200:15;;;5195:2;5180:18;;5173:43;4994:3;5247;5232:19;;5225:31;;;4965:4;;5279:45;5305:18;;;5297:6;5279:45;:::i;:::-;5265:59;;5373:9;5365:6;5361:22;5355:3;5344:9;5340:19;5333:51;5401:33;5427:6;5419;5401:33;:::i;:::-;5393:41;;5483:2;5475:6;5471:15;5465:3;5454:9;5450:19;5443:44;;;5524:6;5518:3;5507:9;5503:19;5496:35;5540:50;5585:3;5574:9;5570:19;5562:6;5540:50;:::i;:::-;4587:1009;;;;;;;;;;;;:::o;5809:375::-;-1:-1:-1;;;;;6067:15:14;;;6049:34;;6119:15;;;;6114:2;6099:18;;6092:43;6166:2;6151:18;;6144:34;;;;5999:2;5984:18;;5809:375::o;6189:553::-;6442:3;6431:9;6424:22;6405:4;6469:46;6510:3;6499:9;6495:19;6487:6;6469:46;:::i;:::-;6563:9;6555:6;6551:22;6546:2;6535:9;6531:18;6524:50;6591:33;6617:6;6609;6591:33;:::i;:::-;6655:2;6640:18;;6633:34;;;;-1:-1:-1;;;;;;;6703:32:14;;;;6698:2;6683:18;;;6676:60;6583:41;6189:553;-1:-1:-1;;6189:553:14:o;6747:127::-;6808:10;6803:3;6799:20;6796:1;6789:31;6839:4;6836:1;6829:15;6863:4;6860:1;6853:15;6879:128;6919:3;6950:1;6946:6;6943:1;6940:13;6937:39;;;6956:18;;:::i;:::-;-1:-1:-1;6992:9:14;;6879:128::o;7012:276::-;7143:3;7181:6;7175:13;7197:53;7243:6;7238:3;7231:4;7223:6;7219:17;7197:53;:::i;:::-;7266:16;;;;;7012:276;-1:-1:-1;;7012:276:14:o;8113:184::-;8183:6;8236:2;8224:9;8215:7;8211:23;8207:32;8204:52;;;8252:1;8249;8242:12;8204:52;-1:-1:-1;8275:16:14;;8113:184;-1:-1:-1;8113:184:14:o;8704:277::-;8771:6;8824:2;8812:9;8803:7;8799:23;8795:32;8792:52;;;8840:1;8837;8830:12;8792:52;8872:9;8866:16;8925:5;8918:13;8911:21;8904:5;8901:32;8891:60;;8947:1;8944;8937:12;8986:168;9026:7;9092:1;9088;9084:6;9080:14;9077:1;9074:21;9069:1;9062:9;9055:17;9051:45;9048:71;;;9099:18;;:::i;:::-;-1:-1:-1;9139:9:14;;8986:168::o;9159:217::-;9199:1;9225;9215:132;;9269:10;9264:3;9260:20;9257:1;9250:31;9304:4;9301:1;9294:15;9332:4;9329:1;9322:15;9215:132;-1:-1:-1;9361:9:14;;9159:217::o;9381:380::-;9460:1;9456:12;;;;9503;;;9524:61;;9578:4;9570:6;9566:17;9556:27;;9524:61;9631:2;9623:6;9620:14;9600:18;9597:38;9594:161;;;9677:10;9672:3;9668:20;9665:1;9658:31;9712:4;9709:1;9702:15;9740:4;9737:1;9730:15;9594:161;;9381:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "BoughtOut(address,uint256)": {
        "params": {
          "fracNFTId": "The index of the fractionalized NFT that was bought.",
          "sender": "The address that bought the NFT (i.e., the address that called buyout())."
        }
      },
      "Claimed(address,uint256)": {
        "params": {
          "fracNFTId": "The index of the fractionalized NFT that was bought.",
          "sender": "The address that the user held ERC20 tokens for (i.e., the address that called claim())."
        }
      },
      "Fractionalized(address,uint256,string,address)": {
        "params": {
          "erc20Address": "The contract address of the newly created ERC20 token.",
          "erc20Name": "The name of the newly created ERC20 token.",
          "fracNFTId": "The ID of the newly fractionalized NFT.",
          "sender": "The address that sent/fractionalized the NFT (i.e., the address that called fractionalize())."
        }
      },
      "NftReceived(address)": {
        "params": {
          "sender": "The address that sent the NFT."
        }
      },
      "Received(address,uint256)": {
        "params": {
          "sender": "The sender of the transaction/ether.",
          "value": "The amount of ether sent."
        }
      },
      "Redeemed(address,uint256)": {
        "params": {
          "fracNFTId": "The index of the fractionalized NFT that was redeemed.",
          "sender": "The address that redeemed the NFT (i.e., the address that called redeem())."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "buyout(uint256)": {
        "notice": "Allows an account to buy the NFT from the contract for the specified buyout price.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT to buy."
        }
      },
      "claim(uint256)": {
        "details": "Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling claim().",
        "notice": "Allows a holder of the ERC20 tokens to claim his share of the sale proceedings (in ether) following a buyout of the fractionalized NFT.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT to claim a payout for."
        }
      },
      "fractionalizeNft(address,uint256,string,string,uint256,uint256)": {
        "details": "Note, the NFT must be approved for transfer by the FractionalizeNFT contract.",
        "notice": "Create a fractionalized NFT: Lock the NFT in the contract; create a new ERC20 token, as specified; and transfer the total supply of the token to the sender.",
        "params": {
          "buyoutPrice": "The price (in Wei) for which the fractionalized NFT can be be bought for from the contract.",
          "erc20Name": "The name of the newly created ERC20 token.",
          "erc20Supply": "The total supply of the newly created ERC20 token.",
          "erc20Symbol": "The symbol of the newly created ERC20 token.",
          "nftContractAddress": "The address of the NFT that is to be fractionalized.",
          "nftTokenId": "The token ID of the NFT that is to be fractionalized."
        },
        "returns": {
          "_0": "The ID of the newly created fractionalized NFT."
        }
      },
      "getERC20Address(uint256)": {
        "notice": "A getter function for the contract address of a fractionalized NFT's ERC20 token.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT."
        },
        "returns": {
          "_0": "The ERC20 contract address."
        }
      },
      "getERC20Symbol(uint256)": {
        "notice": "A getter function for the symbol of a fractionalized NFT's ERC20 token.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT."
        },
        "returns": {
          "_0": "The ERC20's symobl."
        }
      },
      "getState(uint256)": {
        "notice": "A getter function for the state of a fractionalized NFT.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT."
        },
        "returns": {
          "_0": "The fractionalized NFT's state (Fractionalized, Redeemed or BoughtOut)."
        }
      },
      "idList(uint256)": {
        "notice": "List of all fractionalized NFT ids."
      },
      "idListLength()": {
        "notice": "idList length."
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Required to use safeTransferFrom() from OpenZeppelin's ERC721 contract (when transferring NFTs to this contract)."
      },
      "redeem(uint256)": {
        "details": "Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling redeem().",
        "notice": "A holder of the entire ERC20 supply can call redeem in order to receive the underlying NFT from the contract. The ERC20 tokens get transferred to the contract address.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT to redem."
        }
      }
    },
    "stateVariables": {
      "idList": {
        "details": "Used as a helper when iterating over fractionalized NFTs in frontend clients."
      },
      "idListLength": {
        "details": "Used as a helper when iterating over fractionalized NFTs in frontend clients."
      }
    },
    "version": 1
  },
  "offset": [
    432,
    10062
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0xB9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6386CD17 GT PUSH3 0x6C JUMPI DUP1 PUSH4 0x6386CD17 EQ PUSH3 0x213 JUMPI DUP1 PUSH4 0x78FE17E5 EQ PUSH3 0x22B JUMPI DUP1 PUSH4 0x7FF58AD9 EQ PUSH3 0x25F JUMPI DUP1 PUSH4 0xB141D781 EQ PUSH3 0x277 JUMPI DUP1 PUSH4 0xD1BC6CAA EQ PUSH3 0x2B3 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH3 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FBD1F2 EQ PUSH3 0xF3 JUMPI DUP1 PUSH4 0x7BEC66F EQ PUSH3 0x12B JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH3 0x144 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH3 0x183 JUMPI DUP1 PUSH4 0x44C9AF28 EQ PUSH3 0x1A8 JUMPI DUP1 PUSH4 0x6313531F EQ PUSH3 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH3 0xEE JUMPI PUSH1 0x40 MLOAD CALLVALUE SWAP1 CALLER SWAP1 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP1 PUSH1 0x0 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x118 PUSH3 0x112 CALLDATASIZE PUSH1 0x4 PUSH3 0x1131 JUMP JUMPDEST PUSH3 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x142 PUSH3 0x13C CALLDATASIZE PUSH1 0x4 PUSH3 0x11CA JUMP JUMPDEST PUSH3 0x5FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x169 PUSH3 0x163 CALLDATASIZE PUSH1 0x4 PUSH3 0x11E4 JUMP JUMPDEST PUSH3 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x122 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x142 PUSH3 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH3 0x11CA JUMP JUMPDEST PUSH3 0x78D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1DF PUSH3 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH3 0x11CA JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0x12A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x118 PUSH3 0x20D CALLDATASIZE PUSH1 0x4 PUSH3 0x11CA JUMP JUMPDEST PUSH3 0xAA1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x118 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x250 PUSH3 0x24A CALLDATASIZE PUSH1 0x4 PUSH3 0x11CA JUMP JUMPDEST PUSH3 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0x1319 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x118 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x29C PUSH3 0x296 CALLDATASIZE PUSH1 0x4 PUSH3 0x11CA JUMP JUMPDEST PUSH3 0xB70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x132E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2F0 PUSH3 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH3 0x11CA JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x122 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x142 PUSH3 0x328 CALLDATASIZE PUSH1 0x4 PUSH3 0x11CA JUMP JUMPDEST PUSH3 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH3 0x365 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH3 0x13B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP7 DUP7 DUP7 CALLER PUSH1 0x40 MLOAD PUSH3 0x3AD SWAP1 PUSH3 0xFA3 JUMP JUMPDEST PUSH3 0x3BC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x13D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x3D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x450 JUMPI PUSH3 0x450 PUSH3 0x1269 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE DUP5 DUP3 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP6 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP1 MLOAD PUSH3 0x4C7 SWAP3 PUSH1 0x4 DUP6 ADD SWAP3 ADD SWAP1 PUSH3 0xFB1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP1 MLOAD PUSH3 0x4E5 SWAP2 PUSH1 0x5 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xFB1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x53D JUMPI PUSH3 0x53D PUSH3 0x1269 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x2 DUP1 SLOAD DUP1 DUP5 ADD DUP3 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP2 ADD DUP4 SWAP1 SSTORE SWAP1 SLOAD PUSH1 0x3 SSTORE SWAP2 SWAP3 POP DUP3 SWAP2 SWAP1 PUSH3 0x594 SWAP1 DUP4 SWAP1 PUSH3 0x1436 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH3 0x5A9 SWAP1 DUP9 SWAP1 PUSH3 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 MSTORE SWAP1 DUP3 SWAP1 CALLER SWAP1 PUSH32 0xE2C8AEFC9D0A52C93C762509EEEAC2A518C41C52F791B6888C0673D07312C605 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD CALLVALUE LT ISZERO PUSH3 0x674 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E6465722073656E74206C657373207468616E20746865206275796F7574 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x10383934B1B297 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 SWAP2 PUSH4 0x42842E0E SWAP2 PUSH3 0x6D1 SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH3 0x13B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x701 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 SWAP3 POP CALLER SWAP2 POP PUSH32 0xFBBD268BB69CF922E3840DC96A6702DC064BAF4B2D9594B5A66A2FE428F3F2AA SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0xCCE71FC9CFCACC4CE8153BDE254A735AE423CDC2B7852FB754F4DE746AC3018F SWAP1 DUP4 SWAP1 LOG2 POP PUSH32 0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x7B8 JUMPI PUSH3 0x7B8 PUSH3 0x1269 JUMP JUMPDEST EQ PUSH3 0x81B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4672616374696F6E616C697A6564204E465420686173206E6F74206265656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3137BAB3B43A1037BABA17 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x66B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x886 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x8AC SWAP2 SWAP1 PUSH3 0x146F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH3 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D657220646F6573206E6F7420686F6C6420616E7920746F6B656E73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0x93C SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH3 0x13B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x96C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x992 SWAP2 SWAP1 PUSH3 0x1489 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x9CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x9E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA0A SWAP2 SWAP1 PUSH3 0x146F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 PUSH3 0xA2F SWAP1 DUP6 SWAP1 PUSH3 0x14AD JUMP JUMPDEST PUSH3 0xA3B SWAP2 SWAP1 PUSH3 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP6 SWAP1 CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0xAB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH3 0xAE5 SWAP1 PUSH3 0x14F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xB13 SWAP1 PUSH3 0x14F2 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xB64 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xB38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xB64 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xB46 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD DUP1 SLOAD SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 SWAP3 SWAP1 SWAP4 AND SWAP3 PUSH3 0xBB5 SWAP1 PUSH3 0x14F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xBE3 SWAP1 PUSH3 0x14F2 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xC34 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xC08 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xC34 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xC16 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH3 0xC4B SWAP1 PUSH3 0x14F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xC79 SWAP1 PUSH3 0x14F2 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xCCA JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xC9E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xCCA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xCAC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x8 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 POP PUSH1 0xFF AND DUP10 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xD4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xD60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xD86 SWAP2 SWAP1 PUSH3 0x146F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xDD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xDFF SWAP2 SWAP1 PUSH3 0x146F JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH3 0xE65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656465656D65657220646F6573206E6F7420686F6C642074686520656E7469 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39329039BAB838363C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0xE97 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH3 0x13B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xEC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xEED SWAP2 SWAP1 PUSH3 0x1489 JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 SWAP2 PUSH4 0x42842E0E SWAP2 PUSH3 0xF3B SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH3 0x13B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xF6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP8 SWAP3 POP CALLER SWAP2 POP PUSH32 0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCAA DUP1 PUSH3 0x1530 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xFBF SWAP1 PUSH3 0x14F2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xFE3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x102E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xFFE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x102E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x102E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x102E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1011 JUMP JUMPDEST POP PUSH3 0x103C SWAP3 SWAP2 POP PUSH3 0x1040 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x103C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1041 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x106F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH3 0x10A8 JUMPI PUSH3 0x10A8 PUSH3 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x10D3 JUMPI PUSH3 0x10D3 PUSH3 0x1074 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH3 0x10ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x112A DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH3 0x108A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x114B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1156 DUP8 PUSH3 0x1057 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1189 DUP11 DUP4 DUP12 ADD PUSH3 0x1107 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x11A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x11AF DUP10 DUP3 DUP11 ADD PUSH3 0x1107 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x11DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x11FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1206 DUP6 PUSH3 0x1057 JUMP JUMPDEST SWAP4 POP PUSH3 0x1216 PUSH1 0x20 DUP7 ADD PUSH3 0x1057 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH3 0x124C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x125D DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH3 0x108A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH3 0x129E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH3 0x12B2 DUP3 DUP5 PUSH3 0x127F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x12D5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x12BB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x12E5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0x1305 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x12B8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x112A PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x12EB JUMP JUMPDEST DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x120 PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH3 0x136B DUP5 DUP4 ADD DUP11 PUSH3 0x12EB JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH3 0x1381 DUP3 DUP10 PUSH3 0x12EB JUMP JUMPDEST SWAP3 POP DUP1 DUP8 AND PUSH1 0xC0 DUP6 ADD MSTORE POP POP DUP4 PUSH1 0xE0 DUP4 ADD MSTORE PUSH3 0x13A3 PUSH2 0x100 DUP4 ADD DUP5 PUSH3 0x127F JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH3 0x13EA PUSH1 0x80 DUP4 ADD DUP8 PUSH3 0x12EB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x13FE DUP2 DUP8 PUSH3 0x12EB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x144C JUMPI PUSH3 0x144C PUSH3 0x1420 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x1465 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x12B8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x149C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x14CA JUMPI PUSH3 0x14CA PUSH3 0x1420 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x14ED JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1507 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1529 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCAA CODESIZE SUB DUP1 PUSH3 0xCAA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2DD JUMP JUMPDEST DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x16A JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x16A JUMP JUMPDEST POP POP POP PUSH3 0x78 DUP2 DUP4 PUSH3 0x82 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xF1 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x120 SWAP1 DUP5 SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x178 SWAP1 PUSH3 0x399 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x19C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1E7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1B7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1E7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1E7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1E7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1CA JUMP JUMPDEST POP PUSH3 0x1F5 SWAP3 SWAP2 POP PUSH3 0x1F9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1F5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x255 JUMPI PUSH3 0x255 PUSH3 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x280 JUMPI PUSH3 0x280 PUSH3 0x210 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2C1 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2A2 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x2D3 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x31A DUP9 DUP4 DUP10 ADD PUSH3 0x226 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x340 DUP8 DUP3 DUP9 ADD PUSH3 0x226 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x394 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x3E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x889 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SELFBALANCE BLOCKHASH PUSH32 0x41D281300CEC2A9F644C0521D6E4697B4AF5985BC81DFE0F3C829C0064736F6C PUSH4 0x43000809 STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR PUSH24 0x35FC9B64141619A1475F5430652E71E3555D3C88FB9FE8A5 PUSH9 0x136513514F64736F6C PUSH4 0x43000809 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        432,
        10062
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "LT",
      "path": "13"
    },
    "9": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xB9"
    },
    "13": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "14": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "16": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "17": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "19": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "SHR",
      "path": "13"
    },
    "20": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6386CD17"
    },
    "26": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "GT",
      "path": "13"
    },
    "27": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x6C"
    },
    "31": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6386CD17"
    },
    "38": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x213"
    },
    "43": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "45": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x78FE17E5"
    },
    "50": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "51": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x22B"
    },
    "55": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "56": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "57": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7FF58AD9"
    },
    "62": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "63": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x25F"
    },
    "67": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "68": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "69": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB141D781"
    },
    "74": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "75": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x277"
    },
    "79": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "80": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "81": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD1BC6CAA"
    },
    "86": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2B3"
    },
    "91": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "92": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "93": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDB006A75"
    },
    "98": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x309"
    },
    "103": {
      "fn": null,
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "104": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3619,
        3627
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 0,
      "value": "0x0"
    },
    "106": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3619,
        3627
      ],
      "op": "DUP1",
      "path": "13"
    },
    "107": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3619,
        3627
      ],
      "op": "REVERT",
      "path": "13"
    },
    "108": {
      "offset": [
        432,
        10062
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "109": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "110": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6FBD1F2"
    },
    "115": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "116": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF3"
    },
    "120": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "121": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "122": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7BEC66F"
    },
    "127": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "128": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x12B"
    },
    "132": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "133": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "134": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x150B7A02"
    },
    "139": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "140": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x144"
    },
    "144": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "145": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "146": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x379607F5"
    },
    "151": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "152": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x183"
    },
    "156": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "157": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "158": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x44C9AF28"
    },
    "163": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "164": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1A8"
    },
    "168": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "169": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "DUP1",
      "path": "13"
    },
    "170": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6313531F"
    },
    "175": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "EQ",
      "path": "13"
    },
    "176": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1EE"
    },
    "180": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "181": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3619,
        3627
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "183": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3619,
        3627
      ],
      "op": "DUP1",
      "path": "13"
    },
    "184": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3619,
        3627
      ],
      "op": "REVERT",
      "path": "13"
    },
    "185": {
      "offset": [
        432,
        10062
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "186": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "187": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xEE"
    },
    "191": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        432,
        10062
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "192": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3537,
        3568
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 1,
      "value": "0x40"
    },
    "194": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3537,
        3568
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "195": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3558,
        3567
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "196": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3558,
        3567
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "197": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3546,
        3556
      ],
      "op": "CALLER",
      "path": "13"
    },
    "198": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3546,
        3556
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "199": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3537,
        3568
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "232": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3537,
        3568
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "233": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3537,
        3568
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "235": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3537,
        3568
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "236": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3537,
        3568
      ],
      "op": "LOG3",
      "path": "13"
    },
    "237": {
      "offset": [
        432,
        10062
      ],
      "op": "STOP",
      "path": "13"
    },
    "238": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        432,
        10062
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "239": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3619,
        3627
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "241": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3619,
        3627
      ],
      "op": "DUP1",
      "path": "13"
    },
    "242": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3619,
        3627
      ],
      "op": "REVERT",
      "path": "13"
    },
    "243": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "244": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "245": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "DUP1",
      "path": "13"
    },
    "246": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "247": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x100"
    },
    "251": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "252": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "254": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "DUP1",
      "path": "13"
    },
    "255": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "REVERT",
      "path": "13"
    },
    "256": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "257": {
      "op": "POP"
    },
    "258": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x118"
    },
    "262": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x112"
    },
    "266": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "267": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "269": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1131"
    },
    "273": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        5500,
        6692
      ],
      "op": "JUMP",
      "path": "13"
    },
    "274": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "275": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x32E"
    },
    "279": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        5500,
        6692
      ],
      "op": "JUMP",
      "path": "13"
    },
    "280": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "281": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "283": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "284": {
      "op": "SWAP1"
    },
    "285": {
      "op": "DUP2"
    },
    "286": {
      "op": "MSTORE"
    },
    "287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "289": {
      "op": "ADD"
    },
    "290": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "291": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "293": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "294": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "DUP1",
      "path": "13"
    },
    "295": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "296": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "SUB",
      "path": "13"
    },
    "297": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "298": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "RETURN",
      "path": "13"
    },
    "299": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "300": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x142"
    },
    "304": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x13C"
    },
    "308": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "309": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "311": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11CA"
    },
    "315": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        8994,
        9596
      ],
      "op": "JUMP",
      "path": "13"
    },
    "316": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "317": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x5FD"
    },
    "321": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        8994,
        9596
      ],
      "op": "JUMP",
      "path": "13"
    },
    "322": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "323": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "STOP",
      "path": "13"
    },
    "324": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "325": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "326": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "DUP1",
      "path": "13"
    },
    "327": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "328": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x151"
    },
    "332": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "333": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "335": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "DUP1",
      "path": "13"
    },
    "336": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "REVERT",
      "path": "13"
    },
    "337": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "338": {
      "op": "POP"
    },
    "339": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x169"
    },
    "343": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x163"
    },
    "347": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "348": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "350": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11E4"
    },
    "354": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "i",
      "offset": [
        9729,
        10060
      ],
      "op": "JUMP",
      "path": "13"
    },
    "355": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "356": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x736"
    },
    "360": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "i",
      "offset": [
        9729,
        10060
      ],
      "op": "JUMP",
      "path": "13"
    },
    "361": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "362": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "364": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "369": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "371": {
      "op": "SHL"
    },
    "372": {
      "op": "SUB"
    },
    "373": {
      "op": "NOT"
    },
    "374": {
      "op": "SWAP1"
    },
    "375": {
      "op": "SWAP2"
    },
    "376": {
      "op": "AND"
    },
    "377": {
      "op": "DUP2"
    },
    "378": {
      "op": "MSTORE"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "381": {
      "op": "ADD"
    },
    "382": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x122"
    },
    "386": {
      "op": "JUMP"
    },
    "387": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "388": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "389": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "390": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "391": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x190"
    },
    "395": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "396": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "398": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "399": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "REVERT",
      "path": "13"
    },
    "400": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "401": {
      "op": "POP"
    },
    "402": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x142"
    },
    "406": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1A2"
    },
    "410": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "411": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "413": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11CA"
    },
    "417": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8100,
        8823
      ],
      "op": "JUMP",
      "path": "13"
    },
    "418": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "419": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x78D"
    },
    "423": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8100,
        8823
      ],
      "op": "JUMP",
      "path": "13"
    },
    "424": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "425": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "426": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "DUP1",
      "path": "13"
    },
    "427": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "428": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1B5"
    },
    "432": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "433": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "435": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "DUP1",
      "path": "13"
    },
    "436": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "REVERT",
      "path": "13"
    },
    "437": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "438": {
      "op": "POP"
    },
    "439": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1DF"
    },
    "443": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1C7"
    },
    "447": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "448": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "450": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11CA"
    },
    "454": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        4548,
        4662
      ],
      "op": "JUMP",
      "path": "13"
    },
    "455": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "456": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4606,
        4611
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "458": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4649
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 2
    },
    "459": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4649
      ],
      "op": "DUP2",
      "path": "13"
    },
    "460": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4649
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "461": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4649
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "463": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4649
      ],
      "op": "DUP2",
      "path": "13"
    },
    "464": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4649
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "465": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4649
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "466": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4649
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "468": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4649
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "469": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4649
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "470": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "472": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4655
      ],
      "op": "ADD",
      "path": "13"
    },
    "473": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4655
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "474": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "476": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4655
      ],
      "op": "AND",
      "path": "13"
    },
    "477": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4630,
        4655
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "478": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "JUMP",
      "path": "13"
    },
    "479": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "480": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "482": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "483": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x122"
    },
    "487": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "488": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "489": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4548,
        4662
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x12A2"
    },
    "493": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        4548,
        4662
      ],
      "op": "JUMP",
      "path": "13"
    },
    "494": {
      "offset": [
        3309,
        3332
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "495": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "496": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "DUP1",
      "path": "13"
    },
    "497": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "498": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1FB"
    },
    "502": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "503": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "505": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "DUP1",
      "path": "13"
    },
    "506": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "REVERT",
      "path": "13"
    },
    "507": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "508": {
      "op": "POP"
    },
    "509": {
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x118"
    },
    "513": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x20D"
    },
    "517": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "518": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "520": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11CA"
    },
    "524": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        3309,
        3332
      ],
      "op": "JUMP",
      "path": "13"
    },
    "525": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "526": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xAA1"
    },
    "530": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        3309,
        3332
      ],
      "op": "JUMP",
      "path": "13"
    },
    "531": {
      "offset": [
        3461,
        3488
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "532": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "533": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "DUP1",
      "path": "13"
    },
    "534": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "535": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x220"
    },
    "539": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "540": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "542": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "DUP1",
      "path": "13"
    },
    "543": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "REVERT",
      "path": "13"
    },
    "544": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "545": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "POP",
      "path": "13"
    },
    "546": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x118"
    },
    "550": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "552": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "553": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "DUP2",
      "path": "13"
    },
    "554": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        3461,
        3488
      ],
      "op": "JUMP",
      "path": "13"
    },
    "555": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "556": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "557": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "DUP1",
      "path": "13"
    },
    "558": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "559": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x238"
    },
    "563": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "564": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "566": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "DUP1",
      "path": "13"
    },
    "567": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "REVERT",
      "path": "13"
    },
    "568": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "569": {
      "op": "POP"
    },
    "570": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x250"
    },
    "574": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x24A"
    },
    "578": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "579": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "581": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11CA"
    },
    "585": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4160,
        4322
      ],
      "op": "JUMP",
      "path": "13"
    },
    "586": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "587": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xAC3"
    },
    "591": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4160,
        4322
      ],
      "op": "JUMP",
      "path": "13"
    },
    "592": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "593": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "595": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "596": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x122"
    },
    "600": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "601": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "602": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1319"
    },
    "606": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4160,
        4322
      ],
      "op": "JUMP",
      "path": "13"
    },
    "607": {
      "offset": [
        584,
        615
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "608": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "609": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "DUP1",
      "path": "13"
    },
    "610": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "611": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x26C"
    },
    "615": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "616": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "618": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "DUP1",
      "path": "13"
    },
    "619": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "REVERT",
      "path": "13"
    },
    "620": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "621": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "POP",
      "path": "13"
    },
    "622": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x118"
    },
    "626": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "628": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "629": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "DUP2",
      "path": "13"
    },
    "630": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        584,
        615
      ],
      "op": "JUMP",
      "path": "13"
    },
    "631": {
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "632": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "633": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "634": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "635": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x284"
    },
    "639": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "640": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "642": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "643": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "REVERT",
      "path": "13"
    },
    "644": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x29C"
    },
    "650": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x296"
    },
    "654": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "655": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "657": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11CA"
    },
    "661": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        484,
        537
      ],
      "op": "JUMP",
      "path": "13"
    },
    "662": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "663": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xB70"
    },
    "667": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        484,
        537
      ],
      "op": "JUMP",
      "path": "13"
    },
    "668": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "669": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "671": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "672": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x122"
    },
    "676": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP10",
      "path": "13"
    },
    "677": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP9",
      "path": "13"
    },
    "678": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "679": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "680": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "681": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "682": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "683": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "684": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "685": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "686": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x132E"
    },
    "690": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        484,
        537
      ],
      "op": "JUMP",
      "path": "13"
    },
    "691": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "692": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "693": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "DUP1",
      "path": "13"
    },
    "694": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "695": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2C0"
    },
    "699": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "700": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "702": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "DUP1",
      "path": "13"
    },
    "703": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "REVERT",
      "path": "13"
    },
    "704": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "705": {
      "op": "POP"
    },
    "706": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2F0"
    },
    "710": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2D2"
    },
    "714": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "715": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "717": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11CA"
    },
    "721": {
      "fn": "FractionalizeNFT.getERC20Address",
      "jump": "i",
      "offset": [
        3841,
        3971
      ],
      "op": "JUMP",
      "path": "13"
    },
    "722": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "723": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3906,
        3913
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "725": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3951
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 3
    },
    "726": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3951
      ],
      "op": "DUP2",
      "path": "13"
    },
    "727": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3951
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "728": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3951
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "730": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3951
      ],
      "op": "DUP2",
      "path": "13"
    },
    "731": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3951
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "732": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3951
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "733": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3951
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "735": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3951
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "736": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3951
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "737": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3964
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "739": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3964
      ],
      "op": "ADD",
      "path": "13"
    },
    "740": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3964
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "747": {
      "op": "SHL"
    },
    "748": {
      "op": "SUB"
    },
    "749": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3964
      ],
      "op": "AND",
      "path": "13"
    },
    "750": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3932,
        3964
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "751": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "JUMP",
      "path": "13"
    },
    "752": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "753": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "755": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "762": {
      "op": "SHL"
    },
    "763": {
      "op": "SUB"
    },
    "764": {
      "op": "SWAP1"
    },
    "765": {
      "op": "SWAP2"
    },
    "766": {
      "op": "AND"
    },
    "767": {
      "op": "DUP2"
    },
    "768": {
      "op": "MSTORE"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "771": {
      "op": "ADD"
    },
    "772": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        3841,
        3971
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x122"
    },
    "776": {
      "op": "JUMP"
    },
    "777": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "778": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "779": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "DUP1",
      "path": "13"
    },
    "780": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "781": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x316"
    },
    "785": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "786": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "788": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "DUP1",
      "path": "13"
    },
    "789": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "REVERT",
      "path": "13"
    },
    "790": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "791": {
      "op": "POP"
    },
    "792": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x142"
    },
    "796": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x328"
    },
    "800": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "801": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "803": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11CA"
    },
    "807": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7067,
        7745
      ],
      "op": "JUMP",
      "path": "13"
    },
    "808": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "809": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xCF5"
    },
    "813": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7067,
        7745
      ],
      "op": "JUMP",
      "path": "13"
    },
    "814": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "815": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 4,
      "value": "0x40"
    },
    "817": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "818": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "823": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "825": {
      "op": "SHL"
    },
    "826": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "DUP2",
      "path": "13"
    },
    "827": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "828": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5738,
        5745
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "830": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5738,
        5745
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "831": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5777,
        5795
      ],
      "op": "DUP8",
      "path": "13"
    },
    "832": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5777,
        5795
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "839": {
      "op": "SHL"
    },
    "840": {
      "op": "SUB"
    },
    "841": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5826
      ],
      "op": "DUP3",
      "path": "13"
    },
    "842": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5826
      ],
      "op": "AND",
      "path": "13"
    },
    "843": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5826
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "844": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5826
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x42842E0E"
    },
    "849": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5826
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "850": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x365"
    },
    "854": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "855": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5827,
        5837
      ],
      "op": "CALLER",
      "path": "13"
    },
    "856": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5827,
        5837
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "857": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5847,
        5851
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "858": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5847,
        5851
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "859": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5854,
        5864
      ],
      "op": "DUP13",
      "path": "13"
    },
    "860": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5854,
        5864
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "861": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "863": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "ADD",
      "path": "13"
    },
    "864": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x13B1"
    },
    "868": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        5806,
        5865
      ],
      "op": "JUMP",
      "path": "13"
    },
    "869": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "870": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "872": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "874": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "875": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "DUP1",
      "path": "13"
    },
    "876": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "DUP4",
      "path": "13"
    },
    "877": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "SUB",
      "path": "13"
    },
    "878": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "DUP2",
      "path": "13"
    },
    "879": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "881": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "DUP8",
      "path": "13"
    },
    "882": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "DUP1",
      "path": "13"
    },
    "883": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "884": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "885": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "DUP1",
      "path": "13"
    },
    "886": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "887": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x380"
    },
    "891": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "892": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "894": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "DUP1",
      "path": "13"
    },
    "895": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "REVERT",
      "path": "13"
    },
    "896": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "897": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "POP",
      "path": "13"
    },
    "898": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "GAS",
      "path": "13"
    },
    "899": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "CALL",
      "path": "13"
    },
    "900": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "901": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "DUP1",
      "path": "13"
    },
    "902": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "903": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x395"
    },
    "907": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "908": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "909": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "911": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "DUP1",
      "path": "13"
    },
    "912": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "913": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "914": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "916": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "REVERT",
      "path": "13"
    },
    "917": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "918": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "POP",
      "path": "13"
    },
    "919": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "POP",
      "path": "13"
    },
    "920": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "POP",
      "path": "13"
    },
    "921": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5806,
        5865
      ],
      "op": "POP",
      "path": "13"
    },
    "922": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5875,
        5886
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "924": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5921,
        5930
      ],
      "op": "DUP7",
      "path": "13"
    },
    "925": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5944,
        5955
      ],
      "op": "DUP7",
      "path": "13"
    },
    "926": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5969,
        5980
      ],
      "op": "DUP7",
      "path": "13"
    },
    "927": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5994,
        6004
      ],
      "op": "CALLER",
      "path": "13"
    },
    "928": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "930": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "931": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3AD"
    },
    "935": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "936": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xFA3"
    },
    "940": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        5889,
        6014
      ],
      "op": "JUMP",
      "path": "13"
    },
    "941": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "942": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3BC"
    },
    "946": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "947": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "948": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "949": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "950": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "951": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x13D5"
    },
    "955": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        5889,
        6014
      ],
      "op": "JUMP",
      "path": "13"
    },
    "956": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "957": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "959": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "960": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "DUP1",
      "path": "13"
    },
    "961": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "962": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "SUB",
      "path": "13"
    },
    "963": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "964": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "966": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "CREATE",
      "path": "13"
    },
    "967": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "DUP1",
      "path": "13"
    },
    "968": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "969": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "DUP1",
      "path": "13"
    },
    "970": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "971": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3D9"
    },
    "975": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "976": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "977": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "979": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "DUP1",
      "path": "13"
    },
    "980": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "981": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "982": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "984": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "REVERT",
      "path": "13"
    },
    "985": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "986": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5889,
        6014
      ],
      "op": "POP",
      "path": "13"
    },
    "987": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5875,
        6014
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "988": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5875,
        6014
      ],
      "op": "POP",
      "path": "13"
    },
    "989": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6024,
        6041
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "991": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6044,
        6056
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "993": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6044,
        6056
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "994": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6024,
        6056
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "995": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6024,
        6056
      ],
      "op": "POP",
      "path": "13"
    },
    "996": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 5,
      "value": "0x40"
    },
    "998": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "999": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1000": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x120"
    },
    "1003": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1004": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1006": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1007": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1008": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6134,
        6143
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1009": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1010": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1011": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1013": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1014": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6169,
        6179
      ],
      "op": "DUP11",
      "path": "13"
    },
    "1015": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1016": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1017": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1019": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1020": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6208,
        6226
      ],
      "op": "DUP12",
      "path": "13"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1027": {
      "op": "SHL"
    },
    "1028": {
      "op": "SUB"
    },
    "1029": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "AND",
      "path": "13"
    },
    "1030": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1031": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1032": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1034": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1035": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6262,
        6267
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "SUB"
    },
    "1044": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "AND",
      "path": "13"
    },
    "1045": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1046": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1047": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1049": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1050": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6295,
        6306
      ],
      "op": "DUP9",
      "path": "13"
    },
    "1051": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1052": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1053": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1055": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1056": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6331,
        6340
      ],
      "op": "DUP10",
      "path": "13"
    },
    "1057": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1058": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1059": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1061": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1062": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6377,
        6387
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1069": {
      "op": "SHL"
    },
    "1070": {
      "op": "SUB"
    },
    "1071": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "AND",
      "path": "13"
    },
    "1072": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1073": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1074": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1076": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1077": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6415,
        6426
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1078": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1079": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1080": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1082": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1083": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6447,
        6467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1085": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1087": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1088": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "GT",
      "path": "13"
    },
    "1089": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1090": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x450"
    },
    "1094": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1095": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x450"
    },
    "1099": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1269"
    },
    "1103": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6091,
        6478
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1104": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1105": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1106": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6091,
        6478
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1107": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6075,
        6087
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1109": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6075,
        6087
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1110": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6075,
        6087
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1111": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6074
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1113": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1114": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1115": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1116": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1118": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1119": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1120": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1121": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1123": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1124": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1125": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1126": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6088
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1127": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1128": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1129": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1130": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1131": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1132": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1133": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1134": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1135": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1136": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1137": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1138": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1139": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1140": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1141": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1142": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1143": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1144": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1145": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1146": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1148": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1149": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1150": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1151": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1158": {
      "op": "SHL"
    },
    "1159": {
      "op": "SUB"
    },
    "1160": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1161": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1162": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "AND",
      "path": "13"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1169": {
      "op": "SHL"
    },
    "1170": {
      "op": "SUB"
    },
    "1171": {
      "op": "NOT"
    },
    "1172": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1173": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1174": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "AND",
      "path": "13"
    },
    "1175": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "OR",
      "path": "13"
    },
    "1176": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1177": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1178": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1179": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "1181": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1182": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1183": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1184": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1186": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1187": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1188": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1189": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1190": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1191": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1192": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1193": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "AND",
      "path": "13"
    },
    "1194": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1195": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "AND",
      "path": "13"
    },
    "1196": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "OR",
      "path": "13"
    },
    "1197": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1198": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1199": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "1201": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1202": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1203": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1204": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1205": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1206": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4C7"
    },
    "1210": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1211": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1213": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1214": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1215": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1216": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1217": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1218": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xFB1"
    },
    "1222": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6066,
        6478
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1223": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "1227": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1228": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1229": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1230": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1231": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1232": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4E5"
    },
    "1236": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1237": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "1239": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1240": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1241": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1242": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1244": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1245": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1246": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1247": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1248": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xFB1"
    },
    "1252": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6066,
        6478
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1253": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1254": {
      "op": "POP"
    },
    "1255": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC0"
    },
    "1257": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1258": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1259": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1260": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "1262": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1263": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1264": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1265": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1272": {
      "op": "SHL"
    },
    "1273": {
      "op": "SUB"
    },
    "1274": {
      "op": "NOT"
    },
    "1275": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "AND",
      "path": "13"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "op": "SUB"
    },
    "1284": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1285": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1286": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "AND",
      "path": "13"
    },
    "1287": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1288": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1289": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1290": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "OR",
      "path": "13"
    },
    "1291": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1292": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1293": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "1295": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1296": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1297": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1298": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "1300": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1301": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1302": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1303": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "1306": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1307": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1308": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1309": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1311": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1312": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ADD",
      "path": "13"
    },
    "1313": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1314": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1317": {
      "op": "NOT"
    },
    "1318": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "AND",
      "path": "13"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1322": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1324": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1325": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "GT",
      "path": "13"
    },
    "1326": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1327": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x53D"
    },
    "1331": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1332": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x53D"
    },
    "1336": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1269"
    },
    "1340": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6066,
        6478
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1341": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1342": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "MUL",
      "path": "13"
    },
    "1343": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "OR",
      "path": "13"
    },
    "1344": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1345": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6066,
        6478
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1346": {
      "op": "POP"
    },
    "1347": {
      "op": "POP"
    },
    "1348": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6500,
        6512
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 6,
      "value": "0x1"
    },
    "1350": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6500,
        6512
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1351": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6500,
        6512
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1352": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6494
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1354": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1355": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1356": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1357": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1358": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "ADD",
      "path": "13"
    },
    "1359": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1360": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1363": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1364": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1365": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1366": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "1399": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1400": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1401": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "ADD",
      "path": "13"
    },
    "1402": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1403": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1404": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6488,
        6513
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1405": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6538,
        6551
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 7
    },
    "1406": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6538,
        6551
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1407": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6523,
        6535
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1409": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6523,
        6551
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1410": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6500,
        6512
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1411": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6500,
        6512
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1412": {
      "op": "POP"
    },
    "1413": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6500,
        6512
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1414": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6500,
        6512
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1415": {
      "op": "SWAP1"
    },
    "1416": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6561,
        6578
      ],
      "op": "PUSH3",
      "path": "13",
      "statement": 8,
      "value": "0x594"
    },
    "1420": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6561,
        6578
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1421": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6500,
        6512
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1422": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6500,
        6512
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1423": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6561,
        6578
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1436"
    },
    "1427": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6561,
        6578
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1428": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6561,
        6578
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1429": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6561,
        6578
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1430": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6561,
        6578
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1431": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6561,
        6578
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1432": {
      "op": "POP"
    },
    "1433": {
      "op": "POP"
    },
    "1434": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x40"
    },
    "1436": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1437": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x5A9"
    },
    "1441": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1442": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6631,
        6642
      ],
      "op": "DUP9",
      "path": "13"
    },
    "1443": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6631,
        6642
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1444": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1451"
    },
    "1448": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6593,
        6659
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1449": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1450": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1452": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1453": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1454": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1455": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1456": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "SUB",
      "path": "13"
    },
    "1457": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1458": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "op": "SUB"
    },
    "1467": {
      "op": "DUP5"
    },
    "1468": {
      "op": "AND"
    },
    "1469": {
      "op": "DUP3"
    },
    "1470": {
      "op": "MSTORE"
    },
    "1471": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1472": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6620,
        6629
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1473": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6620,
        6629
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1474": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6608,
        6618
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1475": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6608,
        6618
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1476": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xE2C8AEFC9D0A52C93C762509EEEAC2A518C41C52F791B6888C0673D07312C605"
    },
    "1509": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1512": {
      "op": "ADD"
    },
    "1513": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1515": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1516": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1517": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1518": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "SUB",
      "path": "13"
    },
    "1519": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1520": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6593,
        6659
      ],
      "op": "LOG4",
      "path": "13"
    },
    "1521": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6676,
        6685
      ],
      "op": "SWAP10",
      "path": "13",
      "statement": 10
    },
    "1522": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5500,
        6692
      ],
      "op": "SWAP9",
      "path": "13"
    },
    "1523": {
      "op": "POP"
    },
    "1524": {
      "op": "POP"
    },
    "1525": {
      "op": "POP"
    },
    "1526": {
      "op": "POP"
    },
    "1527": {
      "op": "POP"
    },
    "1528": {
      "op": "POP"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "op": "POP"
    },
    "1532": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "o",
      "offset": [
        5500,
        6692
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1533": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1534": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9196
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 11,
      "value": "0x0"
    },
    "1536": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9207
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1537": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9207
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1538": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9207
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1539": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9207
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1541": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9207
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1542": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9207
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1543": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9207
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1544": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9207
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1546": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9207
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1547": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9207
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1548": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "1550": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9219
      ],
      "op": "ADD",
      "path": "13"
    },
    "1551": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9188,
        9219
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1552": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9175,
        9184
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1553": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9175,
        9219
      ],
      "op": "LT",
      "path": "13"
    },
    "1554": {
      "branch": 27,
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9175,
        9219
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1555": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x674"
    },
    "1559": {
      "branch": 27,
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1560": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1562": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1563": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1569": {
      "op": "SHL"
    },
    "1570": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1571": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1574": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1576": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1577": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "ADD",
      "path": "13"
    },
    "1578": {
      "op": "MSTORE"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1583": {
      "op": "DUP3"
    },
    "1584": {
      "op": "ADD"
    },
    "1585": {
      "op": "MSTORE"
    },
    "1586": {
      "op": "PUSH32",
      "value": "0x53656E6465722073656E74206C657373207468616E20746865206275796F7574"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1621": {
      "op": "DUP3"
    },
    "1622": {
      "op": "ADD"
    },
    "1623": {
      "op": "MSTORE"
    },
    "1624": {
      "op": "PUSH7",
      "value": "0x10383934B1B297"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1637": {
      "op": "DUP3"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "op": "MSTORE"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1644": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1646": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1647": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1648": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1649": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "SUB",
      "path": "13"
    },
    "1650": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1651": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "13"
    },
    "1652": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9154,
        9284
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1653": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9302
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 12,
      "value": "0x0"
    },
    "1655": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1656": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1657": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1658": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1660": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1661": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1662": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1663": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1665": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1666": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1667": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1668": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9313
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1669": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9319
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1671": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9319
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1672": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9319
      ],
      "op": "ADD",
      "path": "13"
    },
    "1673": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9337
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1674": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9337
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1677": {
      "op": "NOT"
    },
    "1678": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9337
      ],
      "op": "AND",
      "path": "13"
    },
    "1679": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9322,
        9337
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1681": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9337
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1682": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9337
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1683": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9337
      ],
      "op": "OR",
      "path": "13"
    },
    "1684": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9337
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1685": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9337
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1686": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9337
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1687": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9370,
        9403
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1688": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9370,
        9403
      ],
      "op": "ADD",
      "path": "13"
    },
    "1689": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9370,
        9403
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1690": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9294,
        9337
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1692": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9502,
        9532
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 13
    },
    "1693": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9502,
        9532
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1694": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9502,
        9532
      ],
      "op": "ADD",
      "path": "13"
    },
    "1695": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9502,
        9532
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1696": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1697": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1698": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1705": {
      "op": "SHL"
    },
    "1706": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1707": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1714": {
      "op": "SHL"
    },
    "1715": {
      "op": "SUB"
    },
    "1716": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9370,
        9403
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1717": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9370,
        9403
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1718": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9370,
        9403
      ],
      "op": "AND",
      "path": "13"
    },
    "1719": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9370,
        9403
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1720": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9370,
        9403
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1721": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9370,
        9403
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1722": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9437
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x42842E0E"
    },
    "1727": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9437
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1728": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x6D1"
    },
    "1732": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1733": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9459,
        9463
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "1734": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9459,
        9463
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1735": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9478,
        9488
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1736": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9478,
        9488
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1737": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1739": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "ADD",
      "path": "13"
    },
    "1740": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x13B1"
    },
    "1744": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        9414,
        9542
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1745": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1746": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1748": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1750": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1751": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1752": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1753": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "SUB",
      "path": "13"
    },
    "1754": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1755": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1757": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1758": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1759": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1760": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1761": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1762": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1763": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x6EC"
    },
    "1767": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1768": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1770": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1771": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1772": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1773": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "POP",
      "path": "13"
    },
    "1774": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "GAS",
      "path": "13"
    },
    "1775": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "CALL",
      "path": "13"
    },
    "1776": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1777": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1778": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1779": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x701"
    },
    "1783": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1784": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1785": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1787": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1788": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1789": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1790": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1792": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1793": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9414,
        9542
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9557,
        9589
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 14,
      "value": "0x40"
    },
    "1798": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9557,
        9589
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1799": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9579,
        9588
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1800": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9579,
        9588
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1801": {
      "op": "POP"
    },
    "1802": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9567,
        9577
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1803": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9567,
        9577
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1804": {
      "op": "POP"
    },
    "1805": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9557,
        9589
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xFBBD268BB69CF922E3840DC96A6702DC064BAF4B2D9594B5A66A2FE428F3F2AA"
    },
    "1838": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9557,
        9589
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1839": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9557,
        9589
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1841": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9557,
        9589
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1842": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9557,
        9589
      ],
      "op": "LOG3",
      "path": "13"
    },
    "1843": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9044,
        9596
      ],
      "op": "POP",
      "path": "13"
    },
    "1844": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        8994,
        9596
      ],
      "op": "POP",
      "path": "13"
    },
    "1845": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "o",
      "offset": [
        8994,
        9596
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1846": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1847": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9903,
        9926
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 15,
      "value": "0x40"
    },
    "1849": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9903,
        9926
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1850": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9880,
        9886
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1852": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9880,
        9886
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1853": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9915,
        9925
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1854": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9915,
        9925
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1855": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9903,
        9926
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xCCE71FC9CFCACC4CE8153BDE254A735AE423CDC2B7852FB754F4DE746AC3018F"
    },
    "1888": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9903,
        9926
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1889": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9880,
        9886
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1890": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9880,
        9886
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1891": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9903,
        9926
      ],
      "op": "LOG2",
      "path": "13"
    },
    "1892": {
      "op": "POP"
    },
    "1893": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9979,
        10039
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 16,
      "value": "0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F"
    },
    "1926": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "1927": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1928": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "POP",
      "path": "13"
    },
    "1929": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "POP",
      "path": "13"
    },
    "1930": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "POP",
      "path": "13"
    },
    "1931": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        9729,
        10060
      ],
      "op": "POP",
      "path": "13"
    },
    "1932": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "o",
      "offset": [
        9729,
        10060
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1933": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1934": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8201,
        8216
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 17,
      "value": "0x2"
    },
    "1936": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8180
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1938": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8191
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1939": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8191
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1940": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8191
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1941": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8191
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1943": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8191
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1944": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8191
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1945": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8191
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1946": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8191
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1948": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8191
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1949": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8191
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1950": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8197
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1952": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8197
      ],
      "op": "ADD",
      "path": "13"
    },
    "1953": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8197
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1954": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8197
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1956": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8197
      ],
      "op": "AND",
      "path": "13"
    },
    "1957": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8216
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1959": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8216
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1960": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8216
      ],
      "op": "GT",
      "path": "13"
    },
    "1961": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8216
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1962": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8216
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x7B8"
    },
    "1966": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8216
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1967": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8216
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x7B8"
    },
    "1971": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8216
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1269"
    },
    "1975": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8172,
        8216
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1976": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8216
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1977": {
      "branch": 28,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8172,
        8216
      ],
      "op": "EQ",
      "path": "13"
    },
    "1978": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8151,
        8285
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x81B"
    },
    "1982": {
      "branch": 28,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8151,
        8285
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1983": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8151,
        8285
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1985": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8151,
        8285
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1986": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1992": {
      "op": "SHL"
    },
    "1993": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8151,
        8285
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1994": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8151,
        8285
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1997": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8151,
        8285
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1999": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8151,
        8285
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2000": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8151,
        8285
      ],
      "op": "ADD",
      "path": "13"
    },
    "2001": {
      "op": "MSTORE"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2006": {
      "op": "DUP3"
    },
    "2007": {
      "op": "ADD"
    },
    "2008": {
      "op": "MSTORE"
    },
    "2009": {
      "op": "PUSH32",
      "value": "0x4672616374696F6E616C697A6564204E465420686173206E6F74206265656E20"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2044": {
      "op": "DUP3"
    },
    "2045": {
      "op": "ADD"
    },
    "2046": {
      "op": "MSTORE"
    },
    "2047": {
      "op": "PUSH11",
      "value": "0x3137BAB3B43A1037BABA17"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "2061": {
      "op": "SHL"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2064": {
      "op": "DUP3"
    },
    "2065": {
      "op": "ADD"
    },
    "2066": {
      "op": "MSTORE"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2069": {
      "op": "ADD"
    },
    "2070": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8151,
        8285
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x66B"
    },
    "2074": {
      "op": "JUMP"
    },
    "2075": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8151,
        8285
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2076": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8295,
        8306
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2078": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8334
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2079": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8334
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2080": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8334
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2081": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8334
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2083": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8334
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2084": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8334
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2085": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8334
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2086": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8334
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2088": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8334
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2089": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8334
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2090": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8334
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2091": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8347
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "2093": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8347
      ],
      "op": "ADD",
      "path": "13"
    },
    "2094": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8347
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2095": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2096": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2097": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2104": {
      "op": "SHL"
    },
    "2105": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2106": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2107": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8399,
        8409
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2108": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2110": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2111": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "ADD",
      "path": "13"
    },
    "2112": {
      "op": "MSTORE"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2119": {
      "op": "SHL"
    },
    "2120": {
      "op": "SUB"
    },
    "2121": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8347
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2122": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8347
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2123": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8347
      ],
      "op": "AND",
      "path": "13"
    },
    "2124": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8347
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2125": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8295,
        8306
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2126": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8347
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2127": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8315,
        8347
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2128": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8398
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70A08231"
    },
    "2133": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8398
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2136": {
      "op": "ADD"
    },
    "2137": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2139": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2141": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2142": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2143": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2144": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "SUB",
      "path": "13"
    },
    "2145": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2146": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2147": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2148": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2149": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2150": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2151": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2152": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x871"
    },
    "2156": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2157": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2159": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2160": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2161": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2162": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "POP",
      "path": "13"
    },
    "2163": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "GAS",
      "path": "13"
    },
    "2164": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "2165": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2166": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2167": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2168": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x886"
    },
    "2172": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2173": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2174": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2176": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2177": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2178": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2179": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2181": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2182": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2183": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "POP",
      "path": "13"
    },
    "2184": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "POP",
      "path": "13"
    },
    "2185": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "POP",
      "path": "13"
    },
    "2186": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "POP",
      "path": "13"
    },
    "2187": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2189": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2190": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2191": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2193": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "NOT",
      "path": "13"
    },
    "2194": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2196": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2197": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "ADD",
      "path": "13"
    },
    "2198": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "AND",
      "path": "13"
    },
    "2199": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2200": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "ADD",
      "path": "13"
    },
    "2201": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2202": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2204": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2205": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "POP",
      "path": "13"
    },
    "2206": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2207": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "ADD",
      "path": "13"
    },
    "2208": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2209": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x8AC"
    },
    "2213": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2214": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2215": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x146F"
    },
    "2219": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8383,
        8410
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2220": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8383,
        8410
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2221": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8358,
        8410
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2222": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8358,
        8410
      ],
      "op": "POP",
      "path": "13"
    },
    "2223": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8445,
        8446
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 18,
      "value": "0x0"
    },
    "2225": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8428,
        8442
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2226": {
      "branch": 29,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8428,
        8446
      ],
      "op": "GT",
      "path": "13"
    },
    "2227": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8420,
        8484
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x90A"
    },
    "2231": {
      "branch": 29,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8420,
        8484
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2232": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8420,
        8484
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2234": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8420,
        8484
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2241": {
      "op": "SHL"
    },
    "2242": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8420,
        8484
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2243": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8420,
        8484
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2246": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8420,
        8484
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2248": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8420,
        8484
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2249": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8420,
        8484
      ],
      "op": "ADD",
      "path": "13"
    },
    "2250": {
      "op": "MSTORE"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2255": {
      "op": "DUP3"
    },
    "2256": {
      "op": "ADD"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "op": "PUSH32",
      "value": "0x436C61696D657220646F6573206E6F7420686F6C6420616E7920746F6B656E73"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2293": {
      "op": "DUP3"
    },
    "2294": {
      "op": "ADD"
    },
    "2295": {
      "op": "MSTORE"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2300": {
      "op": "SHL"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2303": {
      "op": "DUP3"
    },
    "2304": {
      "op": "ADD"
    },
    "2305": {
      "op": "MSTORE"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2308": {
      "op": "ADD"
    },
    "2309": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8420,
        8484
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x66B"
    },
    "2313": {
      "op": "JUMP"
    },
    "2314": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8420,
        8484
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2315": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 19,
      "value": "0x40"
    },
    "2317": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2318": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2325": {
      "op": "SHL"
    },
    "2326": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2327": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8512
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2337": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8512
      ],
      "op": "AND",
      "path": "13"
    },
    "2338": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8512
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2339": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8512
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "2344": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8512
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2345": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x93C"
    },
    "2349": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2350": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8513,
        8523
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2351": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8513,
        8523
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2352": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8533,
        8537
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "2353": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8533,
        8537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2354": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8540,
        8554
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2355": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8540,
        8554
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2356": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2358": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "ADD",
      "path": "13"
    },
    "2359": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x13B1"
    },
    "2363": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8494,
        8555
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2364": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2365": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2367": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2369": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2370": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2371": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2372": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "SUB",
      "path": "13"
    },
    "2373": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2374": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2376": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2377": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2378": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2379": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2380": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2381": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2382": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x957"
    },
    "2386": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2387": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2389": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2390": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2391": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2392": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "POP",
      "path": "13"
    },
    "2393": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "GAS",
      "path": "13"
    },
    "2394": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "CALL",
      "path": "13"
    },
    "2395": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2396": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2397": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2398": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x96C"
    },
    "2402": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2403": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2404": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2406": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2407": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2408": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2409": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2411": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2412": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2413": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "POP",
      "path": "13"
    },
    "2414": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "POP",
      "path": "13"
    },
    "2415": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "POP",
      "path": "13"
    },
    "2416": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "POP",
      "path": "13"
    },
    "2417": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2419": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2420": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2421": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2423": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "NOT",
      "path": "13"
    },
    "2424": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2426": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2427": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "ADD",
      "path": "13"
    },
    "2428": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "AND",
      "path": "13"
    },
    "2429": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2430": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "ADD",
      "path": "13"
    },
    "2431": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2432": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2434": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2435": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "POP",
      "path": "13"
    },
    "2436": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2437": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "ADD",
      "path": "13"
    },
    "2438": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2439": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x992"
    },
    "2443": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2444": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2445": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1489"
    },
    "2449": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8494,
        8555
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2450": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2451": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8494,
        8555
      ],
      "op": "POP",
      "path": "13"
    },
    "2452": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8565,
        8584
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2454": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8592
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2461": {
      "op": "SHL"
    },
    "2462": {
      "op": "SUB"
    },
    "2463": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8604
      ],
      "op": "AND",
      "path": "13"
    },
    "2464": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8604
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x18160DDD"
    },
    "2469": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2471": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2472": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2473": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "2478": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "AND",
      "path": "13"
    },
    "2479": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "2481": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "SHL",
      "path": "13"
    },
    "2482": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2483": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2484": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2486": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "ADD",
      "path": "13"
    },
    "2487": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2489": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2491": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2492": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2493": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2494": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "SUB",
      "path": "13"
    },
    "2495": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2496": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2497": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2498": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2499": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2500": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2501": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2502": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x9CF"
    },
    "2506": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2507": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2509": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2510": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2511": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2512": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "POP",
      "path": "13"
    },
    "2513": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "GAS",
      "path": "13"
    },
    "2514": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "2515": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2516": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2517": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2518": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x9E4"
    },
    "2522": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2523": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2524": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2526": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2527": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2528": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2529": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2531": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2532": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2533": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "POP",
      "path": "13"
    },
    "2534": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "POP",
      "path": "13"
    },
    "2535": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "POP",
      "path": "13"
    },
    "2536": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "POP",
      "path": "13"
    },
    "2537": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2539": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2540": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2541": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2543": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "NOT",
      "path": "13"
    },
    "2544": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2546": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2547": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "ADD",
      "path": "13"
    },
    "2548": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "AND",
      "path": "13"
    },
    "2549": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2550": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "ADD",
      "path": "13"
    },
    "2551": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2552": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2554": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2555": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "POP",
      "path": "13"
    },
    "2556": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2557": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "ADD",
      "path": "13"
    },
    "2558": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2559": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xA0A"
    },
    "2563": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2564": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2565": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x146F"
    },
    "2569": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8587,
        8606
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2570": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8587,
        8606
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2571": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8616,
        8638
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2573": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8661
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2574": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8661
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2575": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8661
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2576": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8661
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2578": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8661
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2579": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8661
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2580": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8661
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2581": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8661
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2583": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8661
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2584": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8661
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2585": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8673
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "2587": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8673
      ],
      "op": "ADD",
      "path": "13"
    },
    "2588": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8673
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2589": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8565,
        8606
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2590": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8565,
        8606
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2591": {
      "op": "POP"
    },
    "2592": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8616,
        8638
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2593": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8565,
        8606
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2594": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8565,
        8606
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2595": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8702
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xA2F"
    },
    "2599": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8702
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2600": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8688,
        8702
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2601": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8688,
        8702
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2602": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8702
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x14AD"
    },
    "2606": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8642,
        8702
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2607": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8642,
        8702
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2608": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8641,
        8717
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xA3B"
    },
    "2612": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8641,
        8717
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2613": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8641,
        8717
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2614": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8641,
        8717
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x14CF"
    },
    "2618": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8641,
        8717
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2619": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8641,
        8717
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2620": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 20,
      "value": "0x40"
    },
    "2622": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2623": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8616,
        8717
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2624": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8616,
        8717
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2625": {
      "op": "POP"
    },
    "2626": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8735,
        8745
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2627": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8735,
        8745
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2628": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2629": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2630": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8FC"
    },
    "2633": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "MUL",
      "path": "13"
    },
    "2634": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2635": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8616,
        8717
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2636": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8616,
        8717
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2637": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2639": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2640": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2641": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2642": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8616,
        8717
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2643": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8735,
        8745
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2644": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2645": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "CALL",
      "path": "13"
    },
    "2646": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2647": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "POP",
      "path": "13"
    },
    "2648": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "POP",
      "path": "13"
    },
    "2649": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "POP",
      "path": "13"
    },
    "2650": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "POP",
      "path": "13"
    },
    "2651": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2652": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2653": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2654": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xA6C"
    },
    "2658": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2659": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2660": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2662": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2663": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2664": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2665": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2667": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2668": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8771
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2669": {
      "op": "POP"
    },
    "2670": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8786,
        8816
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 21,
      "value": "0x40"
    },
    "2672": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8786,
        8816
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2673": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8806,
        8815
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2674": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8806,
        8815
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2675": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8794,
        8804
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2676": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8794,
        8804
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2677": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8786,
        8816
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
    },
    "2710": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8786,
        8816
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2711": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8786,
        8816
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2713": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8786,
        8816
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2714": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8786,
        8816
      ],
      "op": "LOG3",
      "path": "13"
    },
    "2715": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8141,
        8823
      ],
      "op": "POP",
      "path": "13"
    },
    "2716": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8141,
        8823
      ],
      "op": "POP",
      "path": "13"
    },
    "2717": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8141,
        8823
      ],
      "op": "POP",
      "path": "13"
    },
    "2718": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8141,
        8823
      ],
      "op": "POP",
      "path": "13"
    },
    "2719": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8100,
        8823
      ],
      "op": "POP",
      "path": "13"
    },
    "2720": {
      "fn": "FractionalizeNFT.claim",
      "jump": "o",
      "offset": [
        8100,
        8823
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2721": {
      "offset": [
        3309,
        3332
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2722": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2724": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2725": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2726": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2727": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2728": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "LT",
      "path": "13"
    },
    "2729": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xAB2"
    },
    "2733": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2734": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2736": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2737": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2738": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2739": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2741": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2742": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2743": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2744": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2746": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2747": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2748": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2749": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "ADD",
      "path": "13"
    },
    "2750": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2751": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3309,
        3332
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2752": {
      "op": "POP"
    },
    "2753": {
      "offset": [
        3309,
        3332
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2754": {
      "fn": "FractionalizeNFT.claim",
      "jump": "o",
      "offset": [
        3309,
        3332
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2755": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2756": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4292
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 22,
      "value": "0x0"
    },
    "2758": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4303
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2759": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4303
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2760": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4303
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2761": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4303
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2763": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4303
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2764": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4303
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2765": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4303
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2766": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4303
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2768": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4303
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2769": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4303
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2770": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2772": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4315
      ],
      "op": "ADD",
      "path": "13"
    },
    "2773": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2774": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2775": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4248,
        4261
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2777": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4248,
        4261
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2778": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4284,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2779": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xAE5"
    },
    "2783": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2784": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x14F2"
    },
    "2788": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4277,
        4315
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2789": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2790": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2791": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2793": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "ADD",
      "path": "13"
    },
    "2794": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2796": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2797": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2798": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DIV",
      "path": "13"
    },
    "2799": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "MUL",
      "path": "13"
    },
    "2800": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2802": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "ADD",
      "path": "13"
    },
    "2803": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2805": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2806": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2807": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2808": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "ADD",
      "path": "13"
    },
    "2809": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2811": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2812": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2813": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2814": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2815": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2816": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2817": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2818": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2819": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2821": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "ADD",
      "path": "13"
    },
    "2822": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2823": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2824": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2825": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xB13"
    },
    "2829": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2830": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x14F2"
    },
    "2834": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4277,
        4315
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2835": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2836": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2837": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2838": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xB64"
    },
    "2842": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2843": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2844": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2846": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "LT",
      "path": "13"
    },
    "2847": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xB38"
    },
    "2851": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2852": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "2855": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2856": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2857": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2858": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DIV",
      "path": "13"
    },
    "2859": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "MUL",
      "path": "13"
    },
    "2860": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2861": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2862": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2863": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2865": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "ADD",
      "path": "13"
    },
    "2866": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2867": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xB64"
    },
    "2871": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2872": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2873": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2874": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "ADD",
      "path": "13"
    },
    "2875": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2876": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2877": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2879": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2880": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2882": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2884": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2885": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2886": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2887": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2888": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2889": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2890": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2891": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2892": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2894": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "ADD",
      "path": "13"
    },
    "2895": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2896": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2898": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "ADD",
      "path": "13"
    },
    "2899": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2900": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2901": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "GT",
      "path": "13"
    },
    "2902": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xB46"
    },
    "2906": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2907": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2908": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2909": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SUB",
      "path": "13"
    },
    "2910": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2912": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "AND",
      "path": "13"
    },
    "2913": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2914": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "ADD",
      "path": "13"
    },
    "2915": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2916": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2917": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "POP",
      "path": "13"
    },
    "2918": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "POP",
      "path": "13"
    },
    "2919": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "POP",
      "path": "13"
    },
    "2920": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "POP",
      "path": "13"
    },
    "2921": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "POP",
      "path": "13"
    },
    "2922": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2923": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4277,
        4315
      ],
      "op": "POP",
      "path": "13"
    },
    "2924": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2925": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2926": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4160,
        4322
      ],
      "op": "POP",
      "path": "13"
    },
    "2927": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "o",
      "offset": [
        4160,
        4322
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2928": {
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2929": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2931": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2933": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2934": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2935": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2936": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2937": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2938": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2939": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2941": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2942": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2943": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2944": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2945": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2947": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2948": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "2949": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2950": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2952": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2953": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "2954": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2955": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "2957": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2958": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "2959": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2960": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2962": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2963": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "2964": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2965": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2966": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2967": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "2968": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2969": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "op": "SUB"
    },
    "2978": {
      "offset": [
        484,
        537
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2979": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2980": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "AND",
      "path": "13"
    },
    "2981": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2982": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2983": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2984": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2985": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "AND",
      "path": "13"
    },
    "2986": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2987": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xBB5"
    },
    "2991": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2992": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x14F2"
    },
    "2996": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        484,
        537
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2997": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2998": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2999": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3001": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3002": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3004": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3005": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3006": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DIV",
      "path": "13"
    },
    "3007": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MUL",
      "path": "13"
    },
    "3008": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3010": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3011": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3013": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3014": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3015": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3016": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3017": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3019": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3020": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3021": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3022": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3023": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3024": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3025": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3026": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3027": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3029": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3030": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3031": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3032": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3033": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xBE3"
    },
    "3037": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3038": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x14F2"
    },
    "3042": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        484,
        537
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3043": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3044": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3045": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3046": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC34"
    },
    "3050": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3051": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3052": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3054": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "LT",
      "path": "13"
    },
    "3055": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC08"
    },
    "3059": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3060": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "3063": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3064": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3065": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3066": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DIV",
      "path": "13"
    },
    "3067": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MUL",
      "path": "13"
    },
    "3068": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3069": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3070": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3071": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3073": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3074": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3075": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC34"
    },
    "3079": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3080": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3081": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3082": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3083": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3084": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3085": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3087": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3088": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3090": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3092": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3093": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3094": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3095": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3096": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3097": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3098": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3099": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3100": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3102": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3103": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3104": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3106": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3107": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3108": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3109": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "GT",
      "path": "13"
    },
    "3110": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC16"
    },
    "3114": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3115": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3116": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3117": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SUB",
      "path": "13"
    },
    "3118": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3120": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "AND",
      "path": "13"
    },
    "3121": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3122": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3123": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3124": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3125": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "POP",
      "path": "13"
    },
    "3126": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "POP",
      "path": "13"
    },
    "3127": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "POP",
      "path": "13"
    },
    "3128": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "POP",
      "path": "13"
    },
    "3129": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "POP",
      "path": "13"
    },
    "3130": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3131": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3132": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "3134": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3135": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3136": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3137": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC4B"
    },
    "3141": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3142": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x14F2"
    },
    "3146": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        484,
        537
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3147": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3148": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3149": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3151": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3152": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3154": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3155": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3156": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DIV",
      "path": "13"
    },
    "3157": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MUL",
      "path": "13"
    },
    "3158": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3160": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3161": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3163": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3164": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3165": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3166": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3167": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3169": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3170": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3171": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3172": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3173": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3174": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3175": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3176": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3177": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3179": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3180": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3181": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3182": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3183": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC79"
    },
    "3187": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3188": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x14F2"
    },
    "3192": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        484,
        537
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3193": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3194": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3195": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3196": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xCCA"
    },
    "3200": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3201": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3202": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3204": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "LT",
      "path": "13"
    },
    "3205": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC9E"
    },
    "3209": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3210": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "3213": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3214": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3215": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3216": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DIV",
      "path": "13"
    },
    "3217": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MUL",
      "path": "13"
    },
    "3218": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3219": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3220": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3221": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3223": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3224": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3225": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xCCA"
    },
    "3229": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3230": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3231": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3232": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3233": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3234": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3235": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3237": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3238": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3240": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3242": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3243": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3244": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3245": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3246": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3247": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3248": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3249": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3250": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3252": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3253": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3254": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3256": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3257": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3258": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3259": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "GT",
      "path": "13"
    },
    "3260": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xCAC"
    },
    "3264": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3265": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3266": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3267": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SUB",
      "path": "13"
    },
    "3268": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3270": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "AND",
      "path": "13"
    },
    "3271": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3272": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3273": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3274": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3275": {
      "op": "POP"
    },
    "3276": {
      "op": "POP"
    },
    "3277": {
      "op": "POP"
    },
    "3278": {
      "op": "POP"
    },
    "3279": {
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "3281": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3282": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3283": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3284": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "3286": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3287": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3288": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3289": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "3291": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3292": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "3293": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "ADD",
      "path": "13"
    },
    "3294": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3295": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3296": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3303": {
      "op": "SHL"
    },
    "3304": {
      "op": "SUB"
    },
    "3305": {
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3306": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3307": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "AND",
      "path": "13"
    },
    "3308": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3309": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3310": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3311": {
      "op": "POP"
    },
    "3312": {
      "offset": [
        484,
        537
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "3314": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "AND",
      "path": "13"
    },
    "3315": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        484,
        537
      ],
      "op": "DUP10",
      "path": "13"
    },
    "3316": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "o",
      "offset": [
        484,
        537
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3317": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3318": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7119,
        7130
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3320": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7158
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3321": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7158
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3322": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7158
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3323": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7158
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3325": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7158
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3326": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7158
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3327": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7158
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3328": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7158
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3330": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7158
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3331": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7158
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3332": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7158
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3333": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "3335": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7171
      ],
      "op": "ADD",
      "path": "13"
    },
    "3336": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7171
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3337": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3338": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3339": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3346": {
      "op": "SHL"
    },
    "3347": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3348": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3349": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7224,
        7234
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3350": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3352": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3353": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "ADD",
      "path": "13"
    },
    "3354": {
      "op": "MSTORE"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3361": {
      "op": "SHL"
    },
    "3362": {
      "op": "SUB"
    },
    "3363": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3364": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7171
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3365": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7171
      ],
      "op": "AND",
      "path": "13"
    },
    "3366": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7171
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3367": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7119,
        7130
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3368": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7171
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3369": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7139,
        7171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3370": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7223
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70A08231"
    },
    "3375": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3378": {
      "op": "ADD"
    },
    "3379": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3381": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3383": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3384": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3385": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3386": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "SUB",
      "path": "13"
    },
    "3387": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3388": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP7",
      "path": "13"
    },
    "3389": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3390": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3391": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3392": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3393": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3394": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xD4B"
    },
    "3398": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3399": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3401": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3402": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3403": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3404": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "POP",
      "path": "13"
    },
    "3405": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "GAS",
      "path": "13"
    },
    "3406": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "3407": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3408": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3409": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3410": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xD60"
    },
    "3414": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3415": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3416": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3418": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3419": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3420": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3421": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3423": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3424": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3425": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "POP",
      "path": "13"
    },
    "3426": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "POP",
      "path": "13"
    },
    "3427": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "POP",
      "path": "13"
    },
    "3428": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "POP",
      "path": "13"
    },
    "3429": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3431": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3432": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3433": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3435": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "NOT",
      "path": "13"
    },
    "3436": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3438": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3439": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "ADD",
      "path": "13"
    },
    "3440": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "AND",
      "path": "13"
    },
    "3441": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3442": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "ADD",
      "path": "13"
    },
    "3443": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3444": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3446": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3447": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "POP",
      "path": "13"
    },
    "3448": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3449": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "ADD",
      "path": "13"
    },
    "3450": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3451": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xD86"
    },
    "3455": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3456": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3457": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x146F"
    },
    "3461": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7208,
        7235
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3462": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7208,
        7235
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3463": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7182,
        7235
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3464": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7182,
        7235
      ],
      "op": "POP",
      "path": "13"
    },
    "3465": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7245,
        7264
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3467": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7272
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3474": {
      "op": "SHL"
    },
    "3475": {
      "op": "SUB"
    },
    "3476": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7284
      ],
      "op": "AND",
      "path": "13"
    },
    "3477": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7284
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x18160DDD"
    },
    "3482": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3484": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3485": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3486": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "3491": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "AND",
      "path": "13"
    },
    "3492": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "3494": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "SHL",
      "path": "13"
    },
    "3495": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3496": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3497": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3499": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "ADD",
      "path": "13"
    },
    "3500": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3502": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3504": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3505": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3506": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3507": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "SUB",
      "path": "13"
    },
    "3508": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3509": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP7",
      "path": "13"
    },
    "3510": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3511": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3512": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3513": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3514": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3515": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xDC4"
    },
    "3519": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3520": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3522": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3523": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3524": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3525": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "POP",
      "path": "13"
    },
    "3526": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "GAS",
      "path": "13"
    },
    "3527": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "3528": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3529": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3530": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3531": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xDD9"
    },
    "3535": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3536": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3537": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3539": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3540": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3541": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3542": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3544": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3545": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3546": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "POP",
      "path": "13"
    },
    "3547": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "POP",
      "path": "13"
    },
    "3548": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "POP",
      "path": "13"
    },
    "3549": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "POP",
      "path": "13"
    },
    "3550": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3552": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3553": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3554": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3556": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "NOT",
      "path": "13"
    },
    "3557": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3559": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3560": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "ADD",
      "path": "13"
    },
    "3561": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "AND",
      "path": "13"
    },
    "3562": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3563": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "ADD",
      "path": "13"
    },
    "3564": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3565": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3567": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3568": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "POP",
      "path": "13"
    },
    "3569": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3570": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "ADD",
      "path": "13"
    },
    "3571": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3572": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xDFF"
    },
    "3576": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3577": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3578": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x146F"
    },
    "3582": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7267,
        7286
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3583": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7267,
        7286
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3584": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7245,
        7286
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3585": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7245,
        7286
      ],
      "op": "POP",
      "path": "13"
    },
    "3586": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7336,
        7347
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 23
    },
    "3587": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7317,
        7332
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3588": {
      "branch": 30,
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7317,
        7347
      ],
      "op": "EQ",
      "path": "13"
    },
    "3589": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7296,
        7415
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xE65"
    },
    "3593": {
      "branch": 30,
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7296,
        7415
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3594": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7296,
        7415
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3596": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7296,
        7415
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3597": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3603": {
      "op": "SHL"
    },
    "3604": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7296,
        7415
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3605": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7296,
        7415
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3608": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7296,
        7415
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3610": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7296,
        7415
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3611": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7296,
        7415
      ],
      "op": "ADD",
      "path": "13"
    },
    "3612": {
      "op": "MSTORE"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3617": {
      "op": "DUP3"
    },
    "3618": {
      "op": "ADD"
    },
    "3619": {
      "op": "MSTORE"
    },
    "3620": {
      "op": "PUSH32",
      "value": "0x52656465656D65657220646F6573206E6F7420686F6C642074686520656E7469"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3655": {
      "op": "DUP3"
    },
    "3656": {
      "op": "ADD"
    },
    "3657": {
      "op": "MSTORE"
    },
    "3658": {
      "op": "PUSH10",
      "value": "0x39329039BAB838363C97"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3671": {
      "op": "SHL"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3674": {
      "op": "DUP3"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "op": "MSTORE"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3679": {
      "op": "ADD"
    },
    "3680": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7296,
        7415
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x66B"
    },
    "3684": {
      "op": "JUMP"
    },
    "3685": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7296,
        7415
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3686": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 24,
      "value": "0x40"
    },
    "3688": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3689": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3696": {
      "op": "SHL"
    },
    "3697": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3698": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3705": {
      "op": "SHL"
    },
    "3706": {
      "op": "SUB"
    },
    "3707": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7443
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3708": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7443
      ],
      "op": "AND",
      "path": "13"
    },
    "3709": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7443
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3710": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7443
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "3715": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7443
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3716": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xE97"
    },
    "3720": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3721": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7444,
        7454
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3722": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7444,
        7454
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3723": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7464,
        7468
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "3724": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7464,
        7468
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3725": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7471,
        7486
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3726": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7471,
        7486
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3727": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3729": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "ADD",
      "path": "13"
    },
    "3730": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x13B1"
    },
    "3734": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7425,
        7487
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3735": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3736": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3738": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3740": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3741": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3742": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3743": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "SUB",
      "path": "13"
    },
    "3744": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3745": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3747": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3748": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3749": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3750": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3751": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3752": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3753": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xEB2"
    },
    "3757": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3758": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3760": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3761": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3762": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3763": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "POP",
      "path": "13"
    },
    "3764": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "GAS",
      "path": "13"
    },
    "3765": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "CALL",
      "path": "13"
    },
    "3766": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3767": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3768": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3769": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xEC7"
    },
    "3773": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3774": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3775": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3777": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3778": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3779": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3780": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3782": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3783": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3784": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "POP",
      "path": "13"
    },
    "3785": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "POP",
      "path": "13"
    },
    "3786": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "POP",
      "path": "13"
    },
    "3787": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "POP",
      "path": "13"
    },
    "3788": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3790": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3791": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3792": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3794": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "NOT",
      "path": "13"
    },
    "3795": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3797": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3798": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "ADD",
      "path": "13"
    },
    "3799": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "AND",
      "path": "13"
    },
    "3800": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3801": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "ADD",
      "path": "13"
    },
    "3802": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3803": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3805": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3806": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "POP",
      "path": "13"
    },
    "3807": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3808": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "ADD",
      "path": "13"
    },
    "3809": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3810": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xEED"
    },
    "3814": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3815": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3816": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1489"
    },
    "3820": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7425,
        7487
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3821": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7425,
        7487
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3822": {
      "op": "POP"
    },
    "3823": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7497,
        7510
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3825": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3826": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3827": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3828": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3830": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3831": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3832": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3833": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3835": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3836": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3837": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3838": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7539
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3839": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7553
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3841": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7553
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3842": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7553
      ],
      "op": "ADD",
      "path": "13"
    },
    "3843": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7553
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3844": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7553
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3846": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7652,
        7682
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 25
    },
    "3847": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7652,
        7682
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3848": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7652,
        7682
      ],
      "op": "ADD",
      "path": "13"
    },
    "3849": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7652,
        7682
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3850": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3851": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3852": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3859": {
      "op": "SHL"
    },
    "3860": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3861": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3868": {
      "op": "SHL"
    },
    "3869": {
      "op": "SUB"
    },
    "3870": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7553
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3871": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7553
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3872": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7553
      ],
      "op": "AND",
      "path": "13"
    },
    "3873": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7553
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3874": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7553
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3875": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7520,
        7553
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3876": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7587
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x42842E0E"
    },
    "3881": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7587
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3882": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF3B"
    },
    "3886": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3887": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7609,
        7613
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "3888": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7609,
        7613
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3889": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7628,
        7638
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3890": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7628,
        7638
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3891": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3893": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "ADD",
      "path": "13"
    },
    "3894": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x13B1"
    },
    "3898": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7564,
        7692
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3899": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3900": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3902": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3904": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3905": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3906": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3907": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "SUB",
      "path": "13"
    },
    "3908": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3909": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3911": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3912": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3913": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3914": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3915": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3916": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3917": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF56"
    },
    "3921": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3922": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3924": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3925": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3926": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3927": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "POP",
      "path": "13"
    },
    "3928": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "GAS",
      "path": "13"
    },
    "3929": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "CALL",
      "path": "13"
    },
    "3930": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3931": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3932": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3933": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF6B"
    },
    "3937": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3938": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3939": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3941": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3942": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3943": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3944": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3946": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3947": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7564,
        7692
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3948": {
      "op": "POP"
    },
    "3949": {
      "op": "POP"
    },
    "3950": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7707,
        7738
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 26,
      "value": "0x40"
    },
    "3952": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7707,
        7738
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3953": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7728,
        7737
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3954": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7728,
        7737
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3955": {
      "op": "POP"
    },
    "3956": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7716,
        7726
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3957": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7716,
        7726
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3958": {
      "op": "POP"
    },
    "3959": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7707,
        7738
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369"
    },
    "3992": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7707,
        7738
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3993": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7707,
        7738
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3995": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7707,
        7738
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3996": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7707,
        7738
      ],
      "op": "LOG3",
      "path": "13"
    },
    "3997": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7109,
        7745
      ],
      "op": "POP",
      "path": "13"
    },
    "3998": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7109,
        7745
      ],
      "op": "POP",
      "path": "13"
    },
    "3999": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7109,
        7745
      ],
      "op": "POP",
      "path": "13"
    },
    "4000": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7109,
        7745
      ],
      "op": "POP",
      "path": "13"
    },
    "4001": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7067,
        7745
      ],
      "op": "POP",
      "path": "13"
    },
    "4002": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "o",
      "offset": [
        7067,
        7745
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4003": {
      "op": "JUMPDEST"
    },
    "4004": {
      "op": "PUSH2",
      "value": "0xCAA"
    },
    "4007": {
      "op": "DUP1"
    },
    "4008": {
      "op": "PUSH3",
      "value": "0x1530"
    },
    "4012": {
      "op": "DUP4"
    },
    "4013": {
      "op": "CODECOPY"
    },
    "4014": {
      "op": "ADD"
    },
    "4015": {
      "op": "SWAP1"
    },
    "4016": {
      "jump": "o",
      "op": "JUMP"
    },
    "4017": {
      "op": "JUMPDEST"
    },
    "4018": {
      "op": "DUP3"
    },
    "4019": {
      "op": "DUP1"
    },
    "4020": {
      "op": "SLOAD"
    },
    "4021": {
      "op": "PUSH3",
      "value": "0xFBF"
    },
    "4025": {
      "op": "SWAP1"
    },
    "4026": {
      "op": "PUSH3",
      "value": "0x14F2"
    },
    "4030": {
      "jump": "i",
      "op": "JUMP"
    },
    "4031": {
      "op": "JUMPDEST"
    },
    "4032": {
      "op": "SWAP1"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4035": {
      "op": "MSTORE"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4040": {
      "op": "KECCAK256"
    },
    "4041": {
      "op": "SWAP1"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4044": {
      "op": "ADD"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4047": {
      "op": "SWAP1"
    },
    "4048": {
      "op": "DIV"
    },
    "4049": {
      "op": "DUP2"
    },
    "4050": {
      "op": "ADD"
    },
    "4051": {
      "op": "SWAP3"
    },
    "4052": {
      "op": "DUP3"
    },
    "4053": {
      "op": "PUSH3",
      "value": "0xFE3"
    },
    "4057": {
      "op": "JUMPI"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4060": {
      "op": "DUP6"
    },
    "4061": {
      "op": "SSTORE"
    },
    "4062": {
      "op": "PUSH3",
      "value": "0x102E"
    },
    "4066": {
      "op": "JUMP"
    },
    "4067": {
      "op": "JUMPDEST"
    },
    "4068": {
      "op": "DUP3"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4071": {
      "op": "LT"
    },
    "4072": {
      "op": "PUSH3",
      "value": "0xFFE"
    },
    "4076": {
      "op": "JUMPI"
    },
    "4077": {
      "op": "DUP1"
    },
    "4078": {
      "op": "MLOAD"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4081": {
      "op": "NOT"
    },
    "4082": {
      "op": "AND"
    },
    "4083": {
      "op": "DUP4"
    },
    "4084": {
      "op": "DUP1"
    },
    "4085": {
      "op": "ADD"
    },
    "4086": {
      "op": "OR"
    },
    "4087": {
      "op": "DUP6"
    },
    "4088": {
      "op": "SSTORE"
    },
    "4089": {
      "op": "PUSH3",
      "value": "0x102E"
    },
    "4093": {
      "op": "JUMP"
    },
    "4094": {
      "op": "JUMPDEST"
    },
    "4095": {
      "op": "DUP3"
    },
    "4096": {
      "op": "DUP1"
    },
    "4097": {
      "op": "ADD"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4100": {
      "op": "ADD"
    },
    "4101": {
      "op": "DUP6"
    },
    "4102": {
      "op": "SSTORE"
    },
    "4103": {
      "op": "DUP3"
    },
    "4104": {
      "op": "ISZERO"
    },
    "4105": {
      "op": "PUSH3",
      "value": "0x102E"
    },
    "4109": {
      "op": "JUMPI"
    },
    "4110": {
      "op": "SWAP2"
    },
    "4111": {
      "op": "DUP3"
    },
    "4112": {
      "op": "ADD"
    },
    "4113": {
      "op": "JUMPDEST"
    },
    "4114": {
      "op": "DUP3"
    },
    "4115": {
      "op": "DUP2"
    },
    "4116": {
      "op": "GT"
    },
    "4117": {
      "op": "ISZERO"
    },
    "4118": {
      "op": "PUSH3",
      "value": "0x102E"
    },
    "4122": {
      "op": "JUMPI"
    },
    "4123": {
      "op": "DUP3"
    },
    "4124": {
      "op": "MLOAD"
    },
    "4125": {
      "op": "DUP3"
    },
    "4126": {
      "op": "SSTORE"
    },
    "4127": {
      "op": "SWAP2"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4130": {
      "op": "ADD"
    },
    "4131": {
      "op": "SWAP2"
    },
    "4132": {
      "op": "SWAP1"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4135": {
      "op": "ADD"
    },
    "4136": {
      "op": "SWAP1"
    },
    "4137": {
      "op": "PUSH3",
      "value": "0x1011"
    },
    "4141": {
      "op": "JUMP"
    },
    "4142": {
      "op": "JUMPDEST"
    },
    "4143": {
      "op": "POP"
    },
    "4144": {
      "op": "PUSH3",
      "value": "0x103C"
    },
    "4148": {
      "op": "SWAP3"
    },
    "4149": {
      "op": "SWAP2"
    },
    "4150": {
      "op": "POP"
    },
    "4151": {
      "op": "PUSH3",
      "value": "0x1040"
    },
    "4155": {
      "jump": "i",
      "op": "JUMP"
    },
    "4156": {
      "op": "JUMPDEST"
    },
    "4157": {
      "op": "POP"
    },
    "4158": {
      "op": "SWAP1"
    },
    "4159": {
      "jump": "o",
      "op": "JUMP"
    },
    "4160": {
      "op": "JUMPDEST"
    },
    "4161": {
      "op": "JUMPDEST"
    },
    "4162": {
      "op": "DUP1"
    },
    "4163": {
      "op": "DUP3"
    },
    "4164": {
      "op": "GT"
    },
    "4165": {
      "op": "ISZERO"
    },
    "4166": {
      "op": "PUSH3",
      "value": "0x103C"
    },
    "4170": {
      "op": "JUMPI"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4173": {
      "op": "DUP2"
    },
    "4174": {
      "op": "SSTORE"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4177": {
      "op": "ADD"
    },
    "4178": {
      "op": "PUSH3",
      "value": "0x1041"
    },
    "4182": {
      "op": "JUMP"
    },
    "4183": {
      "op": "JUMPDEST"
    },
    "4184": {
      "op": "DUP1"
    },
    "4185": {
      "op": "CALLDATALOAD"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4192": {
      "op": "SHL"
    },
    "4193": {
      "op": "SUB"
    },
    "4194": {
      "op": "DUP2"
    },
    "4195": {
      "op": "AND"
    },
    "4196": {
      "op": "DUP2"
    },
    "4197": {
      "op": "EQ"
    },
    "4198": {
      "op": "PUSH3",
      "value": "0x106F"
    },
    "4202": {
      "op": "JUMPI"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4205": {
      "op": "DUP1"
    },
    "4206": {
      "op": "REVERT"
    },
    "4207": {
      "op": "JUMPDEST"
    },
    "4208": {
      "op": "SWAP2"
    },
    "4209": {
      "op": "SWAP1"
    },
    "4210": {
      "op": "POP"
    },
    "4211": {
      "jump": "o",
      "op": "JUMP"
    },
    "4212": {
      "op": "JUMPDEST"
    },
    "4213": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4220": {
      "op": "SHL"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4223": {
      "op": "MSTORE"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4228": {
      "op": "MSTORE"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4233": {
      "op": "REVERT"
    },
    "4234": {
      "op": "JUMPDEST"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4237": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4246": {
      "op": "DUP1"
    },
    "4247": {
      "op": "DUP5"
    },
    "4248": {
      "op": "GT"
    },
    "4249": {
      "op": "ISZERO"
    },
    "4250": {
      "op": "PUSH3",
      "value": "0x10A8"
    },
    "4254": {
      "op": "JUMPI"
    },
    "4255": {
      "op": "PUSH3",
      "value": "0x10A8"
    },
    "4259": {
      "op": "PUSH3",
      "value": "0x1074"
    },
    "4263": {
      "jump": "i",
      "op": "JUMP"
    },
    "4264": {
      "op": "JUMPDEST"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4267": {
      "op": "MLOAD"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4270": {
      "op": "DUP6"
    },
    "4271": {
      "op": "ADD"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4274": {
      "op": "NOT"
    },
    "4275": {
      "op": "SWAP1"
    },
    "4276": {
      "op": "DUP2"
    },
    "4277": {
      "op": "AND"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4280": {
      "op": "ADD"
    },
    "4281": {
      "op": "AND"
    },
    "4282": {
      "op": "DUP2"
    },
    "4283": {
      "op": "ADD"
    },
    "4284": {
      "op": "SWAP1"
    },
    "4285": {
      "op": "DUP3"
    },
    "4286": {
      "op": "DUP3"
    },
    "4287": {
      "op": "GT"
    },
    "4288": {
      "op": "DUP2"
    },
    "4289": {
      "op": "DUP4"
    },
    "4290": {
      "op": "LT"
    },
    "4291": {
      "op": "OR"
    },
    "4292": {
      "op": "ISZERO"
    },
    "4293": {
      "op": "PUSH3",
      "value": "0x10D3"
    },
    "4297": {
      "op": "JUMPI"
    },
    "4298": {
      "op": "PUSH3",
      "value": "0x10D3"
    },
    "4302": {
      "op": "PUSH3",
      "value": "0x1074"
    },
    "4306": {
      "jump": "i",
      "op": "JUMP"
    },
    "4307": {
      "op": "JUMPDEST"
    },
    "4308": {
      "op": "DUP2"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4311": {
      "op": "MSTORE"
    },
    "4312": {
      "op": "DUP1"
    },
    "4313": {
      "op": "SWAP4"
    },
    "4314": {
      "op": "POP"
    },
    "4315": {
      "op": "DUP6"
    },
    "4316": {
      "op": "DUP2"
    },
    "4317": {
      "op": "MSTORE"
    },
    "4318": {
      "op": "DUP7"
    },
    "4319": {
      "op": "DUP7"
    },
    "4320": {
      "op": "DUP7"
    },
    "4321": {
      "op": "ADD"
    },
    "4322": {
      "op": "GT"
    },
    "4323": {
      "op": "ISZERO"
    },
    "4324": {
      "op": "PUSH3",
      "value": "0x10ED"
    },
    "4328": {
      "op": "JUMPI"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4331": {
      "op": "DUP1"
    },
    "4332": {
      "op": "REVERT"
    },
    "4333": {
      "op": "JUMPDEST"
    },
    "4334": {
      "op": "DUP6"
    },
    "4335": {
      "op": "DUP6"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4338": {
      "op": "DUP4"
    },
    "4339": {
      "op": "ADD"
    },
    "4340": {
      "op": "CALLDATACOPY"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4345": {
      "op": "DUP8"
    },
    "4346": {
      "op": "DUP4"
    },
    "4347": {
      "op": "ADD"
    },
    "4348": {
      "op": "ADD"
    },
    "4349": {
      "op": "MSTORE"
    },
    "4350": {
      "op": "POP"
    },
    "4351": {
      "op": "POP"
    },
    "4352": {
      "op": "POP"
    },
    "4353": {
      "op": "SWAP4"
    },
    "4354": {
      "op": "SWAP3"
    },
    "4355": {
      "op": "POP"
    },
    "4356": {
      "op": "POP"
    },
    "4357": {
      "op": "POP"
    },
    "4358": {
      "jump": "o",
      "op": "JUMP"
    },
    "4359": {
      "op": "JUMPDEST"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4362": {
      "op": "DUP3"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4365": {
      "op": "DUP4"
    },
    "4366": {
      "op": "ADD"
    },
    "4367": {
      "op": "SLT"
    },
    "4368": {
      "op": "PUSH3",
      "value": "0x1119"
    },
    "4372": {
      "op": "JUMPI"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4375": {
      "op": "DUP1"
    },
    "4376": {
      "op": "REVERT"
    },
    "4377": {
      "op": "JUMPDEST"
    },
    "4378": {
      "op": "PUSH3",
      "value": "0x112A"
    },
    "4382": {
      "op": "DUP4"
    },
    "4383": {
      "op": "DUP4"
    },
    "4384": {
      "op": "CALLDATALOAD"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4387": {
      "op": "DUP6"
    },
    "4388": {
      "op": "ADD"
    },
    "4389": {
      "op": "PUSH3",
      "value": "0x108A"
    },
    "4393": {
      "jump": "i",
      "op": "JUMP"
    },
    "4394": {
      "op": "JUMPDEST"
    },
    "4395": {
      "op": "SWAP4"
    },
    "4396": {
      "op": "SWAP3"
    },
    "4397": {
      "op": "POP"
    },
    "4398": {
      "op": "POP"
    },
    "4399": {
      "op": "POP"
    },
    "4400": {
      "jump": "o",
      "op": "JUMP"
    },
    "4401": {
      "op": "JUMPDEST"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4404": {
      "op": "DUP1"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4407": {
      "op": "DUP1"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4410": {
      "op": "DUP1"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4413": {
      "op": "DUP8"
    },
    "4414": {
      "op": "DUP10"
    },
    "4415": {
      "op": "SUB"
    },
    "4416": {
      "op": "SLT"
    },
    "4417": {
      "op": "ISZERO"
    },
    "4418": {
      "op": "PUSH3",
      "value": "0x114B"
    },
    "4422": {
      "op": "JUMPI"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4425": {
      "op": "DUP1"
    },
    "4426": {
      "op": "REVERT"
    },
    "4427": {
      "op": "JUMPDEST"
    },
    "4428": {
      "op": "PUSH3",
      "value": "0x1156"
    },
    "4432": {
      "op": "DUP8"
    },
    "4433": {
      "op": "PUSH3",
      "value": "0x1057"
    },
    "4437": {
      "jump": "i",
      "op": "JUMP"
    },
    "4438": {
      "op": "JUMPDEST"
    },
    "4439": {
      "op": "SWAP6"
    },
    "4440": {
      "op": "POP"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4443": {
      "op": "DUP8"
    },
    "4444": {
      "op": "ADD"
    },
    "4445": {
      "op": "CALLDATALOAD"
    },
    "4446": {
      "op": "SWAP5"
    },
    "4447": {
      "op": "POP"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4450": {
      "op": "DUP8"
    },
    "4451": {
      "op": "ADD"
    },
    "4452": {
      "op": "CALLDATALOAD"
    },
    "4453": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4462": {
      "op": "DUP1"
    },
    "4463": {
      "op": "DUP3"
    },
    "4464": {
      "op": "GT"
    },
    "4465": {
      "op": "ISZERO"
    },
    "4466": {
      "op": "PUSH3",
      "value": "0x117B"
    },
    "4470": {
      "op": "JUMPI"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4473": {
      "op": "DUP1"
    },
    "4474": {
      "op": "REVERT"
    },
    "4475": {
      "op": "JUMPDEST"
    },
    "4476": {
      "op": "PUSH3",
      "value": "0x1189"
    },
    "4480": {
      "op": "DUP11"
    },
    "4481": {
      "op": "DUP4"
    },
    "4482": {
      "op": "DUP12"
    },
    "4483": {
      "op": "ADD"
    },
    "4484": {
      "op": "PUSH3",
      "value": "0x1107"
    },
    "4488": {
      "jump": "i",
      "op": "JUMP"
    },
    "4489": {
      "op": "JUMPDEST"
    },
    "4490": {
      "op": "SWAP6"
    },
    "4491": {
      "op": "POP"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4494": {
      "op": "DUP10"
    },
    "4495": {
      "op": "ADD"
    },
    "4496": {
      "op": "CALLDATALOAD"
    },
    "4497": {
      "op": "SWAP2"
    },
    "4498": {
      "op": "POP"
    },
    "4499": {
      "op": "DUP1"
    },
    "4500": {
      "op": "DUP3"
    },
    "4501": {
      "op": "GT"
    },
    "4502": {
      "op": "ISZERO"
    },
    "4503": {
      "op": "PUSH3",
      "value": "0x11A0"
    },
    "4507": {
      "op": "JUMPI"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4510": {
      "op": "DUP1"
    },
    "4511": {
      "op": "REVERT"
    },
    "4512": {
      "op": "JUMPDEST"
    },
    "4513": {
      "op": "POP"
    },
    "4514": {
      "op": "PUSH3",
      "value": "0x11AF"
    },
    "4518": {
      "op": "DUP10"
    },
    "4519": {
      "op": "DUP3"
    },
    "4520": {
      "op": "DUP11"
    },
    "4521": {
      "op": "ADD"
    },
    "4522": {
      "op": "PUSH3",
      "value": "0x1107"
    },
    "4526": {
      "jump": "i",
      "op": "JUMP"
    },
    "4527": {
      "op": "JUMPDEST"
    },
    "4528": {
      "op": "SWAP4"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "op": "POP"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4533": {
      "op": "DUP8"
    },
    "4534": {
      "op": "ADD"
    },
    "4535": {
      "op": "CALLDATALOAD"
    },
    "4536": {
      "op": "SWAP2"
    },
    "4537": {
      "op": "POP"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4540": {
      "op": "DUP8"
    },
    "4541": {
      "op": "ADD"
    },
    "4542": {
      "op": "CALLDATALOAD"
    },
    "4543": {
      "op": "SWAP1"
    },
    "4544": {
      "op": "POP"
    },
    "4545": {
      "op": "SWAP3"
    },
    "4546": {
      "op": "SWAP6"
    },
    "4547": {
      "op": "POP"
    },
    "4548": {
      "op": "SWAP3"
    },
    "4549": {
      "op": "SWAP6"
    },
    "4550": {
      "op": "POP"
    },
    "4551": {
      "op": "SWAP3"
    },
    "4552": {
      "op": "SWAP6"
    },
    "4553": {
      "jump": "o",
      "op": "JUMP"
    },
    "4554": {
      "op": "JUMPDEST"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4559": {
      "op": "DUP3"
    },
    "4560": {
      "op": "DUP5"
    },
    "4561": {
      "op": "SUB"
    },
    "4562": {
      "op": "SLT"
    },
    "4563": {
      "op": "ISZERO"
    },
    "4564": {
      "op": "PUSH3",
      "value": "0x11DD"
    },
    "4568": {
      "op": "JUMPI"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4571": {
      "op": "DUP1"
    },
    "4572": {
      "op": "REVERT"
    },
    "4573": {
      "op": "JUMPDEST"
    },
    "4574": {
      "op": "POP"
    },
    "4575": {
      "op": "CALLDATALOAD"
    },
    "4576": {
      "op": "SWAP2"
    },
    "4577": {
      "op": "SWAP1"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "jump": "o",
      "op": "JUMP"
    },
    "4580": {
      "op": "JUMPDEST"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4583": {
      "op": "DUP1"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4586": {
      "op": "DUP1"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4589": {
      "op": "DUP6"
    },
    "4590": {
      "op": "DUP8"
    },
    "4591": {
      "op": "SUB"
    },
    "4592": {
      "op": "SLT"
    },
    "4593": {
      "op": "ISZERO"
    },
    "4594": {
      "op": "PUSH3",
      "value": "0x11FB"
    },
    "4598": {
      "op": "JUMPI"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4601": {
      "op": "DUP1"
    },
    "4602": {
      "op": "REVERT"
    },
    "4603": {
      "op": "JUMPDEST"
    },
    "4604": {
      "op": "PUSH3",
      "value": "0x1206"
    },
    "4608": {
      "op": "DUP6"
    },
    "4609": {
      "op": "PUSH3",
      "value": "0x1057"
    },
    "4613": {
      "jump": "i",
      "op": "JUMP"
    },
    "4614": {
      "op": "JUMPDEST"
    },
    "4615": {
      "op": "SWAP4"
    },
    "4616": {
      "op": "POP"
    },
    "4617": {
      "op": "PUSH3",
      "value": "0x1216"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4623": {
      "op": "DUP7"
    },
    "4624": {
      "op": "ADD"
    },
    "4625": {
      "op": "PUSH3",
      "value": "0x1057"
    },
    "4629": {
      "jump": "i",
      "op": "JUMP"
    },
    "4630": {
      "op": "JUMPDEST"
    },
    "4631": {
      "op": "SWAP3"
    },
    "4632": {
      "op": "POP"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4635": {
      "op": "DUP6"
    },
    "4636": {
      "op": "ADD"
    },
    "4637": {
      "op": "CALLDATALOAD"
    },
    "4638": {
      "op": "SWAP2"
    },
    "4639": {
      "op": "POP"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4642": {
      "op": "DUP6"
    },
    "4643": {
      "op": "ADD"
    },
    "4644": {
      "op": "CALLDATALOAD"
    },
    "4645": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4654": {
      "op": "DUP2"
    },
    "4655": {
      "op": "GT"
    },
    "4656": {
      "op": "ISZERO"
    },
    "4657": {
      "op": "PUSH3",
      "value": "0x123A"
    },
    "4661": {
      "op": "JUMPI"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4664": {
      "op": "DUP1"
    },
    "4665": {
      "op": "REVERT"
    },
    "4666": {
      "op": "JUMPDEST"
    },
    "4667": {
      "op": "DUP6"
    },
    "4668": {
      "op": "ADD"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4671": {
      "op": "DUP2"
    },
    "4672": {
      "op": "ADD"
    },
    "4673": {
      "op": "DUP8"
    },
    "4674": {
      "op": "SGT"
    },
    "4675": {
      "op": "PUSH3",
      "value": "0x124C"
    },
    "4679": {
      "op": "JUMPI"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4682": {
      "op": "DUP1"
    },
    "4683": {
      "op": "REVERT"
    },
    "4684": {
      "op": "JUMPDEST"
    },
    "4685": {
      "op": "PUSH3",
      "value": "0x125D"
    },
    "4689": {
      "op": "DUP8"
    },
    "4690": {
      "op": "DUP3"
    },
    "4691": {
      "op": "CALLDATALOAD"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4694": {
      "op": "DUP5"
    },
    "4695": {
      "op": "ADD"
    },
    "4696": {
      "op": "PUSH3",
      "value": "0x108A"
    },
    "4700": {
      "jump": "i",
      "op": "JUMP"
    },
    "4701": {
      "op": "JUMPDEST"
    },
    "4702": {
      "op": "SWAP2"
    },
    "4703": {
      "op": "POP"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "op": "SWAP3"
    },
    "4706": {
      "op": "SWAP6"
    },
    "4707": {
      "op": "SWAP2"
    },
    "4708": {
      "op": "SWAP5"
    },
    "4709": {
      "op": "POP"
    },
    "4710": {
      "op": "SWAP3"
    },
    "4711": {
      "op": "POP"
    },
    "4712": {
      "jump": "o",
      "op": "JUMP"
    },
    "4713": {
      "op": "JUMPDEST"
    },
    "4714": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4721": {
      "op": "SHL"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4724": {
      "op": "MSTORE"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4729": {
      "op": "MSTORE"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4734": {
      "op": "REVERT"
    },
    "4735": {
      "op": "JUMPDEST"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4738": {
      "op": "DUP2"
    },
    "4739": {
      "op": "LT"
    },
    "4740": {
      "op": "PUSH3",
      "value": "0x129E"
    },
    "4744": {
      "op": "JUMPI"
    },
    "4745": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4752": {
      "op": "SHL"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4755": {
      "op": "MSTORE"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4760": {
      "op": "MSTORE"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4765": {
      "op": "REVERT"
    },
    "4766": {
      "op": "JUMPDEST"
    },
    "4767": {
      "op": "SWAP1"
    },
    "4768": {
      "op": "MSTORE"
    },
    "4769": {
      "jump": "o",
      "op": "JUMP"
    },
    "4770": {
      "op": "JUMPDEST"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4773": {
      "op": "DUP2"
    },
    "4774": {
      "op": "ADD"
    },
    "4775": {
      "op": "PUSH3",
      "value": "0x12B2"
    },
    "4779": {
      "op": "DUP3"
    },
    "4780": {
      "op": "DUP5"
    },
    "4781": {
      "op": "PUSH3",
      "value": "0x127F"
    },
    "4785": {
      "jump": "i",
      "op": "JUMP"
    },
    "4786": {
      "op": "JUMPDEST"
    },
    "4787": {
      "op": "SWAP3"
    },
    "4788": {
      "op": "SWAP2"
    },
    "4789": {
      "op": "POP"
    },
    "4790": {
      "op": "POP"
    },
    "4791": {
      "jump": "o",
      "op": "JUMP"
    },
    "4792": {
      "op": "JUMPDEST"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4795": {
      "op": "JUMPDEST"
    },
    "4796": {
      "op": "DUP4"
    },
    "4797": {
      "op": "DUP2"
    },
    "4798": {
      "op": "LT"
    },
    "4799": {
      "op": "ISZERO"
    },
    "4800": {
      "op": "PUSH3",
      "value": "0x12D5"
    },
    "4804": {
      "op": "JUMPI"
    },
    "4805": {
      "op": "DUP2"
    },
    "4806": {
      "op": "DUP2"
    },
    "4807": {
      "op": "ADD"
    },
    "4808": {
      "op": "MLOAD"
    },
    "4809": {
      "op": "DUP4"
    },
    "4810": {
      "op": "DUP3"
    },
    "4811": {
      "op": "ADD"
    },
    "4812": {
      "op": "MSTORE"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4815": {
      "op": "ADD"
    },
    "4816": {
      "op": "PUSH3",
      "value": "0x12BB"
    },
    "4820": {
      "op": "JUMP"
    },
    "4821": {
      "op": "JUMPDEST"
    },
    "4822": {
      "op": "DUP4"
    },
    "4823": {
      "op": "DUP2"
    },
    "4824": {
      "op": "GT"
    },
    "4825": {
      "op": "ISZERO"
    },
    "4826": {
      "op": "PUSH3",
      "value": "0x12E5"
    },
    "4830": {
      "op": "JUMPI"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4833": {
      "op": "DUP5"
    },
    "4834": {
      "op": "DUP5"
    },
    "4835": {
      "op": "ADD"
    },
    "4836": {
      "op": "MSTORE"
    },
    "4837": {
      "op": "JUMPDEST"
    },
    "4838": {
      "op": "POP"
    },
    "4839": {
      "op": "POP"
    },
    "4840": {
      "op": "POP"
    },
    "4841": {
      "op": "POP"
    },
    "4842": {
      "jump": "o",
      "op": "JUMP"
    },
    "4843": {
      "op": "JUMPDEST"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4846": {
      "op": "DUP2"
    },
    "4847": {
      "op": "MLOAD"
    },
    "4848": {
      "op": "DUP1"
    },
    "4849": {
      "op": "DUP5"
    },
    "4850": {
      "op": "MSTORE"
    },
    "4851": {
      "op": "PUSH3",
      "value": "0x1305"
    },
    "4855": {
      "op": "DUP2"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4858": {
      "op": "DUP7"
    },
    "4859": {
      "op": "ADD"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4862": {
      "op": "DUP7"
    },
    "4863": {
      "op": "ADD"
    },
    "4864": {
      "op": "PUSH3",
      "value": "0x12B8"
    },
    "4868": {
      "jump": "i",
      "op": "JUMP"
    },
    "4869": {
      "op": "JUMPDEST"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4872": {
      "op": "ADD"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4875": {
      "op": "NOT"
    },
    "4876": {
      "op": "AND"
    },
    "4877": {
      "op": "SWAP3"
    },
    "4878": {
      "op": "SWAP1"
    },
    "4879": {
      "op": "SWAP3"
    },
    "4880": {
      "op": "ADD"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4883": {
      "op": "ADD"
    },
    "4884": {
      "op": "SWAP3"
    },
    "4885": {
      "op": "SWAP2"
    },
    "4886": {
      "op": "POP"
    },
    "4887": {
      "op": "POP"
    },
    "4888": {
      "jump": "o",
      "op": "JUMP"
    },
    "4889": {
      "op": "JUMPDEST"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4892": {
      "op": "DUP2"
    },
    "4893": {
      "op": "MSTORE"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4896": {
      "op": "PUSH3",
      "value": "0x112A"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4902": {
      "op": "DUP4"
    },
    "4903": {
      "op": "ADD"
    },
    "4904": {
      "op": "DUP5"
    },
    "4905": {
      "op": "PUSH3",
      "value": "0x12EB"
    },
    "4909": {
      "jump": "i",
      "op": "JUMP"
    },
    "4910": {
      "op": "JUMPDEST"
    },
    "4911": {
      "op": "DUP10"
    },
    "4912": {
      "op": "DUP2"
    },
    "4913": {
      "op": "MSTORE"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4916": {
      "op": "DUP2"
    },
    "4917": {
      "op": "ADD"
    },
    "4918": {
      "op": "DUP10"
    },
    "4919": {
      "op": "SWAP1"
    },
    "4920": {
      "op": "MSTORE"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4927": {
      "op": "SHL"
    },
    "4928": {
      "op": "SUB"
    },
    "4929": {
      "op": "DUP9"
    },
    "4930": {
      "op": "DUP2"
    },
    "4931": {
      "op": "AND"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4934": {
      "op": "DUP4"
    },
    "4935": {
      "op": "ADD"
    },
    "4936": {
      "op": "MSTORE"
    },
    "4937": {
      "op": "DUP8"
    },
    "4938": {
      "op": "DUP2"
    },
    "4939": {
      "op": "AND"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4942": {
      "op": "DUP4"
    },
    "4943": {
      "op": "ADD"
    },
    "4944": {
      "op": "MSTORE"
    },
    "4945": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4950": {
      "op": "DUP4"
    },
    "4951": {
      "op": "ADD"
    },
    "4952": {
      "op": "DUP2"
    },
    "4953": {
      "op": "SWAP1"
    },
    "4954": {
      "op": "MSTORE"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4957": {
      "op": "SWAP2"
    },
    "4958": {
      "op": "PUSH3",
      "value": "0x136B"
    },
    "4962": {
      "op": "DUP5"
    },
    "4963": {
      "op": "DUP4"
    },
    "4964": {
      "op": "ADD"
    },
    "4965": {
      "op": "DUP11"
    },
    "4966": {
      "op": "PUSH3",
      "value": "0x12EB"
    },
    "4970": {
      "jump": "i",
      "op": "JUMP"
    },
    "4971": {
      "op": "JUMPDEST"
    },
    "4972": {
      "op": "SWAP2"
    },
    "4973": {
      "op": "POP"
    },
    "4974": {
      "op": "DUP4"
    },
    "4975": {
      "op": "DUP3"
    },
    "4976": {
      "op": "SUB"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4979": {
      "op": "DUP6"
    },
    "4980": {
      "op": "ADD"
    },
    "4981": {
      "op": "MSTORE"
    },
    "4982": {
      "op": "PUSH3",
      "value": "0x1381"
    },
    "4986": {
      "op": "DUP3"
    },
    "4987": {
      "op": "DUP10"
    },
    "4988": {
      "op": "PUSH3",
      "value": "0x12EB"
    },
    "4992": {
      "jump": "i",
      "op": "JUMP"
    },
    "4993": {
      "op": "JUMPDEST"
    },
    "4994": {
      "op": "SWAP3"
    },
    "4995": {
      "op": "POP"
    },
    "4996": {
      "op": "DUP1"
    },
    "4997": {
      "op": "DUP8"
    },
    "4998": {
      "op": "AND"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5001": {
      "op": "DUP6"
    },
    "5002": {
      "op": "ADD"
    },
    "5003": {
      "op": "MSTORE"
    },
    "5004": {
      "op": "POP"
    },
    "5005": {
      "op": "POP"
    },
    "5006": {
      "op": "DUP4"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5009": {
      "op": "DUP4"
    },
    "5010": {
      "op": "ADD"
    },
    "5011": {
      "op": "MSTORE"
    },
    "5012": {
      "op": "PUSH3",
      "value": "0x13A3"
    },
    "5016": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5019": {
      "op": "DUP4"
    },
    "5020": {
      "op": "ADD"
    },
    "5021": {
      "op": "DUP5"
    },
    "5022": {
      "op": "PUSH3",
      "value": "0x127F"
    },
    "5026": {
      "jump": "i",
      "op": "JUMP"
    },
    "5027": {
      "op": "JUMPDEST"
    },
    "5028": {
      "op": "SWAP11"
    },
    "5029": {
      "op": "SWAP10"
    },
    "5030": {
      "op": "POP"
    },
    "5031": {
      "op": "POP"
    },
    "5032": {
      "op": "POP"
    },
    "5033": {
      "op": "POP"
    },
    "5034": {
      "op": "POP"
    },
    "5035": {
      "op": "POP"
    },
    "5036": {
      "op": "POP"
    },
    "5037": {
      "op": "POP"
    },
    "5038": {
      "op": "POP"
    },
    "5039": {
      "op": "POP"
    },
    "5040": {
      "jump": "o",
      "op": "JUMP"
    },
    "5041": {
      "op": "JUMPDEST"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5048": {
      "op": "SHL"
    },
    "5049": {
      "op": "SUB"
    },
    "5050": {
      "op": "SWAP4"
    },
    "5051": {
      "op": "DUP5"
    },
    "5052": {
      "op": "AND"
    },
    "5053": {
      "op": "DUP2"
    },
    "5054": {
      "op": "MSTORE"
    },
    "5055": {
      "op": "SWAP2"
    },
    "5056": {
      "op": "SWAP1"
    },
    "5057": {
      "op": "SWAP3"
    },
    "5058": {
      "op": "AND"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5061": {
      "op": "DUP3"
    },
    "5062": {
      "op": "ADD"
    },
    "5063": {
      "op": "MSTORE"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5066": {
      "op": "DUP2"
    },
    "5067": {
      "op": "ADD"
    },
    "5068": {
      "op": "SWAP2"
    },
    "5069": {
      "op": "SWAP1"
    },
    "5070": {
      "op": "SWAP2"
    },
    "5071": {
      "op": "MSTORE"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5074": {
      "op": "ADD"
    },
    "5075": {
      "op": "SWAP1"
    },
    "5076": {
      "jump": "o",
      "op": "JUMP"
    },
    "5077": {
      "op": "JUMPDEST"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5080": {
      "op": "DUP2"
    },
    "5081": {
      "op": "MSTORE"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5084": {
      "op": "PUSH3",
      "value": "0x13EA"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5090": {
      "op": "DUP4"
    },
    "5091": {
      "op": "ADD"
    },
    "5092": {
      "op": "DUP8"
    },
    "5093": {
      "op": "PUSH3",
      "value": "0x12EB"
    },
    "5097": {
      "jump": "i",
      "op": "JUMP"
    },
    "5098": {
      "op": "JUMPDEST"
    },
    "5099": {
      "op": "DUP3"
    },
    "5100": {
      "op": "DUP2"
    },
    "5101": {
      "op": "SUB"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5104": {
      "op": "DUP5"
    },
    "5105": {
      "op": "ADD"
    },
    "5106": {
      "op": "MSTORE"
    },
    "5107": {
      "op": "PUSH3",
      "value": "0x13FE"
    },
    "5111": {
      "op": "DUP2"
    },
    "5112": {
      "op": "DUP8"
    },
    "5113": {
      "op": "PUSH3",
      "value": "0x12EB"
    },
    "5117": {
      "jump": "i",
      "op": "JUMP"
    },
    "5118": {
      "op": "JUMPDEST"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5121": {
      "op": "DUP5"
    },
    "5122": {
      "op": "ADD"
    },
    "5123": {
      "op": "SWAP6"
    },
    "5124": {
      "op": "SWAP1"
    },
    "5125": {
      "op": "SWAP6"
    },
    "5126": {
      "op": "MSTORE"
    },
    "5127": {
      "op": "POP"
    },
    "5128": {
      "op": "POP"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5135": {
      "op": "SHL"
    },
    "5136": {
      "op": "SUB"
    },
    "5137": {
      "op": "SWAP2"
    },
    "5138": {
      "op": "SWAP1"
    },
    "5139": {
      "op": "SWAP2"
    },
    "5140": {
      "op": "AND"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5143": {
      "op": "SWAP1"
    },
    "5144": {
      "op": "SWAP2"
    },
    "5145": {
      "op": "ADD"
    },
    "5146": {
      "op": "MSTORE"
    },
    "5147": {
      "op": "SWAP3"
    },
    "5148": {
      "op": "SWAP2"
    },
    "5149": {
      "op": "POP"
    },
    "5150": {
      "op": "POP"
    },
    "5151": {
      "jump": "o",
      "op": "JUMP"
    },
    "5152": {
      "op": "JUMPDEST"
    },
    "5153": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5160": {
      "op": "SHL"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5163": {
      "op": "MSTORE"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5168": {
      "op": "MSTORE"
    },
    "5169": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5173": {
      "op": "REVERT"
    },
    "5174": {
      "op": "JUMPDEST"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5177": {
      "op": "DUP3"
    },
    "5178": {
      "op": "NOT"
    },
    "5179": {
      "op": "DUP3"
    },
    "5180": {
      "op": "GT"
    },
    "5181": {
      "op": "ISZERO"
    },
    "5182": {
      "op": "PUSH3",
      "value": "0x144C"
    },
    "5186": {
      "op": "JUMPI"
    },
    "5187": {
      "op": "PUSH3",
      "value": "0x144C"
    },
    "5191": {
      "op": "PUSH3",
      "value": "0x1420"
    },
    "5195": {
      "jump": "i",
      "op": "JUMP"
    },
    "5196": {
      "op": "JUMPDEST"
    },
    "5197": {
      "op": "POP"
    },
    "5198": {
      "op": "ADD"
    },
    "5199": {
      "op": "SWAP1"
    },
    "5200": {
      "jump": "o",
      "op": "JUMP"
    },
    "5201": {
      "op": "JUMPDEST"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5204": {
      "op": "DUP3"
    },
    "5205": {
      "op": "MLOAD"
    },
    "5206": {
      "op": "PUSH3",
      "value": "0x1465"
    },
    "5210": {
      "op": "DUP2"
    },
    "5211": {
      "op": "DUP5"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5214": {
      "op": "DUP8"
    },
    "5215": {
      "op": "ADD"
    },
    "5216": {
      "op": "PUSH3",
      "value": "0x12B8"
    },
    "5220": {
      "jump": "i",
      "op": "JUMP"
    },
    "5221": {
      "op": "JUMPDEST"
    },
    "5222": {
      "op": "SWAP2"
    },
    "5223": {
      "op": "SWAP1"
    },
    "5224": {
      "op": "SWAP2"
    },
    "5225": {
      "op": "ADD"
    },
    "5226": {
      "op": "SWAP3"
    },
    "5227": {
      "op": "SWAP2"
    },
    "5228": {
      "op": "POP"
    },
    "5229": {
      "op": "POP"
    },
    "5230": {
      "jump": "o",
      "op": "JUMP"
    },
    "5231": {
      "op": "JUMPDEST"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5236": {
      "op": "DUP3"
    },
    "5237": {
      "op": "DUP5"
    },
    "5238": {
      "op": "SUB"
    },
    "5239": {
      "op": "SLT"
    },
    "5240": {
      "op": "ISZERO"
    },
    "5241": {
      "op": "PUSH3",
      "value": "0x1482"
    },
    "5245": {
      "op": "JUMPI"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5248": {
      "op": "DUP1"
    },
    "5249": {
      "op": "REVERT"
    },
    "5250": {
      "op": "JUMPDEST"
    },
    "5251": {
      "op": "POP"
    },
    "5252": {
      "op": "MLOAD"
    },
    "5253": {
      "op": "SWAP2"
    },
    "5254": {
      "op": "SWAP1"
    },
    "5255": {
      "op": "POP"
    },
    "5256": {
      "jump": "o",
      "op": "JUMP"
    },
    "5257": {
      "op": "JUMPDEST"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5262": {
      "op": "DUP3"
    },
    "5263": {
      "op": "DUP5"
    },
    "5264": {
      "op": "SUB"
    },
    "5265": {
      "op": "SLT"
    },
    "5266": {
      "op": "ISZERO"
    },
    "5267": {
      "op": "PUSH3",
      "value": "0x149C"
    },
    "5271": {
      "op": "JUMPI"
    },
    "5272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5274": {
      "op": "DUP1"
    },
    "5275": {
      "op": "REVERT"
    },
    "5276": {
      "op": "JUMPDEST"
    },
    "5277": {
      "op": "DUP2"
    },
    "5278": {
      "op": "MLOAD"
    },
    "5279": {
      "op": "DUP1"
    },
    "5280": {
      "op": "ISZERO"
    },
    "5281": {
      "op": "ISZERO"
    },
    "5282": {
      "op": "DUP2"
    },
    "5283": {
      "op": "EQ"
    },
    "5284": {
      "op": "PUSH3",
      "value": "0x112A"
    },
    "5288": {
      "op": "JUMPI"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5291": {
      "op": "DUP1"
    },
    "5292": {
      "op": "REVERT"
    },
    "5293": {
      "op": "JUMPDEST"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5296": {
      "op": "DUP2"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5299": {
      "op": "NOT"
    },
    "5300": {
      "op": "DIV"
    },
    "5301": {
      "op": "DUP4"
    },
    "5302": {
      "op": "GT"
    },
    "5303": {
      "op": "DUP3"
    },
    "5304": {
      "op": "ISZERO"
    },
    "5305": {
      "op": "ISZERO"
    },
    "5306": {
      "op": "AND"
    },
    "5307": {
      "op": "ISZERO"
    },
    "5308": {
      "op": "PUSH3",
      "value": "0x14CA"
    },
    "5312": {
      "op": "JUMPI"
    },
    "5313": {
      "op": "PUSH3",
      "value": "0x14CA"
    },
    "5317": {
      "op": "PUSH3",
      "value": "0x1420"
    },
    "5321": {
      "jump": "i",
      "op": "JUMP"
    },
    "5322": {
      "op": "JUMPDEST"
    },
    "5323": {
      "op": "POP"
    },
    "5324": {
      "op": "MUL"
    },
    "5325": {
      "op": "SWAP1"
    },
    "5326": {
      "jump": "o",
      "op": "JUMP"
    },
    "5327": {
      "op": "JUMPDEST"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5330": {
      "op": "DUP3"
    },
    "5331": {
      "op": "PUSH3",
      "value": "0x14ED"
    },
    "5335": {
      "op": "JUMPI"
    },
    "5336": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5343": {
      "op": "SHL"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5346": {
      "op": "MSTORE"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5351": {
      "op": "MSTORE"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5356": {
      "op": "REVERT"
    },
    "5357": {
      "op": "JUMPDEST"
    },
    "5358": {
      "op": "POP"
    },
    "5359": {
      "op": "DIV"
    },
    "5360": {
      "op": "SWAP1"
    },
    "5361": {
      "jump": "o",
      "op": "JUMP"
    },
    "5362": {
      "op": "JUMPDEST"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5365": {
      "op": "DUP2"
    },
    "5366": {
      "op": "DUP2"
    },
    "5367": {
      "op": "SHR"
    },
    "5368": {
      "op": "SWAP1"
    },
    "5369": {
      "op": "DUP3"
    },
    "5370": {
      "op": "AND"
    },
    "5371": {
      "op": "DUP1"
    },
    "5372": {
      "op": "PUSH3",
      "value": "0x1507"
    },
    "5376": {
      "op": "JUMPI"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5379": {
      "op": "DUP3"
    },
    "5380": {
      "op": "AND"
    },
    "5381": {
      "op": "SWAP2"
    },
    "5382": {
      "op": "POP"
    },
    "5383": {
      "op": "JUMPDEST"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5386": {
      "op": "DUP3"
    },
    "5387": {
      "op": "LT"
    },
    "5388": {
      "op": "DUP2"
    },
    "5389": {
      "op": "EQ"
    },
    "5390": {
      "op": "ISZERO"
    },
    "5391": {
      "op": "PUSH3",
      "value": "0x1529"
    },
    "5395": {
      "op": "JUMPI"
    },
    "5396": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5403": {
      "op": "SHL"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5406": {
      "op": "MSTORE"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5411": {
      "op": "MSTORE"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5416": {
      "op": "REVERT"
    },
    "5417": {
      "op": "JUMPDEST"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "op": "SWAP2"
    },
    "5420": {
      "op": "SWAP1"
    },
    "5421": {
      "op": "POP"
    },
    "5422": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "70cdaa0f7709f83e5115459afba93bbf1e571de7",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\nimport \"./ERC20Factory.sol\";\n\n// @title NFT Fractionalizer with Buyout Functionality\n// @author Web3Wannabe\n// @notice NFTs can be sent to the contract with a specified buyout price. The sender receives the total supply of a newly created ERC20 token.\ncontract FractionalizeNFT is IERC721Receiver {\n\n    mapping(uint256 => FractionalizedNFT) public fracNFTs; // A mapping of all fractionalized NFTs.\n    uint256 public fracNFTCount = 0;\n\n    struct FractionalizedNFT {\n        uint256 fracNFTId;\n        uint256 nftTokenId;\n        address erc721Address;\n        address erc20Address;\n        string erc20Symbol;\n        string erc20Name;\n        address payable originalOwner;\n        uint256 buyoutPrice;\n        State state;\n    }\n\n    enum State {\n        Fractionalized,\n        Redeemed,\n        BoughtOut\n    }\n\n    constructor() {}\n\n    /// @notice Emitted when ether is sent to the contract.\n    /// @param sender The sender of the transaction/ether.\n    /// @param value The amount of ether sent.\n    event Received(address indexed sender, uint256 indexed value);\n\n    /// @notice Emitted when an NFT is transferred to the FractionalizeNFT contract.\n    /// @param sender The address that sent the NFT.\n    event NftReceived(address indexed sender);\n\n    /// @notice Emitted when a user successfully fractionalizes an NFT and receives the total supply of the newly created ERC20 token.\n    /// @param sender The address that sent/fractionalized the NFT (i.e., the address that called fractionalize()).\n    /// @param fracNFTId The ID of the newly fractionalized NFT.\n    /// @param erc20Name The name of the newly created ERC20 token.\n    /// @param erc20Address The contract address of the newly created ERC20 token.\n    event Fractionalized(\n        address indexed sender,\n        uint256 indexed fracNFTId,\n        string indexed erc20Name,\n        address erc20Address\n    );\n\n    /// @notice Emitted when a user successfully redeems an NFT in exchange for the total ERC20 supply.\n    /// @param sender The address that redeemed the NFT (i.e., the address that called redeem()).\n    /// @param fracNFTId The index of the fractionalized NFT that was redeemed.\n    event Redeemed(address indexed sender, uint256 indexed fracNFTId);\n\n    /// @notice Emitted when a user successfully claims a payout following the buyout of an NFT from the FractionalizeNFT contract.\n    /// @param sender The address that the user held ERC20 tokens for (i.e., the address that called claim()).\n    /// @param fracNFTId The index of the fractionalized NFT that was bought.\n    event Claimed(address indexed sender, uint256 indexed fracNFTId);\n\n    /// @notice Emitted when a user successfully buys an NFT from the FractionalizeNFT contract.\n    /// @param sender The address that bought the NFT (i.e., the address that called buyout()).\n    /// @param fracNFTId The index of the fractionalized NFT that was bought.\n    event BoughtOut(address indexed sender, uint256 indexed fracNFTId);\n\n    /// @notice List of all fractionalized NFT ids.\n    /// @dev Used as a helper when iterating over fractionalized NFTs in frontend clients.\n    uint256[] public idList;\n\n    /// @notice idList length.\n    /// @dev Used as a helper when iterating over fractionalized NFTs in frontend clients.\n    uint256 public idListLength;\n\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    fallback() external payable {\n        revert();\n    }\n\n    /// @notice A getter function for the contract address of a fractionalized NFT's ERC20 token.\n    /// @param fracNFTId The ID of the fractionalized NFT.\n    /// @return The ERC20 contract address.\n    function getERC20Address(uint256 fracNFTId) public view returns (address) {\n        return fracNFTs[fracNFTId].erc20Address;\n    }\n\n    /// @notice A getter function for the symbol of a fractionalized NFT's ERC20 token.\n    /// @param fracNFTId The ID of the fractionalized NFT.\n    /// @return The ERC20's symobl.\n    function getERC20Symbol(uint256 fracNFTId)\n        public\n        view\n        returns (string memory)\n    {\n        return fracNFTs[fracNFTId].erc20Symbol;\n    }\n\n    /// @notice A getter function for the state of a fractionalized NFT.\n    /// @param fracNFTId The ID of the fractionalized NFT.\n    /// @return The fractionalized NFT's state (Fractionalized, Redeemed or BoughtOut).\n    function getState(uint256 fracNFTId) public view returns (State) {\n        return fracNFTs[fracNFTId].state;\n    }\n\n    /// @notice Create a fractionalized NFT: Lock the NFT in the contract; create a new ERC20 token, as specified; and transfer the total supply of the token to the sender.\n    /// @param nftContractAddress The address of the NFT that is to be fractionalized.\n    /// @param nftTokenId The token ID of the NFT that is to be fractionalized.\n    /// @param erc20Name The name of the newly created ERC20 token.\n    /// @param erc20Symbol The symbol of the newly created ERC20 token.\n    /// @param erc20Supply The total supply of the newly created ERC20 token.\n    /// @param buyoutPrice The price (in Wei) for which the fractionalized NFT can be be bought for from the contract.\n    /// @dev Note, the NFT must be approved for transfer by the FractionalizeNFT contract.\n    /// @return The ID of the newly created fractionalized NFT.\n    function fractionalizeNft(\n        address nftContractAddress,\n        uint256 nftTokenId,\n        string memory erc20Name,\n        string memory erc20Symbol,\n        uint256 erc20Supply,\n        uint256 buyoutPrice\n    ) public returns (uint256) {\n        ERC721 nft = ERC721(nftContractAddress);\n        nft.safeTransferFrom(msg.sender, address(this), nftTokenId);\n        ERC20 erc20 = (new ERC20Factory)(\n            erc20Name,\n            erc20Symbol,\n            erc20Supply,\n            msg.sender\n        );\n        uint256 fracNFTId = fracNFTCount;\n        fracNFTs[fracNFTCount] = FractionalizedNFT({\n            fracNFTId: fracNFTId,\n            nftTokenId: nftTokenId,\n            erc721Address: nftContractAddress,\n            erc20Address: address(erc20),\n            erc20Symbol: erc20Symbol,\n            erc20Name: erc20Name,\n            originalOwner: payable(msg.sender),\n            buyoutPrice: buyoutPrice,\n            state: State.Fractionalized\n        });\n        idList.push(fracNFTCount);\n        idListLength = idList.length;\n        fracNFTCount += 1;\n        emit Fractionalized(msg.sender, fracNFTId, erc20Symbol, address(erc20));\n        return fracNFTId;\n    }\n\n    /// @notice A holder of the entire ERC20 supply can call redeem in order to receive the underlying NFT from the contract. The ERC20 tokens get transferred to the contract address.\n    /// @param fracNFTId The ID of the fractionalized NFT to redem.\n    /// @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling redeem().\n    function redeem(uint256 fracNFTId) public {\n        ERC20 erc20 = ERC20(fracNFTs[fracNFTId].erc20Address);\n        uint256 redeemerBalance = erc20.balanceOf(msg.sender);\n        uint256 erc20Supply = erc20.totalSupply();\n        require(\n            redeemerBalance == erc20Supply,\n            \"Redeemeer does not hold the entire supply.\"\n        );\n        erc20.transferFrom(msg.sender, address(this), redeemerBalance);\n        ERC721 erc721 = ERC721(fracNFTs[fracNFTId].erc721Address);\n        erc721.safeTransferFrom(\n            address(this),\n            msg.sender,\n            fracNFTs[fracNFTId].nftTokenId\n        );\n        emit Redeemed(msg.sender, fracNFTId);\n    }\n\n    /// @notice Allows a holder of the ERC20 tokens to claim his share of the sale proceedings (in ether) following a buyout of the fractionalized NFT.\n    /// @param fracNFTId The ID of the fractionalized NFT to claim a payout for.\n    /// @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling claim().\n    function claim(uint256 fracNFTId) public {\n        require(\n            fracNFTs[fracNFTId].state == State.BoughtOut,\n            \"Fractionalized NFT has not been bought out.\"\n        );\n        ERC20 erc20 = ERC20(fracNFTs[fracNFTId].erc20Address);\n        uint256 claimerBalance = erc20.balanceOf(msg.sender);\n        require(claimerBalance > 0, \"Claimer does not hold any tokens.\");\n        erc20.transferFrom(msg.sender, address(this), claimerBalance);\n        uint256 erc20Supply = erc20.totalSupply();\n        uint256 claimAmountWei = (fracNFTs[fracNFTId].buyoutPrice *\n            claimerBalance) / erc20Supply;\n        payable(msg.sender).transfer(claimAmountWei);\n        emit Claimed(msg.sender, fracNFTId);\n    }\n\n    /// @notice Allows an account to buy the NFT from the contract for the specified buyout price.\n    /// @param fracNFTId The ID of the fractionalized NFT to buy.\n    function buyout(uint256 fracNFTId) public payable {\n        // A buyer can buy the NFT as specified by the buyout price by sending ETH to the contract.\n        require(\n            msg.value >= fracNFTs[fracNFTId].buyoutPrice,\n            \"Sender sent less than the buyout price.\"\n        );\n        fracNFTs[fracNFTId].state = State.BoughtOut;\n        ERC721 erc721 = ERC721(fracNFTs[fracNFTId].erc721Address);\n        erc721.safeTransferFrom(\n            address(this),\n            msg.sender,\n            fracNFTs[fracNFTId].nftTokenId\n        );\n        emit BoughtOut(msg.sender, fracNFTId);\n    }\n\n    /// @dev Required to use safeTransferFrom() from OpenZeppelin's ERC721 contract (when transferring NFTs to this contract).\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 nftTokenId,\n        bytes memory data\n    ) public returns (bytes4) {\n        emit NftReceived(msg.sender);\n        return\n            bytes4(\n                keccak256(\"onERC721Received(address,address,uint256,bytes)\")\n            );\n    }\n}\n",
  "sourceMap": "432:9630:13:-:0;;;614:1;584:31;;1003:16;;;;;;;;;;432:9630;;;;;;",
  "sourcePath": "contracts/FractionalizeNFT.sol",
  "type": "contract"
}