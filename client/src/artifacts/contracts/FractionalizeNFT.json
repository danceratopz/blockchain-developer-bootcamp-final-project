{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "BoughtOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Fractionalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "NftReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "buyout",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fracNFTCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fracNFTs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "erc721Address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "erc20Symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "originalOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "buyoutPrice",
          "type": "uint256"
        },
        {
          "internalType": "enum FractionalizeNFT.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "erc20Symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "erc20Supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "buyoutPrice",
          "type": "uint256"
        }
      ],
      "name": "fractionalizeNft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getERC20Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getERC20Symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "enum FractionalizeNFT.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "idListLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "1": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "10": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "12": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol",
    "13": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "14": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "15": "contracts/ERC20Factory.sol",
    "16": "contracts/FractionalizeNFT.sol",
    "2": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "3": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
    "5": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721.sol",
    "6": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
    "8": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "9": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/FractionalizeNFT.sol",
    "exportedSymbols": {
      "Address": [
        2840
      ],
      "Context": [
        2382
      ],
      "ERC165": [
        3067
      ],
      "ERC20": [
        1135
      ],
      "ERC20Factory": [
        26
      ],
      "ERC721": [
        1951
      ],
      "FractionalizeNFT": [
        528
      ],
      "IERC165": [
        3079
      ],
      "IERC20": [
        2335
      ],
      "IERC20Metadata": [
        2360
      ],
      "IERC721": [
        2498
      ],
      "IERC721Metadata": [
        2543
      ],
      "IERC721Receiver": [
        2516
      ],
      "Strings": [
        3043
      ]
    },
    "id": 529,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 28,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:16"
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 29,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 529,
        "sourceUnit": 1136,
        "src": "65:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 30,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 529,
        "sourceUnit": 1952,
        "src": "121:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC20Factory.sol",
        "file": "./ERC20Factory.sol",
        "id": 31,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 529,
        "sourceUnit": 27,
        "src": "180:28:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2516,
              "src": "291:15:16"
            },
            "id": 33,
            "nodeType": "InheritanceSpecifier",
            "src": "291:15:16"
          }
        ],
        "canonicalName": "FractionalizeNFT",
        "contractDependencies": [
          26
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 528,
        "linearizedBaseContracts": [
          528,
          2516
        ],
        "name": "FractionalizeNFT",
        "nameLocation": "271:16:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 37,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "329:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 528,
            "src": "314:33:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "314:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 35,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -15,
                "src": "337:3:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "337:10:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b141d781",
            "id": 42,
            "mutability": "mutable",
            "name": "fracNFTs",
            "nameLocation": "397:8:16",
            "nodeType": "VariableDeclaration",
            "scope": 528,
            "src": "354:51:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT)"
            },
            "typeName": {
              "id": 41,
              "keyType": {
                "id": 38,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "363:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "354:35:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT)"
              },
              "valueType": {
                "id": 40,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 39,
                  "name": "FractionalizedNFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "371:17:16"
                },
                "referencedDeclaration": 65,
                "src": "371:17:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage_ptr",
                  "typeString": "struct FractionalizeNFT.FractionalizedNFT"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7ff58ad9",
            "id": 45,
            "mutability": "mutable",
            "name": "fracNFTCount",
            "nameLocation": "426:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 528,
            "src": "411:31:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "411:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 44,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "441:1:16",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalizeNFT.FractionalizedNFT",
            "id": 65,
            "members": [
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "fracNFTId",
                "nameLocation": "546:9:16",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "538:17:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "538:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "mutability": "mutable",
                "name": "nftTokenId",
                "nameLocation": "573:10:16",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "565:18:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "565:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "erc721Address",
                "nameLocation": "601:13:16",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "593:21:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 50,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "593:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "erc20Address",
                "nameLocation": "632:12:16",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "624:20:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 52,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "624:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "erc20Symbol",
                "nameLocation": "661:11:16",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "654:18:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 54,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "654:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "erc20Name",
                "nameLocation": "689:9:16",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "682:16:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 56,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "682:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "originalOwner",
                "nameLocation": "717:13:16",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "701:29:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 58,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "701:15:16",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "buyoutPrice",
                "nameLocation": "748:11:16",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "740:19:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 60,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "740:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "775:5:16",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "769:11:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$69",
                  "typeString": "enum FractionalizeNFT.State"
                },
                "typeName": {
                  "id": 63,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 62,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 69,
                    "src": "769:5:16"
                  },
                  "referencedDeclaration": 69,
                  "src": "769:5:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$69",
                    "typeString": "enum FractionalizeNFT.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FractionalizedNFT",
            "nameLocation": "510:17:16",
            "nodeType": "StructDefinition",
            "scope": 528,
            "src": "503:284:16",
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalizeNFT.State",
            "id": 69,
            "members": [
              {
                "id": 66,
                "name": "Fractionalized",
                "nameLocation": "806:14:16",
                "nodeType": "EnumValue",
                "src": "806:14:16"
              },
              {
                "id": 67,
                "name": "Redeemed",
                "nameLocation": "822:8:16",
                "nodeType": "EnumValue",
                "src": "822:8:16"
              },
              {
                "id": 68,
                "name": "BoughtOut",
                "nameLocation": "832:9:16",
                "nodeType": "EnumValue",
                "src": "832:9:16"
              }
            ],
            "name": "State",
            "nameLocation": "798:5:16",
            "nodeType": "EnumDefinition",
            "src": "793:50:16"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "863:35:16",
              "statements": [
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "873:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 73,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "881:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "881:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "873:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "873:18:16"
                }
              ]
            },
            "id": 78,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:2:16"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:0:16"
            },
            "scope": 528,
            "src": "849:49:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 84,
            "name": "Received",
            "nameLocation": "910:8:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "919:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "928:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "918:15:16"
            },
            "src": "904:30:16"
          },
          {
            "anonymous": false,
            "id": 88,
            "name": "NftReceived",
            "nameLocation": "945:11:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "957:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:9:16"
            },
            "src": "939:27:16"
          },
          {
            "anonymous": false,
            "id": 94,
            "name": "Fractionalized",
            "nameLocation": "977:14:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "992:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1001:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "991:15:16"
            },
            "src": "971:36:16"
          },
          {
            "anonymous": false,
            "id": 100,
            "name": "Redeemed",
            "nameLocation": "1018:8:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1027:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1036:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1026:15:16"
            },
            "src": "1012:30:16"
          },
          {
            "anonymous": false,
            "id": 106,
            "name": "BoughtOut",
            "nameLocation": "1053:9:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "1063:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "1072:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1062:15:16"
            },
            "src": "1047:31:16"
          },
          {
            "anonymous": false,
            "id": 112,
            "name": "Claimed",
            "nameLocation": "1089:7:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1097:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1106:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1096:15:16"
            },
            "src": "1083:29:16"
          },
          {
            "constant": false,
            "documentation": {
              "id": 113,
              "nodeType": "StructuredDocumentation",
              "src": "1118:123:16",
              "text": "@notice List of all property ids.\n @dev Used as a helper when iterating available properties in frontend client."
            },
            "functionSelector": "6313531f",
            "id": 116,
            "mutability": "mutable",
            "name": "idList",
            "nameLocation": "1260:6:16",
            "nodeType": "VariableDeclaration",
            "scope": 528,
            "src": "1246:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 114,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1246:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 115,
              "nodeType": "ArrayTypeName",
              "src": "1246:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 117,
              "nodeType": "StructuredDocumentation",
              "src": "1273:112:16",
              "text": "@notice idList length.\n @dev Used as a helper when iterating available properties in frontend client."
            },
            "functionSelector": "6386cd17",
            "id": 119,
            "mutability": "mutable",
            "name": "idListLength",
            "nameLocation": "1402:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 528,
            "src": "1390:24:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 118,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1390:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "1520:53:16",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 123,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1544:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1544:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 125,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1556:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1556:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 122,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "1535:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:31:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "EmitStatement",
                  "src": "1530:36:16"
                }
              ]
            },
            "id": 130,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1500:2:16"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1520:0:16"
            },
            "scope": 528,
            "src": "1493:80:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "1607:25:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 133,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1617:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:8:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:8:16"
                }
              ]
            },
            "id": 137,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1587:2:16"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1607:0:16"
            },
            "scope": 528,
            "src": "1579:53:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1712:56:16",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 144,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1729:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 146,
                      "indexExpression": {
                        "id": 145,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1738:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1729:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc20Address",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 53,
                    "src": "1729:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 143,
                  "id": 148,
                  "nodeType": "Return",
                  "src": "1722:39:16"
                }
              ]
            },
            "functionSelector": "d1bc6caa",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getERC20Address",
            "nameLocation": "1647:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "1671:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1663:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1662:19:16"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1703:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1703:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1702:9:16"
            },
            "scope": 528,
            "src": "1638:130:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1853:55:16",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 157,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1870:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 159,
                      "indexExpression": {
                        "id": 158,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1879:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1870:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc20Symbol",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 55,
                    "src": "1870:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 156,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "1863:38:16"
                }
              ]
            },
            "functionSelector": "78fe17e5",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getERC20Symbol",
            "nameLocation": "1783:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "1806:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1798:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1797:19:16"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1838:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1838:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1837:15:16"
            },
            "scope": 528,
            "src": "1774:134:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1979:49:16",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 171,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1996:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 173,
                      "indexExpression": {
                        "id": 172,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "2005:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1996:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64,
                    "src": "1996:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$69",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "functionReturnParameters": 170,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "1989:32:16"
                }
              ]
            },
            "functionSelector": "44c9af28",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getState",
            "nameLocation": "1923:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "1940:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1932:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1932:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1931:19:16"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1972:5:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$69",
                    "typeString": "enum FractionalizeNFT.State"
                  },
                  "typeName": {
                    "id": 168,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 167,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 69,
                      "src": "1972:5:16"
                    },
                    "referencedDeclaration": 69,
                    "src": "1972:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$69",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1971:7:16"
            },
            "scope": 528,
            "src": "1914:114:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "2377:849:16",
              "statements": [
                {
                  "assignments": [
                    196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "2394:3:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "2387:10:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1951",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 195,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 194,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1951,
                          "src": "2387:6:16"
                        },
                        "referencedDeclaration": 1951,
                        "src": "2387:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1951",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 200,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 198,
                        "name": "nftContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "2407:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 197,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1951,
                      "src": "2400:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1951_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2400:26:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1951",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2387:39:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2457:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2457:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 208,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2477:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$528",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$528",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2469:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 206,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2469:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2469:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 210,
                        "name": "nftTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "2484:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 201,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2436:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1951",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1514,
                      "src": "2436:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2436:59:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:59:16"
                },
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "2511:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "2505:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1135",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 214,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 213,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1135,
                          "src": "2505:5:16"
                        },
                        "referencedDeclaration": 1135,
                        "src": "2505:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1135",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 226,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 220,
                        "name": "erc20Name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "2538:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 221,
                        "name": "erc20Symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "2549:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 222,
                        "name": "erc20Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "2562:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 223,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2575:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2575:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "components": [
                        {
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2520:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Factory_$26_$",
                            "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Factory)"
                          },
                          "typeName": {
                            "id": 217,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 216,
                              "name": "ERC20Factory",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 26,
                              "src": "2524:12:16"
                            },
                            "referencedDeclaration": 26,
                            "src": "2524:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Factory_$26",
                              "typeString": "contract ERC20Factory"
                            }
                          }
                        }
                      ],
                      "id": 219,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2519:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Factory_$26_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Factory)"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2519:67:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Factory_$26",
                      "typeString": "contract ERC20Factory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2505:81:16"
                },
                {
                  "assignments": [
                    228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 228,
                      "mutability": "mutable",
                      "name": "fracNFTId",
                      "nameLocation": "2604:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "2596:17:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 227,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2596:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 230,
                  "initialValue": {
                    "id": 229,
                    "name": "fracNFTCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "2616:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2596:32:16"
                },
                {
                  "expression": {
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 231,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "2638:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 233,
                      "indexExpression": {
                        "id": 232,
                        "name": "fracNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2647:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2638:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 235,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "2706:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 236,
                          "name": "nftTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "2741:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 237,
                          "name": "nftContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "2780:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 240,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "2834:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1135",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$1135",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2826:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 238,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2826:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2826:14:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 242,
                          "name": "erc20Symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2867:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 243,
                          "name": "erc20Name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "2903:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 246,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2949:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2949:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2941:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 244,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2941:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2941:19:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 249,
                          "name": "buyoutPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "2987:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 250,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "3019:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$69_$",
                              "typeString": "type(enum FractionalizeNFT.State)"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Fractionalized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66,
                          "src": "3019:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$69",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$69",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        ],
                        "id": 234,
                        "name": "FractionalizedNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "2663:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FractionalizedNFT_$65_storage_ptr_$",
                          "typeString": "type(struct FractionalizeNFT.FractionalizedNFT storage pointer)"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "fracNFTId",
                        "nftTokenId",
                        "erc721Address",
                        "erc20Address",
                        "erc20Symbol",
                        "erc20Name",
                        "originalOwner",
                        "buyoutPrice",
                        "state"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2663:378:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$65_memory_ptr",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT memory"
                      }
                    },
                    "src": "2638:403:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                      "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "2638:403:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 258,
                        "name": "fracNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "3063:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 255,
                        "name": "idList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "3051:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3051:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3051:25:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "3051:25:16"
                },
                {
                  "expression": {
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 261,
                      "name": "idListLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "3086:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 262,
                        "name": "idList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "3101:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3101:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3086:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "3086:28:16"
                },
                {
                  "expression": {
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 266,
                      "name": "fracNFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3124:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3140:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3124:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "3124:17:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 271,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3171:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3171:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 273,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "3183:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 270,
                      "name": "Fractionalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "3156:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3156:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "EmitStatement",
                  "src": "3151:42:16"
                },
                {
                  "expression": {
                    "id": 276,
                    "name": "fracNFTId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 228,
                    "src": "3210:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 193,
                  "id": 277,
                  "nodeType": "Return",
                  "src": "3203:16:16"
                }
              ]
            },
            "functionSelector": "06fbd1f2",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fractionalizeNft",
            "nameLocation": "2043:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "nftContractAddress",
                  "nameLocation": "2068:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2060:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "nftTokenId",
                  "nameLocation": "2126:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2118:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2118:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "erc20Name",
                  "nameLocation": "2182:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2168:23:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2168:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "erc20Symbol",
                  "nameLocation": "2237:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2223:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2223:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "erc20Supply",
                  "nameLocation": "2288:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2280:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2280:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "buyoutPrice",
                  "nameLocation": "2339:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2331:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2331:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:292:16"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2368:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2368:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2367:9:16"
            },
            "scope": 528,
            "src": "2034:1192:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "3282:651:16",
              "statements": [
                {
                  "assignments": [
                    286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 286,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "3393:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "3387:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1135",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 285,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 284,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1135,
                          "src": "3387:5:16"
                        },
                        "referencedDeclaration": 1135,
                        "src": "3387:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1135",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 293,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 288,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "3407:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 290,
                          "indexExpression": {
                            "id": 289,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "3416:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3407:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "3407:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 287,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "3401:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1135_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3401:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1135",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3387:53:16"
                },
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "redeemerBalance",
                      "nameLocation": "3458:15:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "3450:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3450:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 301,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3492:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3492:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 296,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3476:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1135",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 688,
                      "src": "3476:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3476:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3450:53:16"
                },
                {
                  "assignments": [
                    303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 303,
                      "mutability": "mutable",
                      "name": "erc20Supply",
                      "nameLocation": "3521:11:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "3513:19:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 302,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3513:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 307,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 304,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3535:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1135",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 674,
                      "src": "3535:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3535:19:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3513:41:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 309,
                          "name": "redeemerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 295,
                          "src": "3572:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 310,
                          "name": "erc20Supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "3591:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3572:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656465656d65657220646f6573206e6f7420686f6c642074686520656e7469726520737570706c792e",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3604:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_236101e21dee81e2f18f31894ab8347381b8b05dc8924dcc491bb1cb5e2effc5",
                          "typeString": "literal_string \"Redeemeer does not hold the entire supply.\""
                        },
                        "value": "Redeemeer does not hold the entire supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_236101e21dee81e2f18f31894ab8347381b8b05dc8924dcc491bb1cb5e2effc5",
                          "typeString": "literal_string \"Redeemeer does not hold the entire supply.\""
                        }
                      ],
                      "id": 308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3564:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3564:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "3564:85:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 318,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3678:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3678:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 322,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3698:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$528",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$528",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3690:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 320,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3690:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3690:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 324,
                        "name": "redeemerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "3705:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 315,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3659:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1135",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 796,
                      "src": "3659:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3659:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "3659:62:16"
                },
                {
                  "assignments": [
                    329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 329,
                      "mutability": "mutable",
                      "name": "erc721",
                      "nameLocation": "3738:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "3731:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1951",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 328,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 327,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1951,
                          "src": "3731:6:16"
                        },
                        "referencedDeclaration": 1951,
                        "src": "3731:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1951",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 336,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 331,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "3754:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 333,
                          "indexExpression": {
                            "id": 332,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "3763:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3754:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "3754:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 330,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1951,
                      "src": "3747:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1951_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3747:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1951",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3731:57:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 342,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3830:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$528",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$528",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3822:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 340,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3822:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3822:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 344,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3837:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3837:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 346,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "3849:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 348,
                          "indexExpression": {
                            "id": 347,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "3858:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3849:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49,
                        "src": "3849:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 337,
                        "name": "erc721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "3798:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1951",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1514,
                      "src": "3798:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3798:82:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "3798:82:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 353,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3904:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3904:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 355,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3916:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 352,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "3895:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3895:31:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 357,
                  "nodeType": "EmitStatement",
                  "src": "3890:36:16"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "3241:6:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "3256:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "3248:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3248:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3247:19:16"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3282:0:16"
            },
            "scope": 528,
            "src": "3232:701:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "3989:472:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 365,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4107:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4107:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 367,
                              "name": "fracNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "4120:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                              }
                            },
                            "id": 369,
                            "indexExpression": {
                              "id": 368,
                              "name": "fracNFTId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "4129:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4120:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                              "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61,
                          "src": "4120:31:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4107:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e6465722073656e74206c657373207468616e20746865206275796f75742070726963652e",
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4153:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd942614136c8476e28cdebb64c2d910549cbb0b70edce8dfe326f03f4643a50",
                          "typeString": "literal_string \"Sender sent less than the buyout price.\""
                        },
                        "value": "Sender sent less than the buyout price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd942614136c8476e28cdebb64c2d910549cbb0b70edce8dfe326f03f4643a50",
                          "typeString": "literal_string \"Sender sent less than the buyout price.\""
                        }
                      ],
                      "id": 364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4099:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4099:96:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "4099:96:16"
                },
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 375,
                          "name": "fracNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "4205:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                            "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                          }
                        },
                        "id": 377,
                        "indexExpression": {
                          "id": 376,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "4214:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4205:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                          "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "4205:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$69",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 379,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "4233:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$69_$",
                          "typeString": "type(enum FractionalizeNFT.State)"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BoughtOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "4233:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$69",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "src": "4205:43:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$69",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "4205:43:16"
                },
                {
                  "assignments": [
                    385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 385,
                      "mutability": "mutable",
                      "name": "erc721",
                      "nameLocation": "4265:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "4258:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1951",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 384,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 383,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1951,
                          "src": "4258:6:16"
                        },
                        "referencedDeclaration": 1951,
                        "src": "4258:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1951",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 392,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 387,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "4281:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 389,
                          "indexExpression": {
                            "id": 388,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "4290:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4281:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "4281:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 386,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1951,
                      "src": "4274:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1951_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4274:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1951",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4258:57:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 398,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4357:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$528",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$528",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4349:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 396,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4349:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4349:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 400,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4364:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4364:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 402,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "4376:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 404,
                          "indexExpression": {
                            "id": 403,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "4385:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4376:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 405,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49,
                        "src": "4376:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 393,
                        "name": "erc721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "4325:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1951",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1514,
                      "src": "4325:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4325:82:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "4325:82:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 409,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4432:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4432:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 411,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "4444:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 408,
                      "name": "BoughtOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "4422:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4422:32:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "EmitStatement",
                  "src": "4417:37:16"
                }
              ]
            },
            "functionSelector": "07bec66f",
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyout",
            "nameLocation": "3948:6:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "3963:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3955:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3955:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3954:19:16"
            },
            "returnParameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3989:0:16"
            },
            "scope": 528,
            "src": "3939:522:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 500,
              "nodeType": "Block",
              "src": "4508:707:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$69",
                          "typeString": "enum FractionalizeNFT.State"
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 421,
                              "name": "fracNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "4603:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                              }
                            },
                            "id": 423,
                            "indexExpression": {
                              "id": 422,
                              "name": "fracNFTId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "4612:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4603:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                              "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64,
                          "src": "4603:25:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$69",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 425,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "4632:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$69_$",
                              "typeString": "type(enum FractionalizeNFT.State)"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "BoughtOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68,
                          "src": "4632:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$69",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        },
                        "src": "4603:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4672616374696f6e616c697a6564204e465420686173206e6f74206265656e20626f75676874206f75742e",
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4649:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6d91eba7472d4b813c8f94f076251f17b02a0abaa0ce0e02ab9b764eb0faeb0",
                          "typeString": "literal_string \"Fractionalized NFT has not been bought out.\""
                        },
                        "value": "Fractionalized NFT has not been bought out."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6d91eba7472d4b813c8f94f076251f17b02a0abaa0ce0e02ab9b764eb0faeb0",
                          "typeString": "literal_string \"Fractionalized NFT has not been bought out.\""
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4595:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4595:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "4595:100:16"
                },
                {
                  "assignments": [
                    433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 433,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "4711:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 500,
                      "src": "4705:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1135",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 432,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 431,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1135,
                          "src": "4705:5:16"
                        },
                        "referencedDeclaration": 1135,
                        "src": "4705:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1135",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 440,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 435,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "4725:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 437,
                          "indexExpression": {
                            "id": 436,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "4734:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4725:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "4725:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 434,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "4719:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1135_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4719:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1135",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4705:53:16"
                },
                {
                  "assignments": [
                    442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 442,
                      "mutability": "mutable",
                      "name": "claimerBalance",
                      "nameLocation": "4776:14:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 500,
                      "src": "4768:22:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 441,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4768:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 448,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 445,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4809:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4809:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 443,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "4793:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1135",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 688,
                      "src": "4793:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4793:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4768:52:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 450,
                          "name": "claimerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "4838:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4855:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4838:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d657220646f6573206e6f7420686f6c6420616e7920746f6b656e732e",
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4858:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ef2c2aa2fbe0e8bc377bb41a097869566475b4d7ba3c50ff52a2b50a0a082d5",
                          "typeString": "literal_string \"Claimer does not hold any tokens.\""
                        },
                        "value": "Claimer does not hold any tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ef2c2aa2fbe0e8bc377bb41a097869566475b4d7ba3c50ff52a2b50a0a082d5",
                          "typeString": "literal_string \"Claimer does not hold any tokens.\""
                        }
                      ],
                      "id": 449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4830:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4830:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "4830:64:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 459,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4923:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4923:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 463,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4943:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$528",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$528",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4935:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 461,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4935:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4935:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 465,
                        "name": "claimerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "4950:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 456,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "4904:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1135",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 796,
                      "src": "4904:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4904:61:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "4904:61:16"
                },
                {
                  "assignments": [
                    469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 469,
                      "mutability": "mutable",
                      "name": "erc20Supply",
                      "nameLocation": "4983:11:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 500,
                      "src": "4975:19:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4975:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 473,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 470,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "4997:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1135",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 674,
                      "src": "4997:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4997:19:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4975:41:16"
                },
                {
                  "assignments": [
                    475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 475,
                      "mutability": "mutable",
                      "name": "claimAmountWei",
                      "nameLocation": "5034:14:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 500,
                      "src": "5026:22:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 474,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5026:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 484,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 476,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "5051:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$65_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 478,
                          "indexExpression": {
                            "id": 477,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "5060:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5051:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$65_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61,
                        "src": "5051:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 480,
                        "name": "claimerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "5083:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5051:46:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 482,
                      "name": "erc20Supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "5098:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5051:58:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5026:83:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 491,
                        "name": "claimAmountWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "5148:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 487,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5127:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5127:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5119:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 485,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5119:8:16",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5119:19:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5119:28:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5119:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "5119:44:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 495,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5186:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5186:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 497,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "5198:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 494,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "5178:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5178:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 499,
                  "nodeType": "EmitStatement",
                  "src": "5173:35:16"
                }
              ]
            },
            "functionSelector": "379607f5",
            "id": 501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "4476:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "4490:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "4482:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4482:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4481:19:16"
            },
            "returnParameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4508:0:16"
            },
            "scope": 528,
            "src": "4467:748:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2515
            ],
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "5342:130:16",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 515,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5369:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5369:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 514,
                      "name": "NftReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "5357:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5357:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "EmitStatement",
                  "src": "5352:28:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f6e455243373231526563656976656428616464726573732c616464726573732c75696e743235362c627974657329",
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5414:49:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            },
                            "value": "onERC721Received(address,address,uint256,bytes)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            }
                          ],
                          "id": 521,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5404:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5404:60:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5397:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 519,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "5397:6:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5397:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 513,
                  "id": 525,
                  "nodeType": "Return",
                  "src": "5390:75:16"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "5230:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5255:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "5247:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5247:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5273:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "5265:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5265:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "nftTokenId",
                  "nameLocation": "5287:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "5279:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5279:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5312:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "5299:17:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5299:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5246:71:16"
            },
            "returnParameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "5334:6:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5334:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5333:8:16"
            },
            "scope": 528,
            "src": "5221:251:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 529,
        "src": "262:5213:16",
        "usedErrors": []
      }
    ],
    "src": "32:5444:16"
  },
  "bytecode": "",
  "bytecodeSha1": "3ffe97b26a5e448f5d479484ce1ced423bf02ea5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "FractionalizeNFT",
  "coverageMap": {
    "branches": {
      "1": {},
      "10": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {
        "FractionalizeNFT.buyout": {
          "27": [
            4107,
            4151,
            true
          ]
        },
        "FractionalizeNFT.claim": {
          "28": [
            4603,
            4647,
            true
          ],
          "29": [
            4838,
            4856,
            true
          ]
        },
        "FractionalizeNFT.redeem": {
          "30": [
            3572,
            3602,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "1": {},
      "10": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {
        "FractionalizeNFT.<fallback>": {
          "0": [
            1617,
            1625
          ]
        },
        "FractionalizeNFT.<receive>": {
          "1": [
            1530,
            1566
          ]
        },
        "FractionalizeNFT.buyout": {
          "11": [
            4099,
            4195
          ],
          "12": [
            4205,
            4248
          ],
          "13": [
            4325,
            4407
          ],
          "14": [
            4417,
            4454
          ]
        },
        "FractionalizeNFT.claim": {
          "17": [
            4595,
            4695
          ],
          "18": [
            4830,
            4894
          ],
          "19": [
            4904,
            4965
          ],
          "20": [
            5119,
            5163
          ],
          "21": [
            5173,
            5208
          ]
        },
        "FractionalizeNFT.fractionalizeNft": {
          "4": [
            2436,
            2495
          ],
          "5": [
            2638,
            3041
          ],
          "6": [
            3051,
            3076
          ],
          "7": [
            3086,
            3114
          ],
          "8": [
            3124,
            3141
          ],
          "9": [
            3151,
            3193
          ],
          "10": [
            3203,
            3219
          ]
        },
        "FractionalizeNFT.getERC20Address": {
          "3": [
            1722,
            1761
          ]
        },
        "FractionalizeNFT.getERC20Symbol": {
          "22": [
            1863,
            1901
          ]
        },
        "FractionalizeNFT.getState": {
          "2": [
            1989,
            2021
          ]
        },
        "FractionalizeNFT.onERC721Received": {
          "15": [
            5352,
            5380
          ],
          "16": [
            5390,
            5465
          ]
        },
        "FractionalizeNFT.redeem": {
          "23": [
            3564,
            3649
          ],
          "24": [
            3659,
            3721
          ],
          "25": [
            3798,
            3880
          ],
          "26": [
            3890,
            3926
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC20",
    "ERC20Factory",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Strings"
  ],
  "deployedBytecode": "608060405260043610620000d65760003560e01c80636386cd1711620000895780638da5cb5b11620000605780638da5cb5b146200029f578063b141d78114620002da578063d1bc6caa1462000316578063db006a75146200035357600080fd5b80636386cd17146200023b57806378fe17e514620002535780637ff58ad9146200028757600080fd5b806306fbd1f2146200011b57806307bec66f1462000153578063150b7a02146200016c578063379607f514620001ab57806344c9af2814620001d05780636313531f146200021657600080fd5b366200011657604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874910160405180910390a1005b600080fd5b3480156200012857600080fd5b50620001406200013a36600462001176565b6200036a565b6040519081526020015b60405180910390f35b6200016a620001643660046200120f565b6200061d565b005b3480156200017957600080fd5b50620001916200018b36600462001229565b62000762565b6040516001600160e01b031990911681526020016200014a565b348015620001b857600080fd5b506200016a620001ca3660046200120f565b620007c2565b348015620001dd57600080fd5b5062000207620001ef3660046200120f565b60009081526001602052604090206008015460ff1690565b6040516200014a9190620012e7565b3480156200022357600080fd5b5062000140620002353660046200120f565b62000ae3565b3480156200024857600080fd5b506200014060045481565b3480156200026057600080fd5b5062000278620002723660046200120f565b62000b05565b6040516200014a91906200134d565b3480156200029457600080fd5b506200014060025481565b348015620002ac57600080fd5b50600054620002c1906001600160a01b031681565b6040516001600160a01b0390911681526020016200014a565b348015620002e757600080fd5b50620002ff620002f93660046200120f565b62000bb2565b6040516200014a9998979695949392919062001362565b3480156200032357600080fd5b50620002c1620003353660046200120f565b6000908152600160205260409020600301546001600160a01b031690565b6200016a620003643660046200120f565b62000d37565b604051632142170760e11b815260009087906001600160a01b038216906342842e0e90620003a190339030908c90600401620013e5565b600060405180830381600087803b158015620003bc57600080fd5b505af1158015620003d1573d6000803e3d6000fd5b50505050600086868633604051620003e99062000fe8565b620003f8949392919062001409565b604051809103906000f08015801562000415573d6000803e3d6000fd5b509050600060025490506040518061012001604052808281526020018a81526020018b6001600160a01b03168152602001836001600160a01b03168152602001888152602001898152602001336001600160a01b03168152602001868152602001600060028111156200048c576200048c620012ae565b9052600280546000908152600160208181526040928390208551815585820151928101929092559184015192810180546001600160a01b039485166001600160a01b0319918216179091556060850151600383018054919095169116179092556080830151805162000505926004850192019062000ff6565b5060a082015180516200052391600584019160209091019062000ff6565b5060c08201516006820180546001600160a01b0319166001600160a01b0390921691909117905560e0820151600782015561010082015160088201805460ff191660018360028111156200057b576200057b620012ae565b02179055505060028054600380546001818101835560008381527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909201849055915460045590935090620005d29084906200146a565b909155505060408051338152602081018390527f4356f3fd5c3bfc18a01590adcccb99d62f10c4096f5200887c659cc52043e254910160405180910390a19998505050505050505050565b600081815260016020526040902060070154341015620006945760405162461bcd60e51b815260206004820152602760248201527f53656e6465722073656e74206c657373207468616e20746865206275796f757460448201526610383934b1b29760c91b60648201526084015b60405180910390fd5b60008181526001602081905260409182902060088101805460ff191660029081179091558101549101549151632142170760e11b81526001600160a01b039091169182916342842e0e91620006f09130913391600401620013e5565b600060405180830381600087803b1580156200070b57600080fd5b505af115801562000720573d6000803e3d6000fd5b505060408051338152602081018690527ffbbd268bb69cf922e3840dc96a6702dc064baf4b2d9594b5a66a2fe428f3f2aa935001905060405180910390a15050565b6040513381526000907fcce71fc9cfcacc4ce8153bde254a735ae423cdc2b7852fb754f4de746ac3018f9060200160405180910390a1507f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f949350505050565b600260008281526001602052604090206008015460ff166002811115620007ed57620007ed620012ae565b14620008505760405162461bcd60e51b815260206004820152602b60248201527f4672616374696f6e616c697a6564204e465420686173206e6f74206265656e2060448201526a3137bab3b43a1037baba1760a91b60648201526084016200068b565b6000818152600160205260408082206003015490516370a0823160e01b81523360048201526001600160a01b03909116919082906370a082319060240160206040518083038186803b158015620008a657600080fd5b505afa158015620008bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008e1919062001485565b9050600081116200093f5760405162461bcd60e51b815260206004820152602160248201527f436c61696d657220646f6573206e6f7420686f6c6420616e7920746f6b656e736044820152601760f91b60648201526084016200068b565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906200097190339030908690600401620013e5565b602060405180830381600087803b1580156200098c57600080fd5b505af1158015620009a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009c791906200149f565b506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000a0457600080fd5b505afa15801562000a19573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a3f919062001485565b60008581526001602052604081206007015491925090829062000a64908590620014c3565b62000a709190620014e5565b604051909150339082156108fc029083906000818181858888f1935050505015801562000aa1573d6000803e3d6000fd5b5060408051338152602081018790527fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a91015b60405180910390a15050505050565b6003818154811062000af457600080fd5b600091825260209091200154905081565b600081815260016020526040902060040180546060919062000b279062001508565b80601f016020809104026020016040519081016040528092919081815260200182805462000b559062001508565b801562000ba65780601f1062000b7a5761010080835404028352916020019162000ba6565b820191906000526020600020905b81548152906001019060200180831162000b8857829003601f168201915b50505050509050919050565b60016020819052600091825260409091208054918101546002820154600383015460048401805493946001600160a01b0393841694939092169262000bf79062001508565b80601f016020809104026020016040519081016040528092919081815260200182805462000c259062001508565b801562000c765780601f1062000c4a5761010080835404028352916020019162000c76565b820191906000526020600020905b81548152906001019060200180831162000c5857829003601f168201915b50505050509080600501805462000c8d9062001508565b80601f016020809104026020016040519081016040528092919081815260200182805462000cbb9062001508565b801562000d0c5780601f1062000ce05761010080835404028352916020019162000d0c565b820191906000526020600020905b81548152906001019060200180831162000cee57829003601f168201915b505050506006830154600784015460089094015492936001600160a01b039091169290915060ff1689565b6000818152600160205260408082206003015490516370a0823160e01b81523360048201526001600160a01b03909116919082906370a082319060240160206040518083038186803b15801562000d8d57600080fd5b505afa15801562000da2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000dc8919062001485565b90506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000e0657600080fd5b505afa15801562000e1b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e41919062001485565b905080821462000ea75760405162461bcd60e51b815260206004820152602a60248201527f52656465656d65657220646f6573206e6f7420686f6c642074686520656e746960448201526939329039bab838363c9760b11b60648201526084016200068b565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9062000ed990339030908790600401620013e5565b602060405180830381600087803b15801562000ef457600080fd5b505af115801562000f09573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f2f91906200149f565b5060008481526001602081905260409182902060028101549101549151632142170760e11b81526001600160a01b039091169182916342842e0e9162000f7c9130913391600401620013e5565b600060405180830381600087803b15801562000f9757600080fd5b505af115801562000fac573d6000803e3d6000fd5b505060408051338152602081018990527f4896181ff8f4543cc00db9fe9b6fb7e6f032b7eb772c72ab1ec1b4d2e03b9369935001905062000ad4565b610caa806200154683390190565b828054620010049062001508565b90600052602060002090601f01602090048101928262001028576000855562001073565b82601f106200104357805160ff191683800117855562001073565b8280016001018555821562001073579182015b828111156200107357825182559160200191906001019062001056565b506200108192915062001085565b5090565b5b8082111562001081576000815560010162001086565b80356001600160a01b0381168114620010b457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115620010ed57620010ed620010b9565b604051601f8501601f19908116603f01168101908282118183101715620011185762001118620010b9565b816040528093508581528686860111156200113257600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126200115e57600080fd5b6200116f83833560208501620010cf565b9392505050565b60008060008060008060c087890312156200119057600080fd5b6200119b876200109c565b955060208701359450604087013567ffffffffffffffff80821115620011c057600080fd5b620011ce8a838b016200114c565b95506060890135915080821115620011e557600080fd5b50620011f489828a016200114c565b9350506080870135915060a087013590509295509295509295565b6000602082840312156200122257600080fd5b5035919050565b600080600080608085870312156200124057600080fd5b6200124b856200109c565b93506200125b602086016200109c565b925060408501359150606085013567ffffffffffffffff8111156200127f57600080fd5b8501601f810187136200129157600080fd5b620012a287823560208401620010cf565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b60038110620012e357634e487b7160e01b600052602160045260246000fd5b9052565b60208101620012f78284620012c4565b92915050565b6000815180845260005b81811015620013255760208185018101518683018201520162001307565b8181111562001338576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006200116f6020830184620012fd565b898152602081018990526001600160a01b0388811660408301528781166060830152610120608083018190526000916200139f8483018a620012fd565b915083820360a0850152620013b58289620012fd565b925080871660c085015250508360e0830152620013d7610100830184620012c4565b9a9950505050505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6080815260006200141e6080830187620012fd565b8281036020840152620014328187620012fd565b604084019590955250506001600160a01b039190911660609091015292915050565b634e487b7160e01b600052601160045260246000fd5b6000821982111562001480576200148062001454565b500190565b6000602082840312156200149857600080fd5b5051919050565b600060208284031215620014b257600080fd5b815180151581146200116f57600080fd5b6000816000190483118215151615620014e057620014e062001454565b500290565b6000826200150357634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200151d57607f821691505b602082108114156200153f57634e487b7160e01b600052602260045260246000fd5b5091905056fe60806040523480156200001157600080fd5b5060405162000caa38038062000caa8339810160408190526200003491620002dd565b8351849084906200004d9060039060208501906200016a565b508051620000639060049060208401906200016a565b5050506200007881836200008260201b60201c565b50505050620003d6565b6001600160a01b038216620000dd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f1919062000372565b90915550506001600160a01b038216600090815260208190526040812080548392906200012090849062000372565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001789062000399565b90600052602060002090601f0160209004810192826200019c5760008555620001e7565b82601f10620001b757805160ff1916838001178555620001e7565b82800160010185558215620001e7579182015b82811115620001e7578251825591602001919060010190620001ca565b50620001f5929150620001f9565b5090565b5b80821115620001f55760008155600101620001fa565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023857600080fd5b81516001600160401b038082111562000255576200025562000210565b604051601f8301601f19908116603f0116810190828211818310171562000280576200028062000210565b816040528381526020925086838588010111156200029d57600080fd5b600091505b83821015620002c15785820183015181830184015290820190620002a2565b83821115620002d35760008385830101525b9695505050505050565b60008060008060808587031215620002f457600080fd5b84516001600160401b03808211156200030c57600080fd5b6200031a8883890162000226565b955060208701519150808211156200033157600080fd5b50620003408782880162000226565b60408701516060880151919550935090506001600160a01b03811681146200036757600080fd5b939692955090935050565b600082198211156200039457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620003ae57607f821691505b60208210811415620003d057634e487b7160e01b600052602260045260246000fd5b50919050565b6108c480620003e66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220af78008638528eec26bd4cc85b97c678fda33ac96c30d301338538464b6d994b64736f6c63430008090033a2646970667358221220e898715897cc41d550f3831d2609d9b8bc3eb8778c28847b1a11e7abca36f1f664736f6c63430008090033",
  "deployedSourceMap": "262:5213:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1617:8;;;262:5213;;;;;;;;;;;;;;;;1617:8;;;262:5213;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1617:8;;;262:5213;;;;1535:31;;;1544:10;188:51:18;;1556:9:16;270:2:18;255:18;;248:34;1535:31:16;;161:18:18;1535:31:16;;;;;;;262:5213;;1617:8;;;2034:1192;;;;;;;;;;-1:-1:-1;2034:1192:16;;;;;:::i;:::-;;:::i;:::-;;;2442:25:18;;;2430:2;2415:18;2034:1192:16;;;;;;;;3939:522;;;;;;:::i;:::-;;:::i;:::-;;5221:251;;;;;;;;;;-1:-1:-1;5221:251:16;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3497:33:18;;;3479:52;;3467:2;3452:18;5221:251:16;3335:202:18;4467:748:16;;;;;;;;;;-1:-1:-1;4467:748:16;;;;;:::i;:::-;;:::i;1914:114::-;;;;;;;;;;-1:-1:-1;1914:114:16;;;;;:::i;:::-;1972:5;1996:19;;;:8;:19;;;;;:25;;;;;;1914:114;;;;;;;;:::i;1246:20::-;;;;;;;;;;-1:-1:-1;1246:20:16;;;;;:::i;:::-;;:::i;1390:24::-;;;;;;;;;;;;;;;;1774:134;;;;;;;;;;-1:-1:-1;1774:134:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;411:31::-;;;;;;;;;;;;;;;;314:33;;;;;;;;;;-1:-1:-1;314:33:16;;;;-1:-1:-1;;;;;314:33:16;;;;;;-1:-1:-1;;;;;4981:32:18;;;4963:51;;4951:2;4936:18;314:33:16;4817:203:18;354:51:16;;;;;;;;;;-1:-1:-1;354:51:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;1638:130::-;;;;;;;;;;-1:-1:-1;1638:130:16;;;;;:::i;:::-;1703:7;1729:19;;;:8;:19;;;;;:32;;;-1:-1:-1;;;;;1729:32:16;;1638:130;3232:701;;;;;;:::i;:::-;;:::i;2034:1192::-;2436:59;;-1:-1:-1;;;2436:59:16;;2368:7;;2407:18;;-1:-1:-1;;;;;2436:20:16;;;;;:59;;2457:10;;2477:4;;2484:10;;2436:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2505:11;2538:9;2549:11;2562;2575:10;2519:67;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2505:81;;2596:17;2616:12;;2596:32;;2663:378;;;;;;;;2706:9;2663:378;;;;2741:10;2663:378;;;;2780:18;-1:-1:-1;;;;;2663:378:16;;;;;2834:5;-1:-1:-1;;;;;2663:378:16;;;;;2867:11;2663:378;;;;2903:9;2663:378;;;;2949:10;-1:-1:-1;;;;;2663:378:16;;;;;2987:11;2663:378;;;;3019:20;2663:378;;;;;;;;:::i;:::-;;;2647:12;;;2638:22;;;;:8;:22;;;;;;;;;:403;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2638:403:16;;;-1:-1:-1;;;;;;2638:403:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2638:403:16;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2638:403:16;;;;;;;;;-1:-1:-1;;;;;;2638:403:16;-1:-1:-1;;;;;2638:403:16;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2638:403:16;-1:-1:-1;2638:403:16;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;3063:12:16;;;3051:6;:25;;;;;;;;-1:-1:-1;3051:25:16;;;;;;;;;;3101:13;;3086:12;:28;3051:25;;-1:-1:-1;;3124:17:16;;3051:25;;3124:17;:::i;:::-;;;;-1:-1:-1;;3156:37:16;;;3171:10;188:51:18;;270:2;255:18;;248:34;;;3156:37:16;;161:18:18;3156:37:16;;;;;;;3210:9;2034:1192;-1:-1:-1;;;;;;;;;2034:1192:16:o;3939:522::-;4120:19;;;;:8;:19;;;;;:31;;;4107:9;:44;;4099:96;;;;-1:-1:-1;;;4099:96:16;;7444:2:18;4099:96:16;;;7426:21:18;7483:2;7463:18;;;7456:30;7522:34;7502:18;;;7495:62;-1:-1:-1;;;7573:18:18;;;7566:37;7620:19;;4099:96:16;;;;;;;;;4205:19;;;;:8;:19;;;;;;;;;:25;;;:43;;-1:-1:-1;;4205:43:16;4233:15;4205:43;;;;;;4281:33;;;4376:30;;;4325:82;;-1:-1:-1;;;4325:82:16;;-1:-1:-1;;;;;4281:33:16;;;;;;4325:23;;:82;;4357:4;;4364:10;;4325:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4422:32:16;;;4432:10;188:51:18;;270:2;255:18;;248:34;;;4422:32:16;;-1:-1:-1;161:18:18;;-1:-1:-1;4422:32:16;;;;;;;3989:472;3939:522;:::o;5221:251::-;5357:23;;5369:10;4963:51:18;;5334:6:16;;5357:23;;4951:2:18;4936:18;5357:23:16;;;;;;;-1:-1:-1;5404:60:16;5221:251;;;;;;:::o;4467:748::-;4632:15;4603:19;;;;:8;:19;;;;;:25;;;;;:44;;;;;;;;:::i;:::-;;4595:100;;;;-1:-1:-1;;;4595:100:16;;7852:2:18;4595:100:16;;;7834:21:18;7891:2;7871:18;;;7864:30;7930:34;7910:18;;;7903:62;-1:-1:-1;;;7981:18:18;;;7974:41;8032:19;;4595:100:16;7650:407:18;4595:100:16;4705:11;4725:19;;;:8;:19;;;;;;:32;;;4793:27;;-1:-1:-1;;;4793:27:16;;4809:10;4793:27;;;4963:51:18;-1:-1:-1;;;;;4725:32:16;;;;4705:11;4725:32;;4793:15;;4936:18:18;;4793:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4768:52;;4855:1;4838:14;:18;4830:64;;;;-1:-1:-1;;;4830:64:16;;8453:2:18;4830:64:16;;;8435:21:18;8492:2;8472:18;;;8465:30;8531:34;8511:18;;;8504:62;-1:-1:-1;;;8582:18:18;;;8575:31;8623:19;;4830:64:16;8251:397:18;4830:64:16;4904:61;;-1:-1:-1;;;4904:61:16;;-1:-1:-1;;;;;4904:18:16;;;;;:61;;4923:10;;4943:4;;4950:14;;4904:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4975:19;4997:5;-1:-1:-1;;;;;4997:17:16;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5026:22;5051:19;;;:8;:19;;;;;:31;;;4975:41;;-1:-1:-1;5026:22:16;4975:41;;5051:46;;5083:14;;5051:46;:::i;:::-;:58;;;;:::i;:::-;5119:44;;5026:83;;-1:-1:-1;5127:10:16;;5119:44;;;;;5026:83;;5119:44;;;;5026:83;5127:10;5119:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5178:30:16;;;5186:10;188:51:18;;270:2;255:18;;248:34;;;5178:30:16;;161:18:18;5178:30:16;;;;;;;;4508:707;;;;4467:748;:::o;1246:20::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1246:20:16;:::o;1774:134::-;1870:19;;;;:8;:19;;;;;:31;;1863:38;;1838:13;;1870:31;1863:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1774:134;;;:::o;354:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;354:51:16;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;354:51:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;354:51:16;;;;;;-1:-1:-1;354:51:16;;;:::o;3232:701::-;3387:11;3407:19;;;:8;:19;;;;;;:32;;;3476:27;;-1:-1:-1;;;3476:27:16;;3492:10;3476:27;;;4963:51:18;-1:-1:-1;;;;;3407:32:16;;;;3387:11;3407:32;;3476:15;;4936:18:18;;3476:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3450:53;;3513:19;3535:5;-1:-1:-1;;;;;3535:17:16;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3513:41;;3591:11;3572:15;:30;3564:85;;;;-1:-1:-1;;;3564:85:16;;9917:2:18;3564:85:16;;;9899:21:18;9956:2;9936:18;;;9929:30;9995:34;9975:18;;;9968:62;-1:-1:-1;;;10046:18:18;;;10039:40;10096:19;;3564:85:16;9715:406:18;3564:85:16;3659:62;;-1:-1:-1;;;3659:62:16;;-1:-1:-1;;;;;3659:18:16;;;;;:62;;3678:10;;3698:4;;3705:15;;3659:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3731:13:16;3754:19;;;:8;:19;;;;;;;;;:33;;;;3849:30;;;3798:82;;-1:-1:-1;;;3798:82:16;;-1:-1:-1;;;;;3754:33:16;;;;;;3798:23;;:82;;3830:4;;3837:10;;3798:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3895:31:16;;;3904:10;188:51:18;;270:2;255:18;;248:34;;;3895:31:16;;-1:-1:-1;161:18:18;;-1:-1:-1;3895:31:16;14:274:18;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;293:173:18;361:20;;-1:-1:-1;;;;;410:31:18;;400:42;;390:70;;456:1;453;446:12;390:70;293:173;;;:::o;471:127::-;532:10;527:3;523:20;520:1;513:31;563:4;560:1;553:15;587:4;584:1;577:15;603:632;668:5;698:18;739:2;731:6;728:14;725:40;;;745:18;;:::i;:::-;820:2;814:9;788:2;874:15;;-1:-1:-1;;870:24:18;;;896:2;866:33;862:42;850:55;;;920:18;;;940:22;;;917:46;914:72;;;966:18;;:::i;:::-;1006:10;1002:2;995:22;1035:6;1026:15;;1065:6;1057;1050:22;1105:3;1096:6;1091:3;1087:16;1084:25;1081:45;;;1122:1;1119;1112:12;1081:45;1172:6;1167:3;1160:4;1152:6;1148:17;1135:44;1227:1;1220:4;1211:6;1203;1199:19;1195:30;1188:41;;;;603:632;;;;;:::o;1240:222::-;1283:5;1336:3;1329:4;1321:6;1317:17;1313:27;1303:55;;1354:1;1351;1344:12;1303:55;1376:80;1452:3;1443:6;1430:20;1423:4;1415:6;1411:17;1376:80;:::i;:::-;1367:89;1240:222;-1:-1:-1;;;1240:222:18:o;1467:824::-;1591:6;1599;1607;1615;1623;1631;1684:3;1672:9;1663:7;1659:23;1655:33;1652:53;;;1701:1;1698;1691:12;1652:53;1724:29;1743:9;1724:29;:::i;:::-;1714:39;;1800:2;1789:9;1785:18;1772:32;1762:42;;1855:2;1844:9;1840:18;1827:32;1878:18;1919:2;1911:6;1908:14;1905:34;;;1935:1;1932;1925:12;1905:34;1958:50;2000:7;1991:6;1980:9;1976:22;1958:50;:::i;:::-;1948:60;;2061:2;2050:9;2046:18;2033:32;2017:48;;2090:2;2080:8;2077:16;2074:36;;;2106:1;2103;2096:12;2074:36;;2129:52;2173:7;2162:8;2151:9;2147:24;2129:52;:::i;:::-;2119:62;;;2228:3;2217:9;2213:19;2200:33;2190:43;;2280:3;2269:9;2265:19;2252:33;2242:43;;1467:824;;;;;;;;:::o;2478:180::-;2537:6;2590:2;2578:9;2569:7;2565:23;2561:32;2558:52;;;2606:1;2603;2596:12;2558:52;-1:-1:-1;2629:23:18;;2478:180;-1:-1:-1;2478:180:18:o;2663:667::-;2758:6;2766;2774;2782;2835:3;2823:9;2814:7;2810:23;2806:33;2803:53;;;2852:1;2849;2842:12;2803:53;2875:29;2894:9;2875:29;:::i;:::-;2865:39;;2923:38;2957:2;2946:9;2942:18;2923:38;:::i;:::-;2913:48;;3008:2;2997:9;2993:18;2980:32;2970:42;;3063:2;3052:9;3048:18;3035:32;3090:18;3082:6;3079:30;3076:50;;;3122:1;3119;3112:12;3076:50;3145:22;;3198:4;3190:13;;3186:27;-1:-1:-1;3176:55:18;;3227:1;3224;3217:12;3176:55;3250:74;3316:7;3311:2;3298:16;3293:2;3289;3285:11;3250:74;:::i;:::-;3240:84;;;2663:667;;;;;;;:::o;3542:127::-;3603:10;3598:3;3594:20;3591:1;3584:31;3634:4;3631:1;3624:15;3658:4;3655:1;3648:15;3674:233;3751:1;3744:5;3741:12;3731:143;;3796:10;3791:3;3787:20;3784:1;3777:31;3831:4;3828:1;3821:15;3859:4;3856:1;3849:15;3731:143;3883:18;;3674:233::o;3912:198::-;4052:2;4037:18;;4064:40;4041:9;4086:6;4064:40;:::i;:::-;3912:198;;;;:::o;4115:472::-;4157:3;4195:5;4189:12;4222:6;4217:3;4210:19;4247:1;4257:162;4271:6;4268:1;4265:13;4257:162;;;4333:4;4389:13;;;4385:22;;4379:29;4361:11;;;4357:20;;4350:59;4286:12;4257:162;;;4437:6;4434:1;4431:13;4428:87;;;4503:1;4496:4;4487:6;4482:3;4478:16;4474:27;4467:38;4428:87;-1:-1:-1;4569:2:18;4548:15;-1:-1:-1;;4544:29:18;4535:39;;;;4576:4;4531:50;;4115:472;-1:-1:-1;;4115:472:18:o;4592:220::-;4741:2;4730:9;4723:21;4704:4;4761:45;4802:2;4791:9;4787:18;4779:6;4761:45;:::i;5025:1009::-;5444:25;;;5500:2;5485:18;;5478:34;;;-1:-1:-1;;;;;5586:15:18;;;5581:2;5566:18;;5559:43;5638:15;;;5633:2;5618:18;;5611:43;5432:3;5685;5670:19;;5663:31;;;5403:4;;5717:45;5743:18;;;5735:6;5717:45;:::i;:::-;5703:59;;5811:9;5803:6;5799:22;5793:3;5782:9;5778:19;5771:51;5839:33;5865:6;5857;5839:33;:::i;:::-;5831:41;;5921:2;5913:6;5909:15;5903:3;5892:9;5888:19;5881:44;;;5962:6;5956:3;5945:9;5941:19;5934:35;5978:50;6023:3;6012:9;6008:19;6000:6;5978:50;:::i;:::-;5025:1009;;;;;;;;;;;;:::o;6039:375::-;-1:-1:-1;;;;;6297:15:18;;;6279:34;;6349:15;;;;6344:2;6329:18;;6322:43;6396:2;6381:18;;6374:34;;;;6229:2;6214:18;;6039:375::o;6419:553::-;6672:3;6661:9;6654:22;6635:4;6699:46;6740:3;6729:9;6725:19;6717:6;6699:46;:::i;:::-;6793:9;6785:6;6781:22;6776:2;6765:9;6761:18;6754:50;6821:33;6847:6;6839;6821:33;:::i;:::-;6885:2;6870:18;;6863:34;;;;-1:-1:-1;;;;;;;6933:32:18;;;;6928:2;6913:18;;;6906:60;6813:41;6419:553;-1:-1:-1;;6419:553:18:o;6977:127::-;7038:10;7033:3;7029:20;7026:1;7019:31;7069:4;7066:1;7059:15;7093:4;7090:1;7083:15;7109:128;7149:3;7180:1;7176:6;7173:1;7170:13;7167:39;;;7186:18;;:::i;:::-;-1:-1:-1;7222:9:18;;7109:128::o;8062:184::-;8132:6;8185:2;8173:9;8164:7;8160:23;8156:32;8153:52;;;8201:1;8198;8191:12;8153:52;-1:-1:-1;8224:16:18;;8062:184;-1:-1:-1;8062:184:18:o;8653:277::-;8720:6;8773:2;8761:9;8752:7;8748:23;8744:32;8741:52;;;8789:1;8786;8779:12;8741:52;8821:9;8815:16;8874:5;8867:13;8860:21;8853:5;8850:32;8840:60;;8896:1;8893;8886:12;8935:168;8975:7;9041:1;9037;9033:6;9029:14;9026:1;9023:21;9018:1;9011:9;9004:17;9000:45;8997:71;;;9048:18;;:::i;:::-;-1:-1:-1;9088:9:18;;8935:168::o;9108:217::-;9148:1;9174;9164:132;;9218:10;9213:3;9209:20;9206:1;9199:31;9253:4;9250:1;9243:15;9281:4;9278:1;9271:15;9164:132;-1:-1:-1;9310:9:18;;9108:217::o;9330:380::-;9409:1;9405:12;;;;9452;;;9473:61;;9527:4;9519:6;9515:17;9505:27;;9473:61;9580:2;9572:6;9569:14;9549:18;9546:38;9543:161;;;9626:10;9621:3;9617:20;9614:1;9607:31;9661:4;9658:1;9651:15;9689:4;9686:1;9679:15;9543:161;;9330:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "idList(uint256)": {
        "notice": "List of all property ids."
      },
      "idListLength()": {
        "notice": "idList length."
      }
    },
    "stateVariables": {
      "idList": {
        "details": "Used as a helper when iterating available properties in frontend client."
      },
      "idListLength": {
        "details": "Used as a helper when iterating available properties in frontend client."
      }
    },
    "version": 1
  },
  "offset": [
    262,
    5475
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0xD6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6386CD17 GT PUSH3 0x89 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH3 0x60 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x29F JUMPI DUP1 PUSH4 0xB141D781 EQ PUSH3 0x2DA JUMPI DUP1 PUSH4 0xD1BC6CAA EQ PUSH3 0x316 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH3 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6386CD17 EQ PUSH3 0x23B JUMPI DUP1 PUSH4 0x78FE17E5 EQ PUSH3 0x253 JUMPI DUP1 PUSH4 0x7FF58AD9 EQ PUSH3 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FBD1F2 EQ PUSH3 0x11B JUMPI DUP1 PUSH4 0x7BEC66F EQ PUSH3 0x153 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH3 0x16C JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH3 0x1AB JUMPI DUP1 PUSH4 0x44C9AF28 EQ PUSH3 0x1D0 JUMPI DUP1 PUSH4 0x6313531F EQ PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH3 0x116 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x140 PUSH3 0x13A CALLDATASIZE PUSH1 0x4 PUSH3 0x1176 JUMP JUMPDEST PUSH3 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x16A PUSH3 0x164 CALLDATASIZE PUSH1 0x4 PUSH3 0x120F JUMP JUMPDEST PUSH3 0x61D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x191 PUSH3 0x18B CALLDATASIZE PUSH1 0x4 PUSH3 0x1229 JUMP JUMPDEST PUSH3 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x16A PUSH3 0x1CA CALLDATASIZE PUSH1 0x4 PUSH3 0x120F JUMP JUMPDEST PUSH3 0x7C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x207 PUSH3 0x1EF CALLDATASIZE PUSH1 0x4 PUSH3 0x120F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x14A SWAP2 SWAP1 PUSH3 0x12E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x140 PUSH3 0x235 CALLDATASIZE PUSH1 0x4 PUSH3 0x120F JUMP JUMPDEST PUSH3 0xAE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x140 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x278 PUSH3 0x272 CALLDATASIZE PUSH1 0x4 PUSH3 0x120F JUMP JUMPDEST PUSH3 0xB05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x14A SWAP2 SWAP1 PUSH3 0x134D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x140 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH3 0x2C1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2FF PUSH3 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH3 0x120F JUMP JUMPDEST PUSH3 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x14A SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1362 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2C1 PUSH3 0x335 CALLDATASIZE PUSH1 0x4 PUSH3 0x120F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x16A PUSH3 0x364 CALLDATASIZE PUSH1 0x4 PUSH3 0x120F JUMP JUMPDEST PUSH3 0xD37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH3 0x3A1 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH3 0x13E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP7 DUP7 DUP7 CALLER PUSH1 0x40 MLOAD PUSH3 0x3E9 SWAP1 PUSH3 0xFE8 JUMP JUMPDEST PUSH3 0x3F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x415 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x48C JUMPI PUSH3 0x48C PUSH3 0x12AE JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE DUP6 DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP5 ADD MLOAD SWAP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP6 AND SWAP2 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP1 MLOAD PUSH3 0x505 SWAP3 PUSH1 0x4 DUP6 ADD SWAP3 ADD SWAP1 PUSH3 0xFF6 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP1 MLOAD PUSH3 0x523 SWAP2 PUSH1 0x5 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xFF6 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x57B JUMPI PUSH3 0x57B PUSH3 0x12AE JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 SWAP3 ADD DUP5 SWAP1 SSTORE SWAP2 SLOAD PUSH1 0x4 SSTORE SWAP1 SWAP4 POP SWAP1 PUSH3 0x5D2 SWAP1 DUP5 SWAP1 PUSH3 0x146A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4356F3FD5C3BFC18A01590ADCCCB99D62F10C4096F5200887C659CC52043E254 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD CALLVALUE LT ISZERO PUSH3 0x694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E6465722073656E74206C657373207468616E20746865206275796F7574 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x10383934B1B297 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 SWAP2 PUSH4 0x42842E0E SWAP2 PUSH3 0x6F0 SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH3 0x13E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x720 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0xFBBD268BB69CF922E3840DC96A6702DC064BAF4B2D9594B5A66A2FE428F3F2AA SWAP4 POP ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH32 0xCCE71FC9CFCACC4CE8153BDE254A735AE423CDC2B7852FB754F4DE746AC3018F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH32 0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x7ED JUMPI PUSH3 0x7ED PUSH3 0x12AE JUMP JUMPDEST EQ PUSH3 0x850 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4672616374696F6E616C697A6564204E465420686173206E6F74206265656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3137BAB3B43A1037BABA17 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x68B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x8BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x8E1 SWAP2 SWAP1 PUSH3 0x1485 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH3 0x93F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D657220646F6573206E6F7420686F6C6420616E7920746F6B656E73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0x971 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH3 0x13E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x98C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x9A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x9C7 SWAP2 SWAP1 PUSH3 0x149F JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xA04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA3F SWAP2 SWAP1 PUSH3 0x1485 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 PUSH3 0xA64 SWAP1 DUP6 SWAP1 PUSH3 0x14C3 JUMP JUMPDEST PUSH3 0xA70 SWAP2 SWAP1 PUSH3 0x14E5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0xAA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH3 0xB27 SWAP1 PUSH3 0x1508 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xB55 SWAP1 PUSH3 0x1508 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xBA6 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xB7A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xBA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xB88 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 SWAP4 SWAP1 SWAP3 AND SWAP3 PUSH3 0xBF7 SWAP1 PUSH3 0x1508 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xC25 SWAP1 PUSH3 0x1508 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xC76 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xC4A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xC76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xC58 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH3 0xC8D SWAP1 PUSH3 0x1508 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xCBB SWAP1 PUSH3 0x1508 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xD0C JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xCE0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xD0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xCEE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x8 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 POP PUSH1 0xFF AND DUP10 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xD8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xDA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xDC8 SWAP2 SWAP1 PUSH3 0x1485 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xE06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xE1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xE41 SWAP2 SWAP1 PUSH3 0x1485 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH3 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656465656D65657220646F6573206E6F7420686F6C642074686520656E7469 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39329039BAB838363C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0xED9 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH3 0x13E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xEF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xF09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xF2F SWAP2 SWAP1 PUSH3 0x149F JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 SWAP2 PUSH4 0x42842E0E SWAP2 PUSH3 0xF7C SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH3 0x13E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xFAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH32 0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369 SWAP4 POP ADD SWAP1 POP PUSH3 0xAD4 JUMP JUMPDEST PUSH2 0xCAA DUP1 PUSH3 0x1546 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1004 SWAP1 PUSH3 0x1508 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1028 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1073 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1043 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1073 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1073 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1073 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1056 JUMP JUMPDEST POP PUSH3 0x1081 SWAP3 SWAP2 POP PUSH3 0x1085 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1081 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1086 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x10B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH3 0x10ED JUMPI PUSH3 0x10ED PUSH3 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1118 JUMPI PUSH3 0x1118 PUSH3 0x10B9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH3 0x1132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x115E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x116F DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH3 0x10CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x1190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x119B DUP8 PUSH3 0x109C JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x11C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x11CE DUP11 DUP4 DUP12 ADD PUSH3 0x114C JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x11F4 DUP10 DUP3 DUP11 ADD PUSH3 0x114C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x124B DUP6 PUSH3 0x109C JUMP JUMPDEST SWAP4 POP PUSH3 0x125B PUSH1 0x20 DUP7 ADD PUSH3 0x109C JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x127F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH3 0x1291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x12A2 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH3 0x10CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH3 0x12E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH3 0x12F7 DUP3 DUP5 PUSH3 0x12C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1325 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x1307 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x1338 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x116F PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x12FD JUMP JUMPDEST DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x120 PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH3 0x139F DUP5 DUP4 ADD DUP11 PUSH3 0x12FD JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH3 0x13B5 DUP3 DUP10 PUSH3 0x12FD JUMP JUMPDEST SWAP3 POP DUP1 DUP8 AND PUSH1 0xC0 DUP6 ADD MSTORE POP POP DUP4 PUSH1 0xE0 DUP4 ADD MSTORE PUSH3 0x13D7 PUSH2 0x100 DUP4 ADD DUP5 PUSH3 0x12C4 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH3 0x141E PUSH1 0x80 DUP4 ADD DUP8 PUSH3 0x12FD JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x1432 DUP2 DUP8 PUSH3 0x12FD JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x1480 JUMPI PUSH3 0x1480 PUSH3 0x1454 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x14B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x14E0 JUMPI PUSH3 0x14E0 PUSH3 0x1454 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x1503 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x151D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x153F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCAA CODESIZE SUB DUP1 PUSH3 0xCAA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2DD JUMP JUMPDEST DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x16A JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x16A JUMP JUMPDEST POP POP POP PUSH3 0x78 DUP2 DUP4 PUSH3 0x82 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xF1 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x120 SWAP1 DUP5 SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x178 SWAP1 PUSH3 0x399 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x19C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1E7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1B7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1E7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1E7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1E7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1CA JUMP JUMPDEST POP PUSH3 0x1F5 SWAP3 SWAP2 POP PUSH3 0x1F9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1F5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x255 JUMPI PUSH3 0x255 PUSH3 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x280 JUMPI PUSH3 0x280 PUSH3 0x210 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2C1 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2A2 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x2D3 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x31A DUP9 DUP4 DUP10 ADD PUSH3 0x226 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x340 DUP8 DUP3 DUP9 ADD PUSH3 0x226 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x394 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x3E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x889 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF PUSH25 0x8638528EEC26BD4CC85B97C678FDA33AC96C30D301338538 CHAINID 0x4B PUSH14 0x994B64736F6C63430008090033A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SWAP9 PUSH18 0x5897CC41D550F3831D2609D9B8BC3EB8778C 0x28 DUP5 PUSH28 0x1A11E7ABCA36F1F664736F6C63430008090033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        262,
        5475
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xD6"
    },
    "13": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "14": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "16": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "17": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "19": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "SHR",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6386CD17"
    },
    "26": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "GT",
      "path": "16"
    },
    "27": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x89"
    },
    "31": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "GT",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x60"
    },
    "43": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "45": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "50": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "51": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x29F"
    },
    "55": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "56": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "57": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB141D781"
    },
    "62": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x2DA"
    },
    "67": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "68": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "69": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD1BC6CAA"
    },
    "74": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x316"
    },
    "79": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "80": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDB006A75"
    },
    "86": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x353"
    },
    "91": {
      "fn": null,
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "92": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 0,
      "value": "0x0"
    },
    "94": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP1",
      "path": "16"
    },
    "95": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "REVERT",
      "path": "16"
    },
    "96": {
      "offset": [
        262,
        5475
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "97": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "98": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6386CD17"
    },
    "103": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "104": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x23B"
    },
    "108": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "109": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "110": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78FE17E5"
    },
    "115": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "116": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x253"
    },
    "120": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "121": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "122": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7FF58AD9"
    },
    "127": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "128": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x287"
    },
    "132": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "133": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "135": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP1",
      "path": "16"
    },
    "136": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "REVERT",
      "path": "16"
    },
    "137": {
      "offset": [
        262,
        5475
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "138": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "139": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FBD1F2"
    },
    "144": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "145": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x11B"
    },
    "149": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "150": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "151": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7BEC66F"
    },
    "156": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "157": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x153"
    },
    "161": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "162": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "163": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x150B7A02"
    },
    "168": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "169": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x16C"
    },
    "173": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "174": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "175": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x379607F5"
    },
    "180": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "181": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1AB"
    },
    "185": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "186": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "187": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x44C9AF28"
    },
    "192": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "193": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1D0"
    },
    "197": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "198": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "DUP1",
      "path": "16"
    },
    "199": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6313531F"
    },
    "204": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "EQ",
      "path": "16"
    },
    "205": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x216"
    },
    "209": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "210": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "212": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP1",
      "path": "16"
    },
    "213": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "REVERT",
      "path": "16"
    },
    "214": {
      "offset": [
        262,
        5475
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "215": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "216": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x116"
    },
    "220": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        5475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "221": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 1,
      "value": "0x40"
    },
    "223": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "DUP1",
      "path": "16"
    },
    "224": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "225": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1544,
        1554
      ],
      "op": "CALLER",
      "path": "16"
    },
    "226": {
      "op": "DUP2"
    },
    "227": {
      "op": "MSTORE"
    },
    "228": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1556,
        1565
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "231": {
      "op": "DUP3"
    },
    "232": {
      "op": "ADD"
    },
    "233": {
      "op": "MSTORE"
    },
    "234": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "267": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "268": {
      "op": "ADD"
    },
    "269": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "271": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "272": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "DUP1",
      "path": "16"
    },
    "273": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "274": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "SUB",
      "path": "16"
    },
    "275": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "276": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1535,
        1566
      ],
      "op": "LOG1",
      "path": "16"
    },
    "277": {
      "offset": [
        262,
        5475
      ],
      "op": "STOP",
      "path": "16"
    },
    "278": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        262,
        5475
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "279": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "281": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP1",
      "path": "16"
    },
    "282": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1617,
        1625
      ],
      "op": "REVERT",
      "path": "16"
    },
    "283": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "284": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "285": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "DUP1",
      "path": "16"
    },
    "286": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "287": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x128"
    },
    "291": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "292": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "294": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "DUP1",
      "path": "16"
    },
    "295": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "REVERT",
      "path": "16"
    },
    "296": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "297": {
      "op": "POP"
    },
    "298": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x140"
    },
    "302": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x13A"
    },
    "306": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "307": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "309": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1176"
    },
    "313": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2034,
        3226
      ],
      "op": "JUMP",
      "path": "16"
    },
    "314": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "315": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x36A"
    },
    "319": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2034,
        3226
      ],
      "op": "JUMP",
      "path": "16"
    },
    "320": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "321": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "323": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "324": {
      "op": "SWAP1"
    },
    "325": {
      "op": "DUP2"
    },
    "326": {
      "op": "MSTORE"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "329": {
      "op": "ADD"
    },
    "330": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "331": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "333": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "334": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "DUP1",
      "path": "16"
    },
    "335": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "336": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "SUB",
      "path": "16"
    },
    "337": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "338": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "RETURN",
      "path": "16"
    },
    "339": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "340": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x16A"
    },
    "344": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x164"
    },
    "348": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "349": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "351": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x120F"
    },
    "355": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        3939,
        4461
      ],
      "op": "JUMP",
      "path": "16"
    },
    "356": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "357": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x61D"
    },
    "361": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        3939,
        4461
      ],
      "op": "JUMP",
      "path": "16"
    },
    "362": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "363": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "STOP",
      "path": "16"
    },
    "364": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "365": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "366": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "DUP1",
      "path": "16"
    },
    "367": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "368": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x179"
    },
    "372": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "373": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "375": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "DUP1",
      "path": "16"
    },
    "376": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "REVERT",
      "path": "16"
    },
    "377": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "378": {
      "op": "POP"
    },
    "379": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x191"
    },
    "383": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x18B"
    },
    "387": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "388": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "390": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1229"
    },
    "394": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "i",
      "offset": [
        5221,
        5472
      ],
      "op": "JUMP",
      "path": "16"
    },
    "395": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "396": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x762"
    },
    "400": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "i",
      "offset": [
        5221,
        5472
      ],
      "op": "JUMP",
      "path": "16"
    },
    "401": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "402": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "404": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "409": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "411": {
      "op": "SHL"
    },
    "412": {
      "op": "SUB"
    },
    "413": {
      "op": "NOT"
    },
    "414": {
      "op": "SWAP1"
    },
    "415": {
      "op": "SWAP2"
    },
    "416": {
      "op": "AND"
    },
    "417": {
      "op": "DUP2"
    },
    "418": {
      "op": "MSTORE"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "421": {
      "op": "ADD"
    },
    "422": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x14A"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "428": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "429": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "DUP1",
      "path": "16"
    },
    "430": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "431": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1B8"
    },
    "435": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "436": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "438": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "DUP1",
      "path": "16"
    },
    "439": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "REVERT",
      "path": "16"
    },
    "440": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "441": {
      "op": "POP"
    },
    "442": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x16A"
    },
    "446": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1CA"
    },
    "450": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "451": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "453": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x120F"
    },
    "457": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4467,
        5215
      ],
      "op": "JUMP",
      "path": "16"
    },
    "458": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "459": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x7C2"
    },
    "463": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4467,
        5215
      ],
      "op": "JUMP",
      "path": "16"
    },
    "464": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "465": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "466": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "DUP1",
      "path": "16"
    },
    "467": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "468": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1DD"
    },
    "472": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "473": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "475": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "DUP1",
      "path": "16"
    },
    "476": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "REVERT",
      "path": "16"
    },
    "477": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "478": {
      "op": "POP"
    },
    "479": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x207"
    },
    "483": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1EF"
    },
    "487": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "488": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "490": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x120F"
    },
    "494": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        1914,
        2028
      ],
      "op": "JUMP",
      "path": "16"
    },
    "495": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "496": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1972,
        1977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "498": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2015
      ],
      "op": "SWAP1",
      "path": "16",
      "statement": 2
    },
    "499": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2015
      ],
      "op": "DUP2",
      "path": "16"
    },
    "500": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2015
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "501": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "503": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2015
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "505": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2015
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "506": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2015
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "508": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2015
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "509": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2015
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "510": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2021
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "512": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2021
      ],
      "op": "ADD",
      "path": "16"
    },
    "513": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2021
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "514": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2021
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "516": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2021
      ],
      "op": "AND",
      "path": "16"
    },
    "517": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1996,
        2021
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "518": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "JUMP",
      "path": "16"
    },
    "519": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "520": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "522": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "523": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x14A"
    },
    "527": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "528": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "529": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1914,
        2028
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x12E7"
    },
    "533": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        1914,
        2028
      ],
      "op": "JUMP",
      "path": "16"
    },
    "534": {
      "offset": [
        1246,
        1266
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "535": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "536": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "DUP1",
      "path": "16"
    },
    "537": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "538": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x223"
    },
    "542": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "543": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "545": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "DUP1",
      "path": "16"
    },
    "546": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "REVERT",
      "path": "16"
    },
    "547": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "548": {
      "op": "POP"
    },
    "549": {
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x140"
    },
    "553": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x235"
    },
    "557": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "558": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "560": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x120F"
    },
    "564": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        1246,
        1266
      ],
      "op": "JUMP",
      "path": "16"
    },
    "565": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "566": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xAE3"
    },
    "570": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        1246,
        1266
      ],
      "op": "JUMP",
      "path": "16"
    },
    "571": {
      "offset": [
        1390,
        1414
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "572": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "573": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "DUP1",
      "path": "16"
    },
    "574": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "575": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x248"
    },
    "579": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "580": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "582": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "DUP1",
      "path": "16"
    },
    "583": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "REVERT",
      "path": "16"
    },
    "584": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "585": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "POP",
      "path": "16"
    },
    "586": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x140"
    },
    "590": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "592": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "593": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "DUP2",
      "path": "16"
    },
    "594": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1390,
        1414
      ],
      "op": "JUMP",
      "path": "16"
    },
    "595": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "596": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "597": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "DUP1",
      "path": "16"
    },
    "598": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "599": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x260"
    },
    "603": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "604": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "606": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "DUP1",
      "path": "16"
    },
    "607": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "REVERT",
      "path": "16"
    },
    "608": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "609": {
      "op": "POP"
    },
    "610": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x278"
    },
    "614": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x272"
    },
    "618": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "619": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "621": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x120F"
    },
    "625": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        1774,
        1908
      ],
      "op": "JUMP",
      "path": "16"
    },
    "626": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "627": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xB05"
    },
    "631": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        1774,
        1908
      ],
      "op": "JUMP",
      "path": "16"
    },
    "632": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "633": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "635": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "636": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x14A"
    },
    "640": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "641": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "642": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x134D"
    },
    "646": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        1774,
        1908
      ],
      "op": "JUMP",
      "path": "16"
    },
    "647": {
      "offset": [
        411,
        442
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "648": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "649": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "DUP1",
      "path": "16"
    },
    "650": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "651": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x294"
    },
    "655": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "656": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "658": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "DUP1",
      "path": "16"
    },
    "659": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "REVERT",
      "path": "16"
    },
    "660": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "661": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "POP",
      "path": "16"
    },
    "662": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x140"
    },
    "666": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "668": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "669": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "DUP2",
      "path": "16"
    },
    "670": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        411,
        442
      ],
      "op": "JUMP",
      "path": "16"
    },
    "671": {
      "offset": [
        314,
        347
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "672": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "673": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "DUP1",
      "path": "16"
    },
    "674": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "675": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x2AC"
    },
    "679": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "680": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "682": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "DUP1",
      "path": "16"
    },
    "683": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "REVERT",
      "path": "16"
    },
    "684": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "685": {
      "op": "POP"
    },
    "686": {
      "offset": [
        314,
        347
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "688": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "689": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x2C1"
    },
    "693": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "700": {
      "op": "SHL"
    },
    "701": {
      "op": "SUB"
    },
    "702": {
      "offset": [
        314,
        347
      ],
      "op": "AND",
      "path": "16"
    },
    "703": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "DUP2",
      "path": "16"
    },
    "704": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "JUMP",
      "path": "16"
    },
    "705": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "706": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "708": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "715": {
      "op": "SHL"
    },
    "716": {
      "op": "SUB"
    },
    "717": {
      "op": "SWAP1"
    },
    "718": {
      "op": "SWAP2"
    },
    "719": {
      "op": "AND"
    },
    "720": {
      "op": "DUP2"
    },
    "721": {
      "op": "MSTORE"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "724": {
      "op": "ADD"
    },
    "725": {
      "offset": [
        314,
        347
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x14A"
    },
    "729": {
      "op": "JUMP"
    },
    "730": {
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "731": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "732": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "733": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "734": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x2E7"
    },
    "738": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "739": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "741": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "742": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "REVERT",
      "path": "16"
    },
    "743": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "744": {
      "op": "POP"
    },
    "745": {
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x2FF"
    },
    "749": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x2F9"
    },
    "753": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "754": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "756": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x120F"
    },
    "760": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        354,
        405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "761": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "762": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xBB2"
    },
    "766": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        354,
        405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "767": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "768": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "770": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "771": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x14A"
    },
    "775": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP10",
      "path": "16"
    },
    "776": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP9",
      "path": "16"
    },
    "777": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP8",
      "path": "16"
    },
    "778": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "779": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "780": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "781": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "782": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "783": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "784": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "785": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1362"
    },
    "789": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        354,
        405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "790": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "791": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "792": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "DUP1",
      "path": "16"
    },
    "793": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "794": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x323"
    },
    "798": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "799": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "801": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "DUP1",
      "path": "16"
    },
    "802": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "REVERT",
      "path": "16"
    },
    "803": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x2C1"
    },
    "809": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x335"
    },
    "813": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "814": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "816": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x120F"
    },
    "820": {
      "fn": "FractionalizeNFT.getERC20Address",
      "jump": "i",
      "offset": [
        1638,
        1768
      ],
      "op": "JUMP",
      "path": "16"
    },
    "821": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "822": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1703,
        1710
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "824": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1748
      ],
      "op": "SWAP1",
      "path": "16",
      "statement": 3
    },
    "825": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1748
      ],
      "op": "DUP2",
      "path": "16"
    },
    "826": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1748
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "827": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1737
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "829": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1748
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "831": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1748
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "832": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1748
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "834": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1748
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "835": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1748
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "836": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1761
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "838": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1761
      ],
      "op": "ADD",
      "path": "16"
    },
    "839": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1761
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "846": {
      "op": "SHL"
    },
    "847": {
      "op": "SUB"
    },
    "848": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1761
      ],
      "op": "AND",
      "path": "16"
    },
    "849": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1729,
        1761
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "850": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1638,
        1768
      ],
      "op": "JUMP",
      "path": "16"
    },
    "851": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3232,
        3933
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "852": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3232,
        3933
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x16A"
    },
    "856": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3232,
        3933
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x364"
    },
    "860": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3232,
        3933
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "861": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3232,
        3933
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "863": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3232,
        3933
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x120F"
    },
    "867": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        3232,
        3933
      ],
      "op": "JUMP",
      "path": "16"
    },
    "868": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3232,
        3933
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "869": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3232,
        3933
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xD37"
    },
    "873": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        3232,
        3933
      ],
      "op": "JUMP",
      "path": "16"
    },
    "874": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "875": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 4,
      "value": "0x40"
    },
    "877": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "878": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "883": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "885": {
      "op": "SHL"
    },
    "886": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "DUP2",
      "path": "16"
    },
    "887": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "888": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2368,
        2375
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "890": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2368,
        2375
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "891": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2407,
        2425
      ],
      "op": "DUP8",
      "path": "16"
    },
    "892": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2407,
        2425
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "899": {
      "op": "SHL"
    },
    "900": {
      "op": "SUB"
    },
    "901": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2456
      ],
      "op": "DUP3",
      "path": "16"
    },
    "902": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2456
      ],
      "op": "AND",
      "path": "16"
    },
    "903": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2456
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "904": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2456
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "909": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2456
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "910": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x3A1"
    },
    "914": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "915": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2457,
        2467
      ],
      "op": "CALLER",
      "path": "16"
    },
    "916": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2457,
        2467
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "917": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2477,
        2481
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "918": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2477,
        2481
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "919": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2484,
        2494
      ],
      "op": "DUP13",
      "path": "16"
    },
    "920": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2484,
        2494
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "921": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "923": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "ADD",
      "path": "16"
    },
    "924": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x13E5"
    },
    "928": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2436,
        2495
      ],
      "op": "JUMP",
      "path": "16"
    },
    "929": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "930": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "932": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "934": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "935": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "DUP1",
      "path": "16"
    },
    "936": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "DUP4",
      "path": "16"
    },
    "937": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "SUB",
      "path": "16"
    },
    "938": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "DUP2",
      "path": "16"
    },
    "939": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "941": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "DUP8",
      "path": "16"
    },
    "942": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "DUP1",
      "path": "16"
    },
    "943": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "944": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "945": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "DUP1",
      "path": "16"
    },
    "946": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "947": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x3BC"
    },
    "951": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "952": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "954": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "DUP1",
      "path": "16"
    },
    "955": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "REVERT",
      "path": "16"
    },
    "956": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "957": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "POP",
      "path": "16"
    },
    "958": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "GAS",
      "path": "16"
    },
    "959": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "CALL",
      "path": "16"
    },
    "960": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "961": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "DUP1",
      "path": "16"
    },
    "962": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "963": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x3D1"
    },
    "967": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "968": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "969": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "971": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "DUP1",
      "path": "16"
    },
    "972": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "973": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "974": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "976": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "REVERT",
      "path": "16"
    },
    "977": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "978": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "POP",
      "path": "16"
    },
    "979": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "POP",
      "path": "16"
    },
    "980": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "POP",
      "path": "16"
    },
    "981": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2495
      ],
      "op": "POP",
      "path": "16"
    },
    "982": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2505,
        2516
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "984": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2538,
        2547
      ],
      "op": "DUP7",
      "path": "16"
    },
    "985": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2549,
        2560
      ],
      "op": "DUP7",
      "path": "16"
    },
    "986": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2562,
        2573
      ],
      "op": "DUP7",
      "path": "16"
    },
    "987": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2575,
        2585
      ],
      "op": "CALLER",
      "path": "16"
    },
    "988": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "990": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "991": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x3E9"
    },
    "995": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "996": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xFE8"
    },
    "1000": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2519,
        2586
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1001": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1002": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x3F8"
    },
    "1006": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "1007": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1008": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1009": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1010": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1011": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1409"
    },
    "1015": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2519,
        2586
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1016": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1017": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1019": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1020": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1021": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1022": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "SUB",
      "path": "16"
    },
    "1023": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1024": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1026": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "CREATE",
      "path": "16"
    },
    "1027": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1028": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1029": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1030": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1031": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x415"
    },
    "1035": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1036": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1037": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1039": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1040": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "1041": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1042": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1044": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1045": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1046": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2519,
        2586
      ],
      "op": "POP",
      "path": "16"
    },
    "1047": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2505,
        2586
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1048": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2505,
        2586
      ],
      "op": "POP",
      "path": "16"
    },
    "1049": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2596,
        2613
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1051": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2616,
        2628
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1053": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2616,
        2628
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1054": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2596,
        2628
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1055": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2596,
        2628
      ],
      "op": "POP",
      "path": "16"
    },
    "1056": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 5,
      "value": "0x40"
    },
    "1058": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1059": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1060": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x120"
    },
    "1063": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1064": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1066": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1067": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1068": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2706,
        2715
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1069": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1070": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1071": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1073": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1074": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2741,
        2751
      ],
      "op": "DUP11",
      "path": "16"
    },
    "1075": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1076": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1077": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1079": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1080": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2780,
        2798
      ],
      "op": "DUP12",
      "path": "16"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1087": {
      "op": "SHL"
    },
    "1088": {
      "op": "SUB"
    },
    "1089": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "AND",
      "path": "16"
    },
    "1090": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1091": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1092": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1094": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1095": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2834,
        2839
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1102": {
      "op": "SHL"
    },
    "1103": {
      "op": "SUB"
    },
    "1104": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "AND",
      "path": "16"
    },
    "1105": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1106": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1107": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1109": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1110": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2867,
        2878
      ],
      "op": "DUP9",
      "path": "16"
    },
    "1111": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1112": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1113": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1115": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1116": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2903,
        2912
      ],
      "op": "DUP10",
      "path": "16"
    },
    "1117": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1118": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1119": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1121": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1122": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2949,
        2959
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1129": {
      "op": "SHL"
    },
    "1130": {
      "op": "SUB"
    },
    "1131": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "AND",
      "path": "16"
    },
    "1132": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1133": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1134": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1136": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1137": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2987,
        2998
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1138": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1139": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1140": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1142": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1143": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3019,
        3039
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1145": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1147": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1148": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "GT",
      "path": "16"
    },
    "1149": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1150": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x48C"
    },
    "1154": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1155": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x48C"
    },
    "1159": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x12AE"
    },
    "1163": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2663,
        3041
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1164": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1165": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1166": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2663,
        3041
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1167": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2647,
        2659
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1169": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2647,
        2659
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1170": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2647,
        2659
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1171": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1173": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1174": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1175": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1176": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2646
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1178": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1180": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1181": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1182": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1183": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1185": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1186": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1187": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1188": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        2660
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1189": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1190": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1191": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1192": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1193": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1194": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1195": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1196": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1197": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1198": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1199": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1200": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1201": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1202": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1203": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1204": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1205": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1206": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1207": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1208": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1209": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1210": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1211": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1212": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "1222": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1223": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "AND",
      "path": "16"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1230": {
      "op": "SHL"
    },
    "1231": {
      "op": "SUB"
    },
    "1232": {
      "op": "NOT"
    },
    "1233": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1234": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1235": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "AND",
      "path": "16"
    },
    "1236": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "OR",
      "path": "16"
    },
    "1237": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1238": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1239": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1240": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1242": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1243": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1244": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1245": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "1247": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1248": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1249": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1250": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1251": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1252": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1253": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "1254": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "AND",
      "path": "16"
    },
    "1255": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1256": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "AND",
      "path": "16"
    },
    "1257": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "OR",
      "path": "16"
    },
    "1258": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1259": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1260": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1261": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "1263": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1264": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1265": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1266": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1267": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1268": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x505"
    },
    "1272": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1273": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1275": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1276": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1277": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1278": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1279": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1280": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xFF6"
    },
    "1284": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2638,
        3041
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1285": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1286": {
      "op": "POP"
    },
    "1287": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "1289": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1290": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1291": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1292": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1293": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1294": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x523"
    },
    "1298": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1299": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "1301": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1302": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1303": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1304": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1306": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1307": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1308": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1309": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1310": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xFF6"
    },
    "1314": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2638,
        3041
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1315": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1316": {
      "op": "POP"
    },
    "1317": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC0"
    },
    "1319": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1320": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1321": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1322": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "1324": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1325": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1326": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1327": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1334": {
      "op": "SHL"
    },
    "1335": {
      "op": "SUB"
    },
    "1336": {
      "op": "NOT"
    },
    "1337": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "AND",
      "path": "16"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1344": {
      "op": "SHL"
    },
    "1345": {
      "op": "SUB"
    },
    "1346": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1347": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1348": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "AND",
      "path": "16"
    },
    "1349": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1350": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1351": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1352": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "OR",
      "path": "16"
    },
    "1353": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1354": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1355": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "1357": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1358": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1359": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1360": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "1362": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1363": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1364": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1365": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1368": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1369": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1370": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1371": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "1373": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1374": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ADD",
      "path": "16"
    },
    "1375": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1376": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1379": {
      "op": "NOT"
    },
    "1380": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "AND",
      "path": "16"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1384": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1386": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1387": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "GT",
      "path": "16"
    },
    "1388": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1389": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x57B"
    },
    "1393": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1394": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x57B"
    },
    "1398": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x12AE"
    },
    "1402": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2638,
        3041
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1403": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1404": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "MUL",
      "path": "16"
    },
    "1405": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "OR",
      "path": "16"
    },
    "1406": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1407": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2638,
        3041
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1408": {
      "op": "POP"
    },
    "1409": {
      "op": "POP"
    },
    "1410": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3063,
        3075
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 6,
      "value": "0x2"
    },
    "1412": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3063,
        3075
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1413": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3063,
        3075
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1414": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3057
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "1416": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1417": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1418": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1420": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1421": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1422": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "ADD",
      "path": "16"
    },
    "1423": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1424": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1427": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1428": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1429": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1430": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1463": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1464": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1465": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "ADD",
      "path": "16"
    },
    "1466": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1467": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1468": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1469": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3101,
        3114
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 7
    },
    "1470": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3101,
        3114
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1471": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3086,
        3098
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1473": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3086,
        3114
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1474": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1475": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "op": "SWAP1"
    },
    "1478": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3124,
        3141
      ],
      "op": "PUSH3",
      "path": "16",
      "statement": 8,
      "value": "0x5D2"
    },
    "1482": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3124,
        3141
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1483": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1484": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3051,
        3076
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1485": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3124,
        3141
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x146A"
    },
    "1489": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        3124,
        3141
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1490": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3124,
        3141
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1491": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3124,
        3141
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1492": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3124,
        3141
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1493": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3124,
        3141
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1494": {
      "op": "POP"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 9,
      "value": "0x40"
    },
    "1498": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1499": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1500": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3171,
        3181
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1501": {
      "op": "DUP2"
    },
    "1502": {
      "op": "MSTORE"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1505": {
      "op": "DUP2"
    },
    "1506": {
      "op": "ADD"
    },
    "1507": {
      "op": "DUP4"
    },
    "1508": {
      "op": "SWAP1"
    },
    "1509": {
      "op": "MSTORE"
    },
    "1510": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x4356F3FD5C3BFC18A01590ADCCCB99D62F10C4096F5200887C659CC52043E254"
    },
    "1543": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1544": {
      "op": "ADD"
    },
    "1545": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1547": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1548": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1549": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1550": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "SUB",
      "path": "16"
    },
    "1551": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1552": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3156,
        3193
      ],
      "op": "LOG1",
      "path": "16"
    },
    "1553": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        3210,
        3219
      ],
      "op": "SWAP10",
      "path": "16",
      "statement": 10
    },
    "1554": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2034,
        3226
      ],
      "op": "SWAP9",
      "path": "16"
    },
    "1555": {
      "op": "POP"
    },
    "1556": {
      "op": "POP"
    },
    "1557": {
      "op": "POP"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "op": "POP"
    },
    "1560": {
      "op": "POP"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "op": "POP"
    },
    "1564": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "o",
      "offset": [
        2034,
        3226
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1565": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1566": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4139
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 11,
      "value": "0x0"
    },
    "1568": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4139
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1569": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4139
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1570": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4139
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1571": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4128
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1573": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4139
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1575": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4139
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1576": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4139
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1578": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4139
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1579": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4139
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1580": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4151
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "1582": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4151
      ],
      "op": "ADD",
      "path": "16"
    },
    "1583": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4120,
        4151
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1584": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4107,
        4116
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1585": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4107,
        4151
      ],
      "op": "LT",
      "path": "16"
    },
    "1586": {
      "branch": 27,
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4107,
        4151
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1587": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x694"
    },
    "1591": {
      "branch": 27,
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1592": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1594": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1601": {
      "op": "SHL"
    },
    "1602": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1603": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1606": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1608": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1609": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "ADD",
      "path": "16"
    },
    "1610": {
      "op": "MSTORE"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1615": {
      "op": "DUP3"
    },
    "1616": {
      "op": "ADD"
    },
    "1617": {
      "op": "MSTORE"
    },
    "1618": {
      "op": "PUSH32",
      "value": "0x53656E6465722073656E74206C657373207468616E20746865206275796F7574"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1653": {
      "op": "DUP3"
    },
    "1654": {
      "op": "ADD"
    },
    "1655": {
      "op": "MSTORE"
    },
    "1656": {
      "op": "PUSH7",
      "value": "0x10383934B1B297"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "1666": {
      "op": "SHL"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1669": {
      "op": "DUP3"
    },
    "1670": {
      "op": "ADD"
    },
    "1671": {
      "op": "MSTORE"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1674": {
      "op": "ADD"
    },
    "1675": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1676": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1678": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1679": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1680": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1681": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "SUB",
      "path": "16"
    },
    "1682": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1683": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "16"
    },
    "1684": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4099,
        4195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1685": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 12,
      "value": "0x0"
    },
    "1687": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1688": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1689": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1690": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4213
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1692": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1694": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1695": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1696": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1697": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1699": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1700": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1701": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1702": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4224
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1703": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4230
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "1705": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4230
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1706": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4230
      ],
      "op": "ADD",
      "path": "16"
    },
    "1707": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4248
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1708": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4248
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1711": {
      "op": "NOT"
    },
    "1712": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4248
      ],
      "op": "AND",
      "path": "16"
    },
    "1713": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4233,
        4248
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1715": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4248
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1716": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4248
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1717": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4248
      ],
      "op": "OR",
      "path": "16"
    },
    "1718": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4248
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1719": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4248
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1720": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4205,
        4248
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1721": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4281,
        4314
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1722": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4281,
        4314
      ],
      "op": "ADD",
      "path": "16"
    },
    "1723": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4281,
        4314
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1724": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4376,
        4406
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 13
    },
    "1725": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4376,
        4406
      ],
      "op": "ADD",
      "path": "16"
    },
    "1726": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4376,
        4406
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1727": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1728": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1729": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1738": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1745": {
      "op": "SHL"
    },
    "1746": {
      "op": "SUB"
    },
    "1747": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4281,
        4314
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1748": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4281,
        4314
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1749": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4281,
        4314
      ],
      "op": "AND",
      "path": "16"
    },
    "1750": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4281,
        4314
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1751": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4281,
        4314
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1752": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4281,
        4314
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1753": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4348
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "1758": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4348
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1759": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x6F0"
    },
    "1763": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1764": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4357,
        4361
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "1765": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4357,
        4361
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1766": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4364,
        4374
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1767": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4364,
        4374
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1768": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1770": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "ADD",
      "path": "16"
    },
    "1771": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x13E5"
    },
    "1775": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        4325,
        4407
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1776": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1777": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1779": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1781": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1782": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1783": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1784": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "SUB",
      "path": "16"
    },
    "1785": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1786": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1788": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1789": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1790": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "1791": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1792": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1793": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1794": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x70B"
    },
    "1798": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1799": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1801": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1802": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1803": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1804": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "POP",
      "path": "16"
    },
    "1805": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "GAS",
      "path": "16"
    },
    "1806": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "CALL",
      "path": "16"
    },
    "1807": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1808": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1809": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1810": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x720"
    },
    "1814": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1815": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1816": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1818": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1819": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "1820": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1821": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1823": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1824": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4325,
        4407
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1825": {
      "op": "POP"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x40"
    },
    "1829": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1830": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1831": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4432,
        4442
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1832": {
      "op": "DUP2"
    },
    "1833": {
      "op": "MSTORE"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1836": {
      "op": "DUP2"
    },
    "1837": {
      "op": "ADD"
    },
    "1838": {
      "op": "DUP7"
    },
    "1839": {
      "op": "SWAP1"
    },
    "1840": {
      "op": "MSTORE"
    },
    "1841": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xFBBD268BB69CF922E3840DC96A6702DC064BAF4B2D9594B5A66A2FE428F3F2AA"
    },
    "1874": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "op": "ADD"
    },
    "1877": {
      "op": "SWAP1"
    },
    "1878": {
      "op": "POP"
    },
    "1879": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1881": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1882": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1883": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1884": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "SUB",
      "path": "16"
    },
    "1885": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1886": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        4422,
        4454
      ],
      "op": "LOG1",
      "path": "16"
    },
    "1887": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3989,
        4461
      ],
      "op": "POP",
      "path": "16"
    },
    "1888": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3939,
        4461
      ],
      "op": "POP",
      "path": "16"
    },
    "1889": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "o",
      "offset": [
        3939,
        4461
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1890": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1891": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5357,
        5380
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 15,
      "value": "0x40"
    },
    "1893": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5357,
        5380
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1894": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5369,
        5379
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1895": {
      "op": "DUP2"
    },
    "1896": {
      "op": "MSTORE"
    },
    "1897": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5334,
        5340
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1899": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5334,
        5340
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1900": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5357,
        5380
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xCCE71FC9CFCACC4CE8153BDE254A735AE423CDC2B7852FB754F4DE746AC3018F"
    },
    "1933": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5357,
        5380
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1936": {
      "op": "ADD"
    },
    "1937": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5357,
        5380
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1939": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5357,
        5380
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1940": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5357,
        5380
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1941": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5357,
        5380
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1942": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5357,
        5380
      ],
      "op": "SUB",
      "path": "16"
    },
    "1943": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5357,
        5380
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1944": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5357,
        5380
      ],
      "op": "LOG1",
      "path": "16"
    },
    "1945": {
      "op": "POP"
    },
    "1946": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5404,
        5464
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 16,
      "value": "0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F"
    },
    "1979": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "1980": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1981": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "POP",
      "path": "16"
    },
    "1982": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "POP",
      "path": "16"
    },
    "1983": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "POP",
      "path": "16"
    },
    "1984": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        5221,
        5472
      ],
      "op": "POP",
      "path": "16"
    },
    "1985": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "o",
      "offset": [
        5221,
        5472
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1986": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1987": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4632,
        4647
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 17,
      "value": "0x2"
    },
    "1989": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1991": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4622
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1992": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4622
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1993": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4622
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1994": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4611
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1996": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1998": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4622
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1999": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2001": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4622
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2002": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4622
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2003": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4628
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "2005": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4628
      ],
      "op": "ADD",
      "path": "16"
    },
    "2006": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4628
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2007": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4628
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2009": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4628
      ],
      "op": "AND",
      "path": "16"
    },
    "2010": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4647
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "2012": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4647
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2013": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4647
      ],
      "op": "GT",
      "path": "16"
    },
    "2014": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4647
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2015": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4647
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x7ED"
    },
    "2019": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4647
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2020": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4647
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x7ED"
    },
    "2024": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4647
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x12AE"
    },
    "2028": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4603,
        4647
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2029": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4647
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2030": {
      "branch": 28,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4603,
        4647
      ],
      "op": "EQ",
      "path": "16"
    },
    "2031": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4595,
        4695
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x850"
    },
    "2035": {
      "branch": 28,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4595,
        4695
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2036": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4595,
        4695
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2038": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4595,
        4695
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2045": {
      "op": "SHL"
    },
    "2046": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4595,
        4695
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2047": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4595,
        4695
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2050": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4595,
        4695
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2052": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4595,
        4695
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2053": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4595,
        4695
      ],
      "op": "ADD",
      "path": "16"
    },
    "2054": {
      "op": "MSTORE"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2059": {
      "op": "DUP3"
    },
    "2060": {
      "op": "ADD"
    },
    "2061": {
      "op": "MSTORE"
    },
    "2062": {
      "op": "PUSH32",
      "value": "0x4672616374696F6E616C697A6564204E465420686173206E6F74206265656E20"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2097": {
      "op": "DUP3"
    },
    "2098": {
      "op": "ADD"
    },
    "2099": {
      "op": "MSTORE"
    },
    "2100": {
      "op": "PUSH11",
      "value": "0x3137BAB3B43A1037BABA17"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "2114": {
      "op": "SHL"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2117": {
      "op": "DUP3"
    },
    "2118": {
      "op": "ADD"
    },
    "2119": {
      "op": "MSTORE"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2122": {
      "op": "ADD"
    },
    "2123": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4595,
        4695
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x68B"
    },
    "2127": {
      "op": "JUMP"
    },
    "2128": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4595,
        4695
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2129": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4705,
        4716
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2131": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4744
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2132": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4744
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2133": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4744
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2134": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4733
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2136": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4744
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2138": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4744
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2139": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4744
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2141": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4744
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2142": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4744
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2143": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4744
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2144": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4757
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "2146": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4757
      ],
      "op": "ADD",
      "path": "16"
    },
    "2147": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4757
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2148": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2149": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2150": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2157": {
      "op": "SHL"
    },
    "2158": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2159": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2160": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4809,
        4819
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2161": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2163": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2164": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "ADD",
      "path": "16"
    },
    "2165": {
      "op": "MSTORE"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2172": {
      "op": "SHL"
    },
    "2173": {
      "op": "SUB"
    },
    "2174": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4757
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2175": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4757
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2176": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4757
      ],
      "op": "AND",
      "path": "16"
    },
    "2177": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4757
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2178": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4705,
        4716
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2179": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4757
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2180": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4725,
        4757
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2181": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4808
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "2186": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4808
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2189": {
      "op": "ADD"
    },
    "2190": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2192": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2194": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2195": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2196": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2197": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "SUB",
      "path": "16"
    },
    "2198": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2199": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2200": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2201": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "2202": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2203": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2204": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2205": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x8A6"
    },
    "2209": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2210": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2212": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2213": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2214": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2215": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "POP",
      "path": "16"
    },
    "2216": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "GAS",
      "path": "16"
    },
    "2217": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "2218": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2219": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2220": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2221": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x8BB"
    },
    "2225": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2226": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2227": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2229": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2230": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "2231": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2232": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2234": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2235": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2236": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "POP",
      "path": "16"
    },
    "2237": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "POP",
      "path": "16"
    },
    "2238": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "POP",
      "path": "16"
    },
    "2239": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "POP",
      "path": "16"
    },
    "2240": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2242": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2243": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2244": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2246": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "NOT",
      "path": "16"
    },
    "2247": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2249": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2250": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "ADD",
      "path": "16"
    },
    "2251": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "AND",
      "path": "16"
    },
    "2252": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2253": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "ADD",
      "path": "16"
    },
    "2254": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2255": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2257": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2258": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "POP",
      "path": "16"
    },
    "2259": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2260": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "ADD",
      "path": "16"
    },
    "2261": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2262": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x8E1"
    },
    "2266": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2267": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2268": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1485"
    },
    "2272": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4793,
        4820
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2273": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4793,
        4820
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2274": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4768,
        4820
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2275": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4768,
        4820
      ],
      "op": "POP",
      "path": "16"
    },
    "2276": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4855,
        4856
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 18,
      "value": "0x0"
    },
    "2278": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4838,
        4852
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2279": {
      "branch": 29,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4838,
        4856
      ],
      "op": "GT",
      "path": "16"
    },
    "2280": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4830,
        4894
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x93F"
    },
    "2284": {
      "branch": 29,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4830,
        4894
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2285": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4830,
        4894
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2287": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4830,
        4894
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2294": {
      "op": "SHL"
    },
    "2295": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4830,
        4894
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2296": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4830,
        4894
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2299": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4830,
        4894
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2301": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4830,
        4894
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2302": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4830,
        4894
      ],
      "op": "ADD",
      "path": "16"
    },
    "2303": {
      "op": "MSTORE"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2308": {
      "op": "DUP3"
    },
    "2309": {
      "op": "ADD"
    },
    "2310": {
      "op": "MSTORE"
    },
    "2311": {
      "op": "PUSH32",
      "value": "0x436C61696D657220646F6573206E6F7420686F6C6420616E7920746F6B656E73"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2346": {
      "op": "DUP3"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "op": "MSTORE"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2353": {
      "op": "SHL"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2356": {
      "op": "DUP3"
    },
    "2357": {
      "op": "ADD"
    },
    "2358": {
      "op": "MSTORE"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2361": {
      "op": "ADD"
    },
    "2362": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4830,
        4894
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x68B"
    },
    "2366": {
      "op": "JUMP"
    },
    "2367": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4830,
        4894
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2368": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x40"
    },
    "2370": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2371": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2378": {
      "op": "SHL"
    },
    "2379": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2380": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2387": {
      "op": "SHL"
    },
    "2388": {
      "op": "SUB"
    },
    "2389": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4922
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2390": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4922
      ],
      "op": "AND",
      "path": "16"
    },
    "2391": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4922
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2392": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "2397": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4922
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2398": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x971"
    },
    "2402": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2403": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4923,
        4933
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2404": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4923,
        4933
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2405": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4943,
        4947
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "2406": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4943,
        4947
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2407": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4950,
        4964
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2408": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4950,
        4964
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2409": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2411": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "ADD",
      "path": "16"
    },
    "2412": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x13E5"
    },
    "2416": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4904,
        4965
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2417": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2418": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2420": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2422": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2423": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2424": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2425": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "SUB",
      "path": "16"
    },
    "2426": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2427": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2429": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP8",
      "path": "16"
    },
    "2430": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2431": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "2432": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2433": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2434": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2435": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x98C"
    },
    "2439": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2440": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2442": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2443": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2444": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2445": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "POP",
      "path": "16"
    },
    "2446": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "GAS",
      "path": "16"
    },
    "2447": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "CALL",
      "path": "16"
    },
    "2448": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2449": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2450": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2451": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x9A1"
    },
    "2455": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2456": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2457": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2459": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2460": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "2461": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2462": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2464": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2465": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2466": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "POP",
      "path": "16"
    },
    "2467": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "POP",
      "path": "16"
    },
    "2468": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "POP",
      "path": "16"
    },
    "2469": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "POP",
      "path": "16"
    },
    "2470": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2472": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2473": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2474": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2476": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "NOT",
      "path": "16"
    },
    "2477": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2479": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2480": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "ADD",
      "path": "16"
    },
    "2481": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "AND",
      "path": "16"
    },
    "2482": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2483": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "ADD",
      "path": "16"
    },
    "2484": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2485": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2487": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2488": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "POP",
      "path": "16"
    },
    "2489": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2490": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "ADD",
      "path": "16"
    },
    "2491": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2492": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x9C7"
    },
    "2496": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2497": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2498": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x149F"
    },
    "2502": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4904,
        4965
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2503": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2504": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4904,
        4965
      ],
      "op": "POP",
      "path": "16"
    },
    "2505": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4975,
        4994
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2507": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5002
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2514": {
      "op": "SHL"
    },
    "2515": {
      "op": "SUB"
    },
    "2516": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5014
      ],
      "op": "AND",
      "path": "16"
    },
    "2517": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5014
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "2522": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2524": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2525": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2526": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2531": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "AND",
      "path": "16"
    },
    "2532": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "2534": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "SHL",
      "path": "16"
    },
    "2535": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2536": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2537": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2539": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "ADD",
      "path": "16"
    },
    "2540": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2542": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2544": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2545": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2546": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2547": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "SUB",
      "path": "16"
    },
    "2548": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2549": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2550": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2551": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "2552": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2553": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2554": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2555": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xA04"
    },
    "2559": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2560": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2562": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2563": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2564": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2565": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "POP",
      "path": "16"
    },
    "2566": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "GAS",
      "path": "16"
    },
    "2567": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "2568": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2569": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2570": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2571": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xA19"
    },
    "2575": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2576": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2577": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2579": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2580": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "2581": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2582": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2584": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2585": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2586": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "POP",
      "path": "16"
    },
    "2587": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "POP",
      "path": "16"
    },
    "2588": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "POP",
      "path": "16"
    },
    "2589": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "POP",
      "path": "16"
    },
    "2590": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2592": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2593": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2594": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2596": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "NOT",
      "path": "16"
    },
    "2597": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2599": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2600": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "ADD",
      "path": "16"
    },
    "2601": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "AND",
      "path": "16"
    },
    "2602": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2603": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "ADD",
      "path": "16"
    },
    "2604": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2605": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2607": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2608": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "POP",
      "path": "16"
    },
    "2609": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2610": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "ADD",
      "path": "16"
    },
    "2611": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2612": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xA3F"
    },
    "2616": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2617": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2618": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1485"
    },
    "2622": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4997,
        5016
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2623": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4997,
        5016
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2624": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5026,
        5048
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2626": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5070
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2627": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5070
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2628": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5070
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2629": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5059
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2631": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5070
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2633": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5070
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2634": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5070
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2636": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5070
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2637": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5070
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2638": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5082
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "2640": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5082
      ],
      "op": "ADD",
      "path": "16"
    },
    "2641": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5082
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2642": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4975,
        5016
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2643": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4975,
        5016
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2644": {
      "op": "POP"
    },
    "2645": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5026,
        5048
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2646": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4975,
        5016
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2647": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4975,
        5016
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2648": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5097
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xA64"
    },
    "2652": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5097
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2653": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5083,
        5097
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2654": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5083,
        5097
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2655": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5097
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x14C3"
    },
    "2659": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        5051,
        5097
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2660": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5097
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2661": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5109
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xA70"
    },
    "2665": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5109
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2666": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5109
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2667": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5109
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x14E5"
    },
    "2671": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        5051,
        5109
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2672": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5051,
        5109
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2673": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 20,
      "value": "0x40"
    },
    "2675": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2676": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5026,
        5109
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2677": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5026,
        5109
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2678": {
      "op": "POP"
    },
    "2679": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5127,
        5137
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2680": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5127,
        5137
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2681": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2682": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2683": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8FC"
    },
    "2686": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "MUL",
      "path": "16"
    },
    "2687": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2688": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5026,
        5109
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2689": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5026,
        5109
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2690": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2692": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2693": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2694": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2695": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5026,
        5109
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2696": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5127,
        5137
      ],
      "op": "DUP9",
      "path": "16"
    },
    "2697": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "DUP9",
      "path": "16"
    },
    "2698": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "CALL",
      "path": "16"
    },
    "2699": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2700": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "POP",
      "path": "16"
    },
    "2701": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "POP",
      "path": "16"
    },
    "2702": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "POP",
      "path": "16"
    },
    "2703": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "POP",
      "path": "16"
    },
    "2704": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2705": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2706": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2707": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xAA1"
    },
    "2711": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2712": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2713": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2715": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2716": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "2717": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2718": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2720": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2721": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5119,
        5163
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2722": {
      "op": "POP"
    },
    "2723": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 21,
      "value": "0x40"
    },
    "2725": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2726": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2727": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5186,
        5196
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2728": {
      "op": "DUP2"
    },
    "2729": {
      "op": "MSTORE"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2732": {
      "op": "DUP2"
    },
    "2733": {
      "op": "ADD"
    },
    "2734": {
      "op": "DUP8"
    },
    "2735": {
      "op": "SWAP1"
    },
    "2736": {
      "op": "MSTORE"
    },
    "2737": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
    },
    "2770": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2771": {
      "op": "ADD"
    },
    "2772": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2773": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2775": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2776": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2777": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2778": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "SUB",
      "path": "16"
    },
    "2779": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2780": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        5178,
        5208
      ],
      "op": "LOG1",
      "path": "16"
    },
    "2781": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4508,
        5215
      ],
      "op": "POP",
      "path": "16"
    },
    "2782": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4508,
        5215
      ],
      "op": "POP",
      "path": "16"
    },
    "2783": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4508,
        5215
      ],
      "op": "POP",
      "path": "16"
    },
    "2784": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4508,
        5215
      ],
      "op": "POP",
      "path": "16"
    },
    "2785": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4467,
        5215
      ],
      "op": "POP",
      "path": "16"
    },
    "2786": {
      "fn": "FractionalizeNFT.claim",
      "jump": "o",
      "offset": [
        4467,
        5215
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2787": {
      "offset": [
        1246,
        1266
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2788": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "2790": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2791": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2792": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2793": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2794": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "LT",
      "path": "16"
    },
    "2795": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xAF4"
    },
    "2799": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2800": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2802": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2803": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2804": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2805": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2807": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2808": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2809": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2810": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2812": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2813": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2814": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2815": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "ADD",
      "path": "16"
    },
    "2816": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2817": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        1246,
        1266
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2818": {
      "op": "POP"
    },
    "2819": {
      "offset": [
        1246,
        1266
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2820": {
      "fn": "FractionalizeNFT.claim",
      "jump": "o",
      "offset": [
        1246,
        1266
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2821": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2822": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1889
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 22,
      "value": "0x0"
    },
    "2824": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1889
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2825": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1889
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2826": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1889
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2827": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1878
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2829": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2831": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1889
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2832": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2834": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1889
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2835": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1889
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2836": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2838": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1901
      ],
      "op": "ADD",
      "path": "16"
    },
    "2839": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2840": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2841": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1838,
        1851
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "2843": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1838,
        1851
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2844": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1870,
        1901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2845": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xB27"
    },
    "2849": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2850": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1508"
    },
    "2854": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        1863,
        1901
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2855": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2856": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2857": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2859": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "ADD",
      "path": "16"
    },
    "2860": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2862": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2863": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2864": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DIV",
      "path": "16"
    },
    "2865": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "MUL",
      "path": "16"
    },
    "2866": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2868": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "ADD",
      "path": "16"
    },
    "2869": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2871": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2872": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2873": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2874": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "ADD",
      "path": "16"
    },
    "2875": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2877": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2878": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2879": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2880": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2881": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2882": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2883": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2884": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2885": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2887": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "ADD",
      "path": "16"
    },
    "2888": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2889": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2890": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2891": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xB55"
    },
    "2895": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2896": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1508"
    },
    "2900": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        1863,
        1901
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2901": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2902": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2903": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2904": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xBA6"
    },
    "2908": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2909": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2910": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2912": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "LT",
      "path": "16"
    },
    "2913": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xB7A"
    },
    "2917": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2918": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2921": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2922": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2923": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2924": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DIV",
      "path": "16"
    },
    "2925": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "MUL",
      "path": "16"
    },
    "2926": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2927": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2928": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2929": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2931": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "ADD",
      "path": "16"
    },
    "2932": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2933": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xBA6"
    },
    "2937": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2938": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2939": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2940": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "ADD",
      "path": "16"
    },
    "2941": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2942": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2943": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2945": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2946": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2948": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2950": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2951": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2952": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2953": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2954": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2955": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2956": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2957": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2958": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2960": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "ADD",
      "path": "16"
    },
    "2961": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2962": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2964": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "ADD",
      "path": "16"
    },
    "2965": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2966": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2967": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "GT",
      "path": "16"
    },
    "2968": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xB88"
    },
    "2972": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2973": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2974": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2975": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SUB",
      "path": "16"
    },
    "2976": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2978": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "AND",
      "path": "16"
    },
    "2979": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2980": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "ADD",
      "path": "16"
    },
    "2981": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2982": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2983": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "POP",
      "path": "16"
    },
    "2984": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "POP",
      "path": "16"
    },
    "2985": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "POP",
      "path": "16"
    },
    "2986": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "POP",
      "path": "16"
    },
    "2987": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "POP",
      "path": "16"
    },
    "2988": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2989": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1863,
        1901
      ],
      "op": "POP",
      "path": "16"
    },
    "2990": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2991": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2992": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1774,
        1908
      ],
      "op": "POP",
      "path": "16"
    },
    "2993": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "o",
      "offset": [
        1774,
        1908
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2994": {
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2995": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2997": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2999": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3000": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3001": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3002": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3004": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3005": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3006": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3007": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3009": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3010": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3011": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3012": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3013": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3014": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3015": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3016": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3017": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3018": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "3020": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3021": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3022": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3023": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "3025": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3026": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3027": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3028": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3030": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3031": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3032": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3033": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3034": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3035": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "op": "SUB"
    },
    "3044": {
      "offset": [
        354,
        405
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3045": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3046": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "AND",
      "path": "16"
    },
    "3047": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "3048": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3049": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3050": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3051": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "AND",
      "path": "16"
    },
    "3052": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3053": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xBF7"
    },
    "3057": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3058": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1508"
    },
    "3062": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        354,
        405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3063": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3064": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3065": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3067": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3068": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3070": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3071": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3072": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DIV",
      "path": "16"
    },
    "3073": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MUL",
      "path": "16"
    },
    "3074": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3076": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3077": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3079": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3080": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3081": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3082": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3083": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3085": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3086": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3087": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3088": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3089": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3090": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3091": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3092": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3093": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3095": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3096": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3097": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3098": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3099": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xC25"
    },
    "3103": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3104": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1508"
    },
    "3108": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        354,
        405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3109": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3110": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3111": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3112": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xC76"
    },
    "3116": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3117": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3118": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3120": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "LT",
      "path": "16"
    },
    "3121": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xC4A"
    },
    "3125": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3126": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "3129": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3130": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3131": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3132": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DIV",
      "path": "16"
    },
    "3133": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MUL",
      "path": "16"
    },
    "3134": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3135": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3136": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3137": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3139": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3140": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3141": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xC76"
    },
    "3145": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3146": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3147": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3148": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3149": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3150": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3151": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3153": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3154": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3156": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3158": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3159": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3160": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3161": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3162": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3163": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3164": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3165": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3166": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3168": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3169": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3170": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3172": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3173": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3174": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3175": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "GT",
      "path": "16"
    },
    "3176": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xC58"
    },
    "3180": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3181": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3182": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3183": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SUB",
      "path": "16"
    },
    "3184": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3186": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "AND",
      "path": "16"
    },
    "3187": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3188": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3189": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3190": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3191": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "POP",
      "path": "16"
    },
    "3192": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "POP",
      "path": "16"
    },
    "3193": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "POP",
      "path": "16"
    },
    "3194": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "POP",
      "path": "16"
    },
    "3195": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "POP",
      "path": "16"
    },
    "3196": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3197": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3198": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "3200": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3201": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3202": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3203": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xC8D"
    },
    "3207": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3208": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1508"
    },
    "3212": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        354,
        405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3213": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3214": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3215": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3217": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3218": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3220": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3221": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3222": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DIV",
      "path": "16"
    },
    "3223": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MUL",
      "path": "16"
    },
    "3224": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3226": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3227": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3229": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3230": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3231": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3232": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3233": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3235": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3236": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3237": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3238": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3239": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3240": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3241": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3242": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3243": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3245": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3246": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3247": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3248": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3249": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xCBB"
    },
    "3253": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3254": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1508"
    },
    "3258": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        354,
        405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3259": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3260": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3261": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3262": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xD0C"
    },
    "3266": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3267": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3268": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3270": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "LT",
      "path": "16"
    },
    "3271": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xCE0"
    },
    "3275": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3276": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "3279": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3280": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3281": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3282": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DIV",
      "path": "16"
    },
    "3283": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MUL",
      "path": "16"
    },
    "3284": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3285": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3286": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3287": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3289": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3290": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3291": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xD0C"
    },
    "3295": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3296": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3297": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3298": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3299": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3300": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3301": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3303": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3304": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3306": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3308": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3309": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3310": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3311": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3312": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3313": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3314": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3315": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3316": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3318": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3319": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3320": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3322": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3323": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3324": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3325": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "GT",
      "path": "16"
    },
    "3326": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xCEE"
    },
    "3330": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3331": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3332": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3333": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SUB",
      "path": "16"
    },
    "3334": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3336": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "AND",
      "path": "16"
    },
    "3337": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3338": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3339": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3340": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3341": {
      "op": "POP"
    },
    "3342": {
      "op": "POP"
    },
    "3343": {
      "op": "POP"
    },
    "3344": {
      "op": "POP"
    },
    "3345": {
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "3347": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3348": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3349": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3350": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "3352": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3353": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3354": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3355": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "3357": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3358": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "3359": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "ADD",
      "path": "16"
    },
    "3360": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3361": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3362": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3369": {
      "op": "SHL"
    },
    "3370": {
      "op": "SUB"
    },
    "3371": {
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3372": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3373": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "AND",
      "path": "16"
    },
    "3374": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3375": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3376": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3377": {
      "op": "POP"
    },
    "3378": {
      "offset": [
        354,
        405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3380": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "AND",
      "path": "16"
    },
    "3381": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        354,
        405
      ],
      "op": "DUP10",
      "path": "16"
    },
    "3382": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "o",
      "offset": [
        354,
        405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3383": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3232,
        3933
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3384": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3387,
        3398
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3386": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3426
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3387": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3426
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3388": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3426
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3389": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3391": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3426
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3393": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3426
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3394": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3426
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3396": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3426
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3397": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3426
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3398": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3426
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3399": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3439
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "3401": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3439
      ],
      "op": "ADD",
      "path": "16"
    },
    "3402": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3439
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3403": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3404": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3405": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3412": {
      "op": "SHL"
    },
    "3413": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3414": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3415": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3492,
        3502
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3416": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3418": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3419": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "ADD",
      "path": "16"
    },
    "3420": {
      "op": "MSTORE"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3427": {
      "op": "SHL"
    },
    "3428": {
      "op": "SUB"
    },
    "3429": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3439
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3430": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3439
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3431": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3439
      ],
      "op": "AND",
      "path": "16"
    },
    "3432": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3439
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3433": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3387,
        3398
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3434": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3439
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3435": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3407,
        3439
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3436": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3491
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "3441": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3491
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3444": {
      "op": "ADD"
    },
    "3445": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3447": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3449": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3450": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3451": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3452": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "SUB",
      "path": "16"
    },
    "3453": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3454": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3455": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3456": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3457": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3458": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3459": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3460": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xD8D"
    },
    "3464": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3465": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3467": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3468": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3469": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3470": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "POP",
      "path": "16"
    },
    "3471": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "GAS",
      "path": "16"
    },
    "3472": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "3473": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3474": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3475": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3476": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xDA2"
    },
    "3480": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3481": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3482": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3484": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3485": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3486": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3487": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3489": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3490": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3491": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "POP",
      "path": "16"
    },
    "3492": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "POP",
      "path": "16"
    },
    "3493": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "POP",
      "path": "16"
    },
    "3494": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "POP",
      "path": "16"
    },
    "3495": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3497": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3498": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3499": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3501": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "NOT",
      "path": "16"
    },
    "3502": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3504": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3505": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "ADD",
      "path": "16"
    },
    "3506": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "AND",
      "path": "16"
    },
    "3507": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3508": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "ADD",
      "path": "16"
    },
    "3509": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3510": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3512": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3513": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "POP",
      "path": "16"
    },
    "3514": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3515": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "ADD",
      "path": "16"
    },
    "3516": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3517": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xDC8"
    },
    "3521": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3522": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3523": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1485"
    },
    "3527": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        3476,
        3503
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3528": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3476,
        3503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3529": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3450,
        3503
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3530": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3450,
        3503
      ],
      "op": "POP",
      "path": "16"
    },
    "3531": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3513,
        3532
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3533": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3540
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3540": {
      "op": "SHL"
    },
    "3541": {
      "op": "SUB"
    },
    "3542": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3552
      ],
      "op": "AND",
      "path": "16"
    },
    "3543": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3552
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "3548": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3550": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3551": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3552": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3557": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "AND",
      "path": "16"
    },
    "3558": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "3560": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "SHL",
      "path": "16"
    },
    "3561": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3562": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3563": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3565": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "ADD",
      "path": "16"
    },
    "3566": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3568": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3570": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3571": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3572": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3573": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "SUB",
      "path": "16"
    },
    "3574": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3575": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3576": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3577": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3578": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3579": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3580": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3581": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xE06"
    },
    "3585": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3586": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3588": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3589": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3590": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3591": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "POP",
      "path": "16"
    },
    "3592": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "GAS",
      "path": "16"
    },
    "3593": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "3594": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3595": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3596": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3597": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xE1B"
    },
    "3601": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3602": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3603": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3605": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3606": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3607": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3608": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3610": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3611": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3612": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "POP",
      "path": "16"
    },
    "3613": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "POP",
      "path": "16"
    },
    "3614": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "POP",
      "path": "16"
    },
    "3615": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "POP",
      "path": "16"
    },
    "3616": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3618": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3619": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3620": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3622": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "NOT",
      "path": "16"
    },
    "3623": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3625": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3626": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "ADD",
      "path": "16"
    },
    "3627": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "AND",
      "path": "16"
    },
    "3628": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3629": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "ADD",
      "path": "16"
    },
    "3630": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3631": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3633": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3634": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "POP",
      "path": "16"
    },
    "3635": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3636": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "ADD",
      "path": "16"
    },
    "3637": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3638": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xE41"
    },
    "3642": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3643": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3644": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1485"
    },
    "3648": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        3535,
        3554
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3649": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3535,
        3554
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3650": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3513,
        3554
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3651": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3513,
        3554
      ],
      "op": "POP",
      "path": "16"
    },
    "3652": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3591,
        3602
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 23
    },
    "3653": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3572,
        3587
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3654": {
      "branch": 30,
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3572,
        3602
      ],
      "op": "EQ",
      "path": "16"
    },
    "3655": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3564,
        3649
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xEA7"
    },
    "3659": {
      "branch": 30,
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3564,
        3649
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3660": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3564,
        3649
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3662": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3564,
        3649
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3669": {
      "op": "SHL"
    },
    "3670": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3564,
        3649
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3671": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3564,
        3649
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3674": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3564,
        3649
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3676": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3564,
        3649
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3677": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3564,
        3649
      ],
      "op": "ADD",
      "path": "16"
    },
    "3678": {
      "op": "MSTORE"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3683": {
      "op": "DUP3"
    },
    "3684": {
      "op": "ADD"
    },
    "3685": {
      "op": "MSTORE"
    },
    "3686": {
      "op": "PUSH32",
      "value": "0x52656465656D65657220646F6573206E6F7420686F6C642074686520656E7469"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3721": {
      "op": "DUP3"
    },
    "3722": {
      "op": "ADD"
    },
    "3723": {
      "op": "MSTORE"
    },
    "3724": {
      "op": "PUSH10",
      "value": "0x39329039BAB838363C97"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3737": {
      "op": "SHL"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3740": {
      "op": "DUP3"
    },
    "3741": {
      "op": "ADD"
    },
    "3742": {
      "op": "MSTORE"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3745": {
      "op": "ADD"
    },
    "3746": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3564,
        3649
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x68B"
    },
    "3750": {
      "op": "JUMP"
    },
    "3751": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3564,
        3649
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3752": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 24,
      "value": "0x40"
    },
    "3754": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3755": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3764": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3771": {
      "op": "SHL"
    },
    "3772": {
      "op": "SUB"
    },
    "3773": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3677
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3774": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3677
      ],
      "op": "AND",
      "path": "16"
    },
    "3775": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3677
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3776": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3677
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "3781": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3677
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3782": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xED9"
    },
    "3786": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3787": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3678,
        3688
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3788": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3678,
        3688
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3789": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3698,
        3702
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3790": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3698,
        3702
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3791": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3705,
        3720
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3792": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3705,
        3720
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3793": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3795": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "ADD",
      "path": "16"
    },
    "3796": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x13E5"
    },
    "3800": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        3659,
        3721
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3801": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3802": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3804": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3806": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3807": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3808": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3809": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "SUB",
      "path": "16"
    },
    "3810": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3811": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3813": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3814": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3815": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3816": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3817": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3818": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3819": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xEF4"
    },
    "3823": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3824": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3826": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3827": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3828": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3829": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "POP",
      "path": "16"
    },
    "3830": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "GAS",
      "path": "16"
    },
    "3831": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "CALL",
      "path": "16"
    },
    "3832": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3833": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3834": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3835": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xF09"
    },
    "3839": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3840": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3841": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3843": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3844": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3845": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3846": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3848": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3849": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3850": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "POP",
      "path": "16"
    },
    "3851": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "POP",
      "path": "16"
    },
    "3852": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "POP",
      "path": "16"
    },
    "3853": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "POP",
      "path": "16"
    },
    "3854": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3856": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3857": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3858": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3860": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "NOT",
      "path": "16"
    },
    "3861": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3863": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3864": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "ADD",
      "path": "16"
    },
    "3865": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "AND",
      "path": "16"
    },
    "3866": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3867": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "ADD",
      "path": "16"
    },
    "3868": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3869": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3871": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3872": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "POP",
      "path": "16"
    },
    "3873": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3874": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "ADD",
      "path": "16"
    },
    "3875": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3876": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xF2F"
    },
    "3880": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3881": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3882": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x149F"
    },
    "3886": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        3659,
        3721
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3887": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3659,
        3721
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3888": {
      "op": "POP"
    },
    "3889": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3731,
        3744
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3891": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3892": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3893": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3894": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3896": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3898": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3899": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3900": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3901": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3903": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3904": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3905": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3906": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3773
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3907": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3787
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "3909": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3787
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3910": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3787
      ],
      "op": "ADD",
      "path": "16"
    },
    "3911": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3787
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3912": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3849,
        3879
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 25
    },
    "3913": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3849,
        3879
      ],
      "op": "ADD",
      "path": "16"
    },
    "3914": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3849,
        3879
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3915": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3916": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3917": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3924": {
      "op": "SHL"
    },
    "3925": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3926": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3933": {
      "op": "SHL"
    },
    "3934": {
      "op": "SUB"
    },
    "3935": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3787
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3936": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3787
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3937": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3787
      ],
      "op": "AND",
      "path": "16"
    },
    "3938": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3787
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3939": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3787
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3940": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3754,
        3787
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3941": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "3946": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3821
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3947": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xF7C"
    },
    "3951": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3952": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3830,
        3834
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3953": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3830,
        3834
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3954": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3837,
        3847
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3955": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3837,
        3847
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3956": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3958": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "ADD",
      "path": "16"
    },
    "3959": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x13E5"
    },
    "3963": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        3798,
        3880
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3964": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3965": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3967": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3969": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3970": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3971": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3972": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "SUB",
      "path": "16"
    },
    "3973": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3974": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3976": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3977": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3978": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3979": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3980": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3981": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3982": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xF97"
    },
    "3986": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3987": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3989": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3990": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3991": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3992": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "POP",
      "path": "16"
    },
    "3993": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "GAS",
      "path": "16"
    },
    "3994": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "CALL",
      "path": "16"
    },
    "3995": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3996": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3997": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3998": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xFAC"
    },
    "4002": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4003": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4004": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4006": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4007": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4008": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4009": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4011": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4012": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3798,
        3880
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4013": {
      "op": "POP"
    },
    "4014": {
      "op": "POP"
    },
    "4015": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3895,
        3926
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 26,
      "value": "0x40"
    },
    "4017": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3895,
        3926
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4018": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3895,
        3926
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4019": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3904,
        3914
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4020": {
      "op": "DUP2"
    },
    "4021": {
      "op": "MSTORE"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4024": {
      "op": "DUP2"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "op": "DUP10"
    },
    "4027": {
      "op": "SWAP1"
    },
    "4028": {
      "op": "MSTORE"
    },
    "4029": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3895,
        3926
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369"
    },
    "4062": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3895,
        3926
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4063": {
      "op": "POP"
    },
    "4064": {
      "op": "ADD"
    },
    "4065": {
      "op": "SWAP1"
    },
    "4066": {
      "op": "POP"
    },
    "4067": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3895,
        3926
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xAD4"
    },
    "4071": {
      "op": "JUMP"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "op": "PUSH2",
      "value": "0xCAA"
    },
    "4076": {
      "op": "DUP1"
    },
    "4077": {
      "op": "PUSH3",
      "value": "0x1546"
    },
    "4081": {
      "op": "DUP4"
    },
    "4082": {
      "op": "CODECOPY"
    },
    "4083": {
      "op": "ADD"
    },
    "4084": {
      "op": "SWAP1"
    },
    "4085": {
      "jump": "o",
      "op": "JUMP"
    },
    "4086": {
      "op": "JUMPDEST"
    },
    "4087": {
      "op": "DUP3"
    },
    "4088": {
      "op": "DUP1"
    },
    "4089": {
      "op": "SLOAD"
    },
    "4090": {
      "op": "PUSH3",
      "value": "0x1004"
    },
    "4094": {
      "op": "SWAP1"
    },
    "4095": {
      "op": "PUSH3",
      "value": "0x1508"
    },
    "4099": {
      "jump": "i",
      "op": "JUMP"
    },
    "4100": {
      "op": "JUMPDEST"
    },
    "4101": {
      "op": "SWAP1"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4104": {
      "op": "MSTORE"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4109": {
      "op": "KECCAK256"
    },
    "4110": {
      "op": "SWAP1"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4113": {
      "op": "ADD"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4116": {
      "op": "SWAP1"
    },
    "4117": {
      "op": "DIV"
    },
    "4118": {
      "op": "DUP2"
    },
    "4119": {
      "op": "ADD"
    },
    "4120": {
      "op": "SWAP3"
    },
    "4121": {
      "op": "DUP3"
    },
    "4122": {
      "op": "PUSH3",
      "value": "0x1028"
    },
    "4126": {
      "op": "JUMPI"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4129": {
      "op": "DUP6"
    },
    "4130": {
      "op": "SSTORE"
    },
    "4131": {
      "op": "PUSH3",
      "value": "0x1073"
    },
    "4135": {
      "op": "JUMP"
    },
    "4136": {
      "op": "JUMPDEST"
    },
    "4137": {
      "op": "DUP3"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4140": {
      "op": "LT"
    },
    "4141": {
      "op": "PUSH3",
      "value": "0x1043"
    },
    "4145": {
      "op": "JUMPI"
    },
    "4146": {
      "op": "DUP1"
    },
    "4147": {
      "op": "MLOAD"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4150": {
      "op": "NOT"
    },
    "4151": {
      "op": "AND"
    },
    "4152": {
      "op": "DUP4"
    },
    "4153": {
      "op": "DUP1"
    },
    "4154": {
      "op": "ADD"
    },
    "4155": {
      "op": "OR"
    },
    "4156": {
      "op": "DUP6"
    },
    "4157": {
      "op": "SSTORE"
    },
    "4158": {
      "op": "PUSH3",
      "value": "0x1073"
    },
    "4162": {
      "op": "JUMP"
    },
    "4163": {
      "op": "JUMPDEST"
    },
    "4164": {
      "op": "DUP3"
    },
    "4165": {
      "op": "DUP1"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "op": "DUP6"
    },
    "4171": {
      "op": "SSTORE"
    },
    "4172": {
      "op": "DUP3"
    },
    "4173": {
      "op": "ISZERO"
    },
    "4174": {
      "op": "PUSH3",
      "value": "0x1073"
    },
    "4178": {
      "op": "JUMPI"
    },
    "4179": {
      "op": "SWAP2"
    },
    "4180": {
      "op": "DUP3"
    },
    "4181": {
      "op": "ADD"
    },
    "4182": {
      "op": "JUMPDEST"
    },
    "4183": {
      "op": "DUP3"
    },
    "4184": {
      "op": "DUP2"
    },
    "4185": {
      "op": "GT"
    },
    "4186": {
      "op": "ISZERO"
    },
    "4187": {
      "op": "PUSH3",
      "value": "0x1073"
    },
    "4191": {
      "op": "JUMPI"
    },
    "4192": {
      "op": "DUP3"
    },
    "4193": {
      "op": "MLOAD"
    },
    "4194": {
      "op": "DUP3"
    },
    "4195": {
      "op": "SSTORE"
    },
    "4196": {
      "op": "SWAP2"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4199": {
      "op": "ADD"
    },
    "4200": {
      "op": "SWAP2"
    },
    "4201": {
      "op": "SWAP1"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4204": {
      "op": "ADD"
    },
    "4205": {
      "op": "SWAP1"
    },
    "4206": {
      "op": "PUSH3",
      "value": "0x1056"
    },
    "4210": {
      "op": "JUMP"
    },
    "4211": {
      "op": "JUMPDEST"
    },
    "4212": {
      "op": "POP"
    },
    "4213": {
      "op": "PUSH3",
      "value": "0x1081"
    },
    "4217": {
      "op": "SWAP3"
    },
    "4218": {
      "op": "SWAP2"
    },
    "4219": {
      "op": "POP"
    },
    "4220": {
      "op": "PUSH3",
      "value": "0x1085"
    },
    "4224": {
      "jump": "i",
      "op": "JUMP"
    },
    "4225": {
      "op": "JUMPDEST"
    },
    "4226": {
      "op": "POP"
    },
    "4227": {
      "op": "SWAP1"
    },
    "4228": {
      "jump": "o",
      "op": "JUMP"
    },
    "4229": {
      "op": "JUMPDEST"
    },
    "4230": {
      "op": "JUMPDEST"
    },
    "4231": {
      "op": "DUP1"
    },
    "4232": {
      "op": "DUP3"
    },
    "4233": {
      "op": "GT"
    },
    "4234": {
      "op": "ISZERO"
    },
    "4235": {
      "op": "PUSH3",
      "value": "0x1081"
    },
    "4239": {
      "op": "JUMPI"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4242": {
      "op": "DUP2"
    },
    "4243": {
      "op": "SSTORE"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4246": {
      "op": "ADD"
    },
    "4247": {
      "op": "PUSH3",
      "value": "0x1086"
    },
    "4251": {
      "op": "JUMP"
    },
    "4252": {
      "op": "JUMPDEST"
    },
    "4253": {
      "op": "DUP1"
    },
    "4254": {
      "op": "CALLDATALOAD"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4261": {
      "op": "SHL"
    },
    "4262": {
      "op": "SUB"
    },
    "4263": {
      "op": "DUP2"
    },
    "4264": {
      "op": "AND"
    },
    "4265": {
      "op": "DUP2"
    },
    "4266": {
      "op": "EQ"
    },
    "4267": {
      "op": "PUSH3",
      "value": "0x10B4"
    },
    "4271": {
      "op": "JUMPI"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4274": {
      "op": "DUP1"
    },
    "4275": {
      "op": "REVERT"
    },
    "4276": {
      "op": "JUMPDEST"
    },
    "4277": {
      "op": "SWAP2"
    },
    "4278": {
      "op": "SWAP1"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "jump": "o",
      "op": "JUMP"
    },
    "4281": {
      "op": "JUMPDEST"
    },
    "4282": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4289": {
      "op": "SHL"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4292": {
      "op": "MSTORE"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4297": {
      "op": "MSTORE"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4302": {
      "op": "REVERT"
    },
    "4303": {
      "op": "JUMPDEST"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4306": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4315": {
      "op": "DUP1"
    },
    "4316": {
      "op": "DUP5"
    },
    "4317": {
      "op": "GT"
    },
    "4318": {
      "op": "ISZERO"
    },
    "4319": {
      "op": "PUSH3",
      "value": "0x10ED"
    },
    "4323": {
      "op": "JUMPI"
    },
    "4324": {
      "op": "PUSH3",
      "value": "0x10ED"
    },
    "4328": {
      "op": "PUSH3",
      "value": "0x10B9"
    },
    "4332": {
      "jump": "i",
      "op": "JUMP"
    },
    "4333": {
      "op": "JUMPDEST"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4336": {
      "op": "MLOAD"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4339": {
      "op": "DUP6"
    },
    "4340": {
      "op": "ADD"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4343": {
      "op": "NOT"
    },
    "4344": {
      "op": "SWAP1"
    },
    "4345": {
      "op": "DUP2"
    },
    "4346": {
      "op": "AND"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "AND"
    },
    "4351": {
      "op": "DUP2"
    },
    "4352": {
      "op": "ADD"
    },
    "4353": {
      "op": "SWAP1"
    },
    "4354": {
      "op": "DUP3"
    },
    "4355": {
      "op": "DUP3"
    },
    "4356": {
      "op": "GT"
    },
    "4357": {
      "op": "DUP2"
    },
    "4358": {
      "op": "DUP4"
    },
    "4359": {
      "op": "LT"
    },
    "4360": {
      "op": "OR"
    },
    "4361": {
      "op": "ISZERO"
    },
    "4362": {
      "op": "PUSH3",
      "value": "0x1118"
    },
    "4366": {
      "op": "JUMPI"
    },
    "4367": {
      "op": "PUSH3",
      "value": "0x1118"
    },
    "4371": {
      "op": "PUSH3",
      "value": "0x10B9"
    },
    "4375": {
      "jump": "i",
      "op": "JUMP"
    },
    "4376": {
      "op": "JUMPDEST"
    },
    "4377": {
      "op": "DUP2"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4380": {
      "op": "MSTORE"
    },
    "4381": {
      "op": "DUP1"
    },
    "4382": {
      "op": "SWAP4"
    },
    "4383": {
      "op": "POP"
    },
    "4384": {
      "op": "DUP6"
    },
    "4385": {
      "op": "DUP2"
    },
    "4386": {
      "op": "MSTORE"
    },
    "4387": {
      "op": "DUP7"
    },
    "4388": {
      "op": "DUP7"
    },
    "4389": {
      "op": "DUP7"
    },
    "4390": {
      "op": "ADD"
    },
    "4391": {
      "op": "GT"
    },
    "4392": {
      "op": "ISZERO"
    },
    "4393": {
      "op": "PUSH3",
      "value": "0x1132"
    },
    "4397": {
      "op": "JUMPI"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4400": {
      "op": "DUP1"
    },
    "4401": {
      "op": "REVERT"
    },
    "4402": {
      "op": "JUMPDEST"
    },
    "4403": {
      "op": "DUP6"
    },
    "4404": {
      "op": "DUP6"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4407": {
      "op": "DUP4"
    },
    "4408": {
      "op": "ADD"
    },
    "4409": {
      "op": "CALLDATACOPY"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4414": {
      "op": "DUP8"
    },
    "4415": {
      "op": "DUP4"
    },
    "4416": {
      "op": "ADD"
    },
    "4417": {
      "op": "ADD"
    },
    "4418": {
      "op": "MSTORE"
    },
    "4419": {
      "op": "POP"
    },
    "4420": {
      "op": "POP"
    },
    "4421": {
      "op": "POP"
    },
    "4422": {
      "op": "SWAP4"
    },
    "4423": {
      "op": "SWAP3"
    },
    "4424": {
      "op": "POP"
    },
    "4425": {
      "op": "POP"
    },
    "4426": {
      "op": "POP"
    },
    "4427": {
      "jump": "o",
      "op": "JUMP"
    },
    "4428": {
      "op": "JUMPDEST"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4431": {
      "op": "DUP3"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4434": {
      "op": "DUP4"
    },
    "4435": {
      "op": "ADD"
    },
    "4436": {
      "op": "SLT"
    },
    "4437": {
      "op": "PUSH3",
      "value": "0x115E"
    },
    "4441": {
      "op": "JUMPI"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4444": {
      "op": "DUP1"
    },
    "4445": {
      "op": "REVERT"
    },
    "4446": {
      "op": "JUMPDEST"
    },
    "4447": {
      "op": "PUSH3",
      "value": "0x116F"
    },
    "4451": {
      "op": "DUP4"
    },
    "4452": {
      "op": "DUP4"
    },
    "4453": {
      "op": "CALLDATALOAD"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4456": {
      "op": "DUP6"
    },
    "4457": {
      "op": "ADD"
    },
    "4458": {
      "op": "PUSH3",
      "value": "0x10CF"
    },
    "4462": {
      "jump": "i",
      "op": "JUMP"
    },
    "4463": {
      "op": "JUMPDEST"
    },
    "4464": {
      "op": "SWAP4"
    },
    "4465": {
      "op": "SWAP3"
    },
    "4466": {
      "op": "POP"
    },
    "4467": {
      "op": "POP"
    },
    "4468": {
      "op": "POP"
    },
    "4469": {
      "jump": "o",
      "op": "JUMP"
    },
    "4470": {
      "op": "JUMPDEST"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4473": {
      "op": "DUP1"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4476": {
      "op": "DUP1"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4479": {
      "op": "DUP1"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4482": {
      "op": "DUP8"
    },
    "4483": {
      "op": "DUP10"
    },
    "4484": {
      "op": "SUB"
    },
    "4485": {
      "op": "SLT"
    },
    "4486": {
      "op": "ISZERO"
    },
    "4487": {
      "op": "PUSH3",
      "value": "0x1190"
    },
    "4491": {
      "op": "JUMPI"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4494": {
      "op": "DUP1"
    },
    "4495": {
      "op": "REVERT"
    },
    "4496": {
      "op": "JUMPDEST"
    },
    "4497": {
      "op": "PUSH3",
      "value": "0x119B"
    },
    "4501": {
      "op": "DUP8"
    },
    "4502": {
      "op": "PUSH3",
      "value": "0x109C"
    },
    "4506": {
      "jump": "i",
      "op": "JUMP"
    },
    "4507": {
      "op": "JUMPDEST"
    },
    "4508": {
      "op": "SWAP6"
    },
    "4509": {
      "op": "POP"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4512": {
      "op": "DUP8"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "op": "CALLDATALOAD"
    },
    "4515": {
      "op": "SWAP5"
    },
    "4516": {
      "op": "POP"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4519": {
      "op": "DUP8"
    },
    "4520": {
      "op": "ADD"
    },
    "4521": {
      "op": "CALLDATALOAD"
    },
    "4522": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4531": {
      "op": "DUP1"
    },
    "4532": {
      "op": "DUP3"
    },
    "4533": {
      "op": "GT"
    },
    "4534": {
      "op": "ISZERO"
    },
    "4535": {
      "op": "PUSH3",
      "value": "0x11C0"
    },
    "4539": {
      "op": "JUMPI"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4542": {
      "op": "DUP1"
    },
    "4543": {
      "op": "REVERT"
    },
    "4544": {
      "op": "JUMPDEST"
    },
    "4545": {
      "op": "PUSH3",
      "value": "0x11CE"
    },
    "4549": {
      "op": "DUP11"
    },
    "4550": {
      "op": "DUP4"
    },
    "4551": {
      "op": "DUP12"
    },
    "4552": {
      "op": "ADD"
    },
    "4553": {
      "op": "PUSH3",
      "value": "0x114C"
    },
    "4557": {
      "jump": "i",
      "op": "JUMP"
    },
    "4558": {
      "op": "JUMPDEST"
    },
    "4559": {
      "op": "SWAP6"
    },
    "4560": {
      "op": "POP"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4563": {
      "op": "DUP10"
    },
    "4564": {
      "op": "ADD"
    },
    "4565": {
      "op": "CALLDATALOAD"
    },
    "4566": {
      "op": "SWAP2"
    },
    "4567": {
      "op": "POP"
    },
    "4568": {
      "op": "DUP1"
    },
    "4569": {
      "op": "DUP3"
    },
    "4570": {
      "op": "GT"
    },
    "4571": {
      "op": "ISZERO"
    },
    "4572": {
      "op": "PUSH3",
      "value": "0x11E5"
    },
    "4576": {
      "op": "JUMPI"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4579": {
      "op": "DUP1"
    },
    "4580": {
      "op": "REVERT"
    },
    "4581": {
      "op": "JUMPDEST"
    },
    "4582": {
      "op": "POP"
    },
    "4583": {
      "op": "PUSH3",
      "value": "0x11F4"
    },
    "4587": {
      "op": "DUP10"
    },
    "4588": {
      "op": "DUP3"
    },
    "4589": {
      "op": "DUP11"
    },
    "4590": {
      "op": "ADD"
    },
    "4591": {
      "op": "PUSH3",
      "value": "0x114C"
    },
    "4595": {
      "jump": "i",
      "op": "JUMP"
    },
    "4596": {
      "op": "JUMPDEST"
    },
    "4597": {
      "op": "SWAP4"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4602": {
      "op": "DUP8"
    },
    "4603": {
      "op": "ADD"
    },
    "4604": {
      "op": "CALLDATALOAD"
    },
    "4605": {
      "op": "SWAP2"
    },
    "4606": {
      "op": "POP"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4609": {
      "op": "DUP8"
    },
    "4610": {
      "op": "ADD"
    },
    "4611": {
      "op": "CALLDATALOAD"
    },
    "4612": {
      "op": "SWAP1"
    },
    "4613": {
      "op": "POP"
    },
    "4614": {
      "op": "SWAP3"
    },
    "4615": {
      "op": "SWAP6"
    },
    "4616": {
      "op": "POP"
    },
    "4617": {
      "op": "SWAP3"
    },
    "4618": {
      "op": "SWAP6"
    },
    "4619": {
      "op": "POP"
    },
    "4620": {
      "op": "SWAP3"
    },
    "4621": {
      "op": "SWAP6"
    },
    "4622": {
      "jump": "o",
      "op": "JUMP"
    },
    "4623": {
      "op": "JUMPDEST"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4628": {
      "op": "DUP3"
    },
    "4629": {
      "op": "DUP5"
    },
    "4630": {
      "op": "SUB"
    },
    "4631": {
      "op": "SLT"
    },
    "4632": {
      "op": "ISZERO"
    },
    "4633": {
      "op": "PUSH3",
      "value": "0x1222"
    },
    "4637": {
      "op": "JUMPI"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4640": {
      "op": "DUP1"
    },
    "4641": {
      "op": "REVERT"
    },
    "4642": {
      "op": "JUMPDEST"
    },
    "4643": {
      "op": "POP"
    },
    "4644": {
      "op": "CALLDATALOAD"
    },
    "4645": {
      "op": "SWAP2"
    },
    "4646": {
      "op": "SWAP1"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "jump": "o",
      "op": "JUMP"
    },
    "4649": {
      "op": "JUMPDEST"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4652": {
      "op": "DUP1"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4655": {
      "op": "DUP1"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4658": {
      "op": "DUP6"
    },
    "4659": {
      "op": "DUP8"
    },
    "4660": {
      "op": "SUB"
    },
    "4661": {
      "op": "SLT"
    },
    "4662": {
      "op": "ISZERO"
    },
    "4663": {
      "op": "PUSH3",
      "value": "0x1240"
    },
    "4667": {
      "op": "JUMPI"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4670": {
      "op": "DUP1"
    },
    "4671": {
      "op": "REVERT"
    },
    "4672": {
      "op": "JUMPDEST"
    },
    "4673": {
      "op": "PUSH3",
      "value": "0x124B"
    },
    "4677": {
      "op": "DUP6"
    },
    "4678": {
      "op": "PUSH3",
      "value": "0x109C"
    },
    "4682": {
      "jump": "i",
      "op": "JUMP"
    },
    "4683": {
      "op": "JUMPDEST"
    },
    "4684": {
      "op": "SWAP4"
    },
    "4685": {
      "op": "POP"
    },
    "4686": {
      "op": "PUSH3",
      "value": "0x125B"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4692": {
      "op": "DUP7"
    },
    "4693": {
      "op": "ADD"
    },
    "4694": {
      "op": "PUSH3",
      "value": "0x109C"
    },
    "4698": {
      "jump": "i",
      "op": "JUMP"
    },
    "4699": {
      "op": "JUMPDEST"
    },
    "4700": {
      "op": "SWAP3"
    },
    "4701": {
      "op": "POP"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4704": {
      "op": "DUP6"
    },
    "4705": {
      "op": "ADD"
    },
    "4706": {
      "op": "CALLDATALOAD"
    },
    "4707": {
      "op": "SWAP2"
    },
    "4708": {
      "op": "POP"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4711": {
      "op": "DUP6"
    },
    "4712": {
      "op": "ADD"
    },
    "4713": {
      "op": "CALLDATALOAD"
    },
    "4714": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4723": {
      "op": "DUP2"
    },
    "4724": {
      "op": "GT"
    },
    "4725": {
      "op": "ISZERO"
    },
    "4726": {
      "op": "PUSH3",
      "value": "0x127F"
    },
    "4730": {
      "op": "JUMPI"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4733": {
      "op": "DUP1"
    },
    "4734": {
      "op": "REVERT"
    },
    "4735": {
      "op": "JUMPDEST"
    },
    "4736": {
      "op": "DUP6"
    },
    "4737": {
      "op": "ADD"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4740": {
      "op": "DUP2"
    },
    "4741": {
      "op": "ADD"
    },
    "4742": {
      "op": "DUP8"
    },
    "4743": {
      "op": "SGT"
    },
    "4744": {
      "op": "PUSH3",
      "value": "0x1291"
    },
    "4748": {
      "op": "JUMPI"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4751": {
      "op": "DUP1"
    },
    "4752": {
      "op": "REVERT"
    },
    "4753": {
      "op": "JUMPDEST"
    },
    "4754": {
      "op": "PUSH3",
      "value": "0x12A2"
    },
    "4758": {
      "op": "DUP8"
    },
    "4759": {
      "op": "DUP3"
    },
    "4760": {
      "op": "CALLDATALOAD"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4763": {
      "op": "DUP5"
    },
    "4764": {
      "op": "ADD"
    },
    "4765": {
      "op": "PUSH3",
      "value": "0x10CF"
    },
    "4769": {
      "jump": "i",
      "op": "JUMP"
    },
    "4770": {
      "op": "JUMPDEST"
    },
    "4771": {
      "op": "SWAP2"
    },
    "4772": {
      "op": "POP"
    },
    "4773": {
      "op": "POP"
    },
    "4774": {
      "op": "SWAP3"
    },
    "4775": {
      "op": "SWAP6"
    },
    "4776": {
      "op": "SWAP2"
    },
    "4777": {
      "op": "SWAP5"
    },
    "4778": {
      "op": "POP"
    },
    "4779": {
      "op": "SWAP3"
    },
    "4780": {
      "op": "POP"
    },
    "4781": {
      "jump": "o",
      "op": "JUMP"
    },
    "4782": {
      "op": "JUMPDEST"
    },
    "4783": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4790": {
      "op": "SHL"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4793": {
      "op": "MSTORE"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4798": {
      "op": "MSTORE"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4803": {
      "op": "REVERT"
    },
    "4804": {
      "op": "JUMPDEST"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4807": {
      "op": "DUP2"
    },
    "4808": {
      "op": "LT"
    },
    "4809": {
      "op": "PUSH3",
      "value": "0x12E3"
    },
    "4813": {
      "op": "JUMPI"
    },
    "4814": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4821": {
      "op": "SHL"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4824": {
      "op": "MSTORE"
    },
    "4825": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4827": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4829": {
      "op": "MSTORE"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4834": {
      "op": "REVERT"
    },
    "4835": {
      "op": "JUMPDEST"
    },
    "4836": {
      "op": "SWAP1"
    },
    "4837": {
      "op": "MSTORE"
    },
    "4838": {
      "jump": "o",
      "op": "JUMP"
    },
    "4839": {
      "op": "JUMPDEST"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4842": {
      "op": "DUP2"
    },
    "4843": {
      "op": "ADD"
    },
    "4844": {
      "op": "PUSH3",
      "value": "0x12F7"
    },
    "4848": {
      "op": "DUP3"
    },
    "4849": {
      "op": "DUP5"
    },
    "4850": {
      "op": "PUSH3",
      "value": "0x12C4"
    },
    "4854": {
      "jump": "i",
      "op": "JUMP"
    },
    "4855": {
      "op": "JUMPDEST"
    },
    "4856": {
      "op": "SWAP3"
    },
    "4857": {
      "op": "SWAP2"
    },
    "4858": {
      "op": "POP"
    },
    "4859": {
      "op": "POP"
    },
    "4860": {
      "jump": "o",
      "op": "JUMP"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4864": {
      "op": "DUP2"
    },
    "4865": {
      "op": "MLOAD"
    },
    "4866": {
      "op": "DUP1"
    },
    "4867": {
      "op": "DUP5"
    },
    "4868": {
      "op": "MSTORE"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4871": {
      "op": "JUMPDEST"
    },
    "4872": {
      "op": "DUP2"
    },
    "4873": {
      "op": "DUP2"
    },
    "4874": {
      "op": "LT"
    },
    "4875": {
      "op": "ISZERO"
    },
    "4876": {
      "op": "PUSH3",
      "value": "0x1325"
    },
    "4880": {
      "op": "JUMPI"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4883": {
      "op": "DUP2"
    },
    "4884": {
      "op": "DUP6"
    },
    "4885": {
      "op": "ADD"
    },
    "4886": {
      "op": "DUP2"
    },
    "4887": {
      "op": "ADD"
    },
    "4888": {
      "op": "MLOAD"
    },
    "4889": {
      "op": "DUP7"
    },
    "4890": {
      "op": "DUP4"
    },
    "4891": {
      "op": "ADD"
    },
    "4892": {
      "op": "DUP3"
    },
    "4893": {
      "op": "ADD"
    },
    "4894": {
      "op": "MSTORE"
    },
    "4895": {
      "op": "ADD"
    },
    "4896": {
      "op": "PUSH3",
      "value": "0x1307"
    },
    "4900": {
      "op": "JUMP"
    },
    "4901": {
      "op": "JUMPDEST"
    },
    "4902": {
      "op": "DUP2"
    },
    "4903": {
      "op": "DUP2"
    },
    "4904": {
      "op": "GT"
    },
    "4905": {
      "op": "ISZERO"
    },
    "4906": {
      "op": "PUSH3",
      "value": "0x1338"
    },
    "4910": {
      "op": "JUMPI"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4915": {
      "op": "DUP4"
    },
    "4916": {
      "op": "DUP8"
    },
    "4917": {
      "op": "ADD"
    },
    "4918": {
      "op": "ADD"
    },
    "4919": {
      "op": "MSTORE"
    },
    "4920": {
      "op": "JUMPDEST"
    },
    "4921": {
      "op": "POP"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4924": {
      "op": "ADD"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4927": {
      "op": "NOT"
    },
    "4928": {
      "op": "AND"
    },
    "4929": {
      "op": "SWAP3"
    },
    "4930": {
      "op": "SWAP1"
    },
    "4931": {
      "op": "SWAP3"
    },
    "4932": {
      "op": "ADD"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4935": {
      "op": "ADD"
    },
    "4936": {
      "op": "SWAP3"
    },
    "4937": {
      "op": "SWAP2"
    },
    "4938": {
      "op": "POP"
    },
    "4939": {
      "op": "POP"
    },
    "4940": {
      "jump": "o",
      "op": "JUMP"
    },
    "4941": {
      "op": "JUMPDEST"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4944": {
      "op": "DUP2"
    },
    "4945": {
      "op": "MSTORE"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4948": {
      "op": "PUSH3",
      "value": "0x116F"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4954": {
      "op": "DUP4"
    },
    "4955": {
      "op": "ADD"
    },
    "4956": {
      "op": "DUP5"
    },
    "4957": {
      "op": "PUSH3",
      "value": "0x12FD"
    },
    "4961": {
      "jump": "i",
      "op": "JUMP"
    },
    "4962": {
      "op": "JUMPDEST"
    },
    "4963": {
      "op": "DUP10"
    },
    "4964": {
      "op": "DUP2"
    },
    "4965": {
      "op": "MSTORE"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4968": {
      "op": "DUP2"
    },
    "4969": {
      "op": "ADD"
    },
    "4970": {
      "op": "DUP10"
    },
    "4971": {
      "op": "SWAP1"
    },
    "4972": {
      "op": "MSTORE"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4979": {
      "op": "SHL"
    },
    "4980": {
      "op": "SUB"
    },
    "4981": {
      "op": "DUP9"
    },
    "4982": {
      "op": "DUP2"
    },
    "4983": {
      "op": "AND"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4986": {
      "op": "DUP4"
    },
    "4987": {
      "op": "ADD"
    },
    "4988": {
      "op": "MSTORE"
    },
    "4989": {
      "op": "DUP8"
    },
    "4990": {
      "op": "DUP2"
    },
    "4991": {
      "op": "AND"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4994": {
      "op": "DUP4"
    },
    "4995": {
      "op": "ADD"
    },
    "4996": {
      "op": "MSTORE"
    },
    "4997": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5002": {
      "op": "DUP4"
    },
    "5003": {
      "op": "ADD"
    },
    "5004": {
      "op": "DUP2"
    },
    "5005": {
      "op": "SWAP1"
    },
    "5006": {
      "op": "MSTORE"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5009": {
      "op": "SWAP2"
    },
    "5010": {
      "op": "PUSH3",
      "value": "0x139F"
    },
    "5014": {
      "op": "DUP5"
    },
    "5015": {
      "op": "DUP4"
    },
    "5016": {
      "op": "ADD"
    },
    "5017": {
      "op": "DUP11"
    },
    "5018": {
      "op": "PUSH3",
      "value": "0x12FD"
    },
    "5022": {
      "jump": "i",
      "op": "JUMP"
    },
    "5023": {
      "op": "JUMPDEST"
    },
    "5024": {
      "op": "SWAP2"
    },
    "5025": {
      "op": "POP"
    },
    "5026": {
      "op": "DUP4"
    },
    "5027": {
      "op": "DUP3"
    },
    "5028": {
      "op": "SUB"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5031": {
      "op": "DUP6"
    },
    "5032": {
      "op": "ADD"
    },
    "5033": {
      "op": "MSTORE"
    },
    "5034": {
      "op": "PUSH3",
      "value": "0x13B5"
    },
    "5038": {
      "op": "DUP3"
    },
    "5039": {
      "op": "DUP10"
    },
    "5040": {
      "op": "PUSH3",
      "value": "0x12FD"
    },
    "5044": {
      "jump": "i",
      "op": "JUMP"
    },
    "5045": {
      "op": "JUMPDEST"
    },
    "5046": {
      "op": "SWAP3"
    },
    "5047": {
      "op": "POP"
    },
    "5048": {
      "op": "DUP1"
    },
    "5049": {
      "op": "DUP8"
    },
    "5050": {
      "op": "AND"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5053": {
      "op": "DUP6"
    },
    "5054": {
      "op": "ADD"
    },
    "5055": {
      "op": "MSTORE"
    },
    "5056": {
      "op": "POP"
    },
    "5057": {
      "op": "POP"
    },
    "5058": {
      "op": "DUP4"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5061": {
      "op": "DUP4"
    },
    "5062": {
      "op": "ADD"
    },
    "5063": {
      "op": "MSTORE"
    },
    "5064": {
      "op": "PUSH3",
      "value": "0x13D7"
    },
    "5068": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5071": {
      "op": "DUP4"
    },
    "5072": {
      "op": "ADD"
    },
    "5073": {
      "op": "DUP5"
    },
    "5074": {
      "op": "PUSH3",
      "value": "0x12C4"
    },
    "5078": {
      "jump": "i",
      "op": "JUMP"
    },
    "5079": {
      "op": "JUMPDEST"
    },
    "5080": {
      "op": "SWAP11"
    },
    "5081": {
      "op": "SWAP10"
    },
    "5082": {
      "op": "POP"
    },
    "5083": {
      "op": "POP"
    },
    "5084": {
      "op": "POP"
    },
    "5085": {
      "op": "POP"
    },
    "5086": {
      "op": "POP"
    },
    "5087": {
      "op": "POP"
    },
    "5088": {
      "op": "POP"
    },
    "5089": {
      "op": "POP"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "op": "POP"
    },
    "5092": {
      "jump": "o",
      "op": "JUMP"
    },
    "5093": {
      "op": "JUMPDEST"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5100": {
      "op": "SHL"
    },
    "5101": {
      "op": "SUB"
    },
    "5102": {
      "op": "SWAP4"
    },
    "5103": {
      "op": "DUP5"
    },
    "5104": {
      "op": "AND"
    },
    "5105": {
      "op": "DUP2"
    },
    "5106": {
      "op": "MSTORE"
    },
    "5107": {
      "op": "SWAP2"
    },
    "5108": {
      "op": "SWAP1"
    },
    "5109": {
      "op": "SWAP3"
    },
    "5110": {
      "op": "AND"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5113": {
      "op": "DUP3"
    },
    "5114": {
      "op": "ADD"
    },
    "5115": {
      "op": "MSTORE"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5118": {
      "op": "DUP2"
    },
    "5119": {
      "op": "ADD"
    },
    "5120": {
      "op": "SWAP2"
    },
    "5121": {
      "op": "SWAP1"
    },
    "5122": {
      "op": "SWAP2"
    },
    "5123": {
      "op": "MSTORE"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5126": {
      "op": "ADD"
    },
    "5127": {
      "op": "SWAP1"
    },
    "5128": {
      "jump": "o",
      "op": "JUMP"
    },
    "5129": {
      "op": "JUMPDEST"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5132": {
      "op": "DUP2"
    },
    "5133": {
      "op": "MSTORE"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5136": {
      "op": "PUSH3",
      "value": "0x141E"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5142": {
      "op": "DUP4"
    },
    "5143": {
      "op": "ADD"
    },
    "5144": {
      "op": "DUP8"
    },
    "5145": {
      "op": "PUSH3",
      "value": "0x12FD"
    },
    "5149": {
      "jump": "i",
      "op": "JUMP"
    },
    "5150": {
      "op": "JUMPDEST"
    },
    "5151": {
      "op": "DUP3"
    },
    "5152": {
      "op": "DUP2"
    },
    "5153": {
      "op": "SUB"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5156": {
      "op": "DUP5"
    },
    "5157": {
      "op": "ADD"
    },
    "5158": {
      "op": "MSTORE"
    },
    "5159": {
      "op": "PUSH3",
      "value": "0x1432"
    },
    "5163": {
      "op": "DUP2"
    },
    "5164": {
      "op": "DUP8"
    },
    "5165": {
      "op": "PUSH3",
      "value": "0x12FD"
    },
    "5169": {
      "jump": "i",
      "op": "JUMP"
    },
    "5170": {
      "op": "JUMPDEST"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5173": {
      "op": "DUP5"
    },
    "5174": {
      "op": "ADD"
    },
    "5175": {
      "op": "SWAP6"
    },
    "5176": {
      "op": "SWAP1"
    },
    "5177": {
      "op": "SWAP6"
    },
    "5178": {
      "op": "MSTORE"
    },
    "5179": {
      "op": "POP"
    },
    "5180": {
      "op": "POP"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5187": {
      "op": "SHL"
    },
    "5188": {
      "op": "SUB"
    },
    "5189": {
      "op": "SWAP2"
    },
    "5190": {
      "op": "SWAP1"
    },
    "5191": {
      "op": "SWAP2"
    },
    "5192": {
      "op": "AND"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5195": {
      "op": "SWAP1"
    },
    "5196": {
      "op": "SWAP2"
    },
    "5197": {
      "op": "ADD"
    },
    "5198": {
      "op": "MSTORE"
    },
    "5199": {
      "op": "SWAP3"
    },
    "5200": {
      "op": "SWAP2"
    },
    "5201": {
      "op": "POP"
    },
    "5202": {
      "op": "POP"
    },
    "5203": {
      "jump": "o",
      "op": "JUMP"
    },
    "5204": {
      "op": "JUMPDEST"
    },
    "5205": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5212": {
      "op": "SHL"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5215": {
      "op": "MSTORE"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5220": {
      "op": "MSTORE"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5225": {
      "op": "REVERT"
    },
    "5226": {
      "op": "JUMPDEST"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5229": {
      "op": "DUP3"
    },
    "5230": {
      "op": "NOT"
    },
    "5231": {
      "op": "DUP3"
    },
    "5232": {
      "op": "GT"
    },
    "5233": {
      "op": "ISZERO"
    },
    "5234": {
      "op": "PUSH3",
      "value": "0x1480"
    },
    "5238": {
      "op": "JUMPI"
    },
    "5239": {
      "op": "PUSH3",
      "value": "0x1480"
    },
    "5243": {
      "op": "PUSH3",
      "value": "0x1454"
    },
    "5247": {
      "jump": "i",
      "op": "JUMP"
    },
    "5248": {
      "op": "JUMPDEST"
    },
    "5249": {
      "op": "POP"
    },
    "5250": {
      "op": "ADD"
    },
    "5251": {
      "op": "SWAP1"
    },
    "5252": {
      "jump": "o",
      "op": "JUMP"
    },
    "5253": {
      "op": "JUMPDEST"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5258": {
      "op": "DUP3"
    },
    "5259": {
      "op": "DUP5"
    },
    "5260": {
      "op": "SUB"
    },
    "5261": {
      "op": "SLT"
    },
    "5262": {
      "op": "ISZERO"
    },
    "5263": {
      "op": "PUSH3",
      "value": "0x1498"
    },
    "5267": {
      "op": "JUMPI"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5270": {
      "op": "DUP1"
    },
    "5271": {
      "op": "REVERT"
    },
    "5272": {
      "op": "JUMPDEST"
    },
    "5273": {
      "op": "POP"
    },
    "5274": {
      "op": "MLOAD"
    },
    "5275": {
      "op": "SWAP2"
    },
    "5276": {
      "op": "SWAP1"
    },
    "5277": {
      "op": "POP"
    },
    "5278": {
      "jump": "o",
      "op": "JUMP"
    },
    "5279": {
      "op": "JUMPDEST"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5284": {
      "op": "DUP3"
    },
    "5285": {
      "op": "DUP5"
    },
    "5286": {
      "op": "SUB"
    },
    "5287": {
      "op": "SLT"
    },
    "5288": {
      "op": "ISZERO"
    },
    "5289": {
      "op": "PUSH3",
      "value": "0x14B2"
    },
    "5293": {
      "op": "JUMPI"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5296": {
      "op": "DUP1"
    },
    "5297": {
      "op": "REVERT"
    },
    "5298": {
      "op": "JUMPDEST"
    },
    "5299": {
      "op": "DUP2"
    },
    "5300": {
      "op": "MLOAD"
    },
    "5301": {
      "op": "DUP1"
    },
    "5302": {
      "op": "ISZERO"
    },
    "5303": {
      "op": "ISZERO"
    },
    "5304": {
      "op": "DUP2"
    },
    "5305": {
      "op": "EQ"
    },
    "5306": {
      "op": "PUSH3",
      "value": "0x116F"
    },
    "5310": {
      "op": "JUMPI"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5313": {
      "op": "DUP1"
    },
    "5314": {
      "op": "REVERT"
    },
    "5315": {
      "op": "JUMPDEST"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5318": {
      "op": "DUP2"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5321": {
      "op": "NOT"
    },
    "5322": {
      "op": "DIV"
    },
    "5323": {
      "op": "DUP4"
    },
    "5324": {
      "op": "GT"
    },
    "5325": {
      "op": "DUP3"
    },
    "5326": {
      "op": "ISZERO"
    },
    "5327": {
      "op": "ISZERO"
    },
    "5328": {
      "op": "AND"
    },
    "5329": {
      "op": "ISZERO"
    },
    "5330": {
      "op": "PUSH3",
      "value": "0x14E0"
    },
    "5334": {
      "op": "JUMPI"
    },
    "5335": {
      "op": "PUSH3",
      "value": "0x14E0"
    },
    "5339": {
      "op": "PUSH3",
      "value": "0x1454"
    },
    "5343": {
      "jump": "i",
      "op": "JUMP"
    },
    "5344": {
      "op": "JUMPDEST"
    },
    "5345": {
      "op": "POP"
    },
    "5346": {
      "op": "MUL"
    },
    "5347": {
      "op": "SWAP1"
    },
    "5348": {
      "jump": "o",
      "op": "JUMP"
    },
    "5349": {
      "op": "JUMPDEST"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5352": {
      "op": "DUP3"
    },
    "5353": {
      "op": "PUSH3",
      "value": "0x1503"
    },
    "5357": {
      "op": "JUMPI"
    },
    "5358": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5365": {
      "op": "SHL"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5368": {
      "op": "MSTORE"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5373": {
      "op": "MSTORE"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5378": {
      "op": "REVERT"
    },
    "5379": {
      "op": "JUMPDEST"
    },
    "5380": {
      "op": "POP"
    },
    "5381": {
      "op": "DIV"
    },
    "5382": {
      "op": "SWAP1"
    },
    "5383": {
      "jump": "o",
      "op": "JUMP"
    },
    "5384": {
      "op": "JUMPDEST"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5387": {
      "op": "DUP2"
    },
    "5388": {
      "op": "DUP2"
    },
    "5389": {
      "op": "SHR"
    },
    "5390": {
      "op": "SWAP1"
    },
    "5391": {
      "op": "DUP3"
    },
    "5392": {
      "op": "AND"
    },
    "5393": {
      "op": "DUP1"
    },
    "5394": {
      "op": "PUSH3",
      "value": "0x151D"
    },
    "5398": {
      "op": "JUMPI"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5401": {
      "op": "DUP3"
    },
    "5402": {
      "op": "AND"
    },
    "5403": {
      "op": "SWAP2"
    },
    "5404": {
      "op": "POP"
    },
    "5405": {
      "op": "JUMPDEST"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5408": {
      "op": "DUP3"
    },
    "5409": {
      "op": "LT"
    },
    "5410": {
      "op": "DUP2"
    },
    "5411": {
      "op": "EQ"
    },
    "5412": {
      "op": "ISZERO"
    },
    "5413": {
      "op": "PUSH3",
      "value": "0x153F"
    },
    "5417": {
      "op": "JUMPI"
    },
    "5418": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5425": {
      "op": "SHL"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5428": {
      "op": "MSTORE"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5433": {
      "op": "MSTORE"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5438": {
      "op": "REVERT"
    },
    "5439": {
      "op": "JUMPDEST"
    },
    "5440": {
      "op": "POP"
    },
    "5441": {
      "op": "SWAP2"
    },
    "5442": {
      "op": "SWAP1"
    },
    "5443": {
      "op": "POP"
    },
    "5444": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "921e30a8af1331ffe190bcbc0fd098e302d5947f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\nimport \"./ERC20Factory.sol\";\n\n// @title\n// @author Web3Wannabe\n// @notice\n// @dev\ncontract FractionalizeNFT is IERC721Receiver {\n\n    address public owner = msg.sender;\n\n    mapping (uint => FractionalizedNFT) public fracNFTs;\n    uint256 public fracNFTCount = 0;\n\n    //    mapping (address => uint256) userFracNFTs;\n\n    struct FractionalizedNFT {\n        uint256 fracNFTId;\n        uint256 nftTokenId;\n        address erc721Address;\n        address erc20Address;\n        string erc20Symbol;\n        string erc20Name;\n\taddress payable originalOwner;\n        uint256 buyoutPrice;\n        State state;\n    }\n\n    enum State { Fractionalized, Redeemed, BoughtOut }\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    event Received(address, uint);\n    event NftReceived(address);\n    event Fractionalized(address, uint);\n    event Redeemed(address, uint);\n    event BoughtOut(address, uint);\n    event Claimed(address, uint);\n\n    /// @notice List of all property ids.\n    /// @dev Used as a helper when iterating available properties in frontend client.\n    uint[] public idList;\n\n    /// @notice idList length.\n    /// @dev Used as a helper when iterating available properties in frontend client.\n    uint public idListLength;\n\n    // https://blog.soliditylang.org/2020/03/26/fallback-receive-split/\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    fallback() external payable {\n        revert();\n    }\n\n    function getERC20Address(uint256 fracNFTId) public view returns (address) {\n        return fracNFTs[fracNFTId].erc20Address;\n    }\n\n    function getERC20Symbol(uint256 fracNFTId) public view returns (string memory) {\n        return fracNFTs[fracNFTId].erc20Symbol;\n    }\n\n    function getState(uint256 fracNFTId) public view returns (State) {\n        return fracNFTs[fracNFTId].state;\n    }\n\n    function fractionalizeNft(address nftContractAddress,\n                              uint256 nftTokenId,\n                              string memory erc20Name,\n                              string memory erc20Symbol,\n                              uint256 erc20Supply,\n                              uint256 buyoutPrice) public returns (uint256) {\n        ERC721 nft = ERC721(nftContractAddress);\n        nft.safeTransferFrom(msg.sender, address(this), nftTokenId);\n        ERC20 erc20 = (new ERC20Factory)(erc20Name, erc20Symbol, erc20Supply, msg.sender);\n        uint256 fracNFTId = fracNFTCount;\n        fracNFTs[fracNFTCount] = FractionalizedNFT({\n            fracNFTId: fracNFTId,\n            nftTokenId: nftTokenId,\n            erc721Address: nftContractAddress,\n            erc20Address: address(erc20),\n            erc20Symbol: erc20Symbol,\n            erc20Name: erc20Name,\n            originalOwner: payable(msg.sender),\n            buyoutPrice: buyoutPrice,\n            state: State.Fractionalized});\n        idList.push(fracNFTCount);\n        idListLength = idList.length;\n        fracNFTCount += 1;\n        emit Fractionalized(msg.sender, fracNFTId);\n        return fracNFTId;\n    }\n\n    function redeem(uint256 fracNFTId) public payable {\n        // A holder of the entire ERC20 supply can send the tokens in order to redeem the NFT.\n        ERC20 erc20 = ERC20(fracNFTs[fracNFTId].erc20Address);\n        uint256 redeemerBalance = erc20.balanceOf(msg.sender);\n        uint256 erc20Supply = erc20.totalSupply();\n        require(redeemerBalance == erc20Supply, \"Redeemeer does not hold the entire supply.\");\n        erc20.transferFrom(msg.sender, address(this), redeemerBalance);\n        ERC721 erc721 = ERC721(fracNFTs[fracNFTId].erc721Address);\n        erc721.safeTransferFrom(address(this), msg.sender, fracNFTs[fracNFTId].nftTokenId);\n        emit Redeemed(msg.sender, fracNFTId);\n    }\n\n    function buyout(uint256 fracNFTId) public payable {\n        // A buyer can buy the NFT as specified by the buyout price by sending ETH to the contract.\n        require(msg.value >= fracNFTs[fracNFTId].buyoutPrice, \"Sender sent less than the buyout price.\");\n        fracNFTs[fracNFTId].state = State.BoughtOut;\n        ERC721 erc721 = ERC721(fracNFTs[fracNFTId].erc721Address);\n        erc721.safeTransferFrom(address(this), msg.sender, fracNFTs[fracNFTId].nftTokenId);\n        emit BoughtOut(msg.sender, fracNFTId);\n    }\n\n    function claim(uint256 fracNFTId) public {\n        // A holder of the ERC20 token can claim his ETH following a buyout.\n        require(fracNFTs[fracNFTId].state == State.BoughtOut, \"Fractionalized NFT has not been bought out.\");\n        ERC20 erc20 = ERC20(fracNFTs[fracNFTId].erc20Address);\n        uint256 claimerBalance = erc20.balanceOf(msg.sender);\n        require(claimerBalance > 0, \"Claimer does not hold any tokens.\");\n        erc20.transferFrom(msg.sender, address(this), claimerBalance);\n        uint256 erc20Supply = erc20.totalSupply();\n        uint256 claimAmountWei = fracNFTs[fracNFTId].buyoutPrice*claimerBalance/erc20Supply;\n        payable(msg.sender).transfer(claimAmountWei);\n        emit Claimed(msg.sender, fracNFTId);\n    }\n\n    function onERC721Received(address operator, address from, uint256 nftTokenId, bytes memory data) public returns (bytes4) {\n        emit NftReceived(msg.sender);\n        return bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"));\n    }\n\n}\n",
  "sourceMap": "262:5213:16:-:0;;;314:33;;;-1:-1:-1;;;;;;314:33:16;337:10;314:33;;;411:31;;849:49;;;;;;;;;-1:-1:-1;873:5:16;:18;;-1:-1:-1;;;;;;873:18:16;881:10;873:18;;;262:5213;;;;;;",
  "sourcePath": "contracts/FractionalizeNFT.sol",
  "type": "contract"
}