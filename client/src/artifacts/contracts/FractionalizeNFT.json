{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "BoughtOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Fractionalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "NftReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "buyout",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fracNFTCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "erc20Symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "erc20Supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "buyoutPrice",
          "type": "uint256"
        }
      ],
      "name": "fractionalizeNft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getERC20Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getERC20Symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "enum FractionalizeNFT.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "1": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "10": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "11": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "12": "contracts/ERC20Factory.sol",
    "13": "contracts/FractionalizeNFT.sol",
    "2": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
    "4": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721.sol",
    "5": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
    "6": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "7": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
    "8": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "9": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol"
  },
  "ast": {
    "absolutePath": "contracts/FractionalizeNFT.sol",
    "exportedSymbols": {
      "Address": [
        2449
      ],
      "Context": [
        1991
      ],
      "ERC165": [
        2676
      ],
      "ERC20": [
        1023
      ],
      "ERC20Factory": [
        1866
      ],
      "ERC721": [
        1839
      ],
      "FractionalizeNFT": [
        477
      ],
      "IERC165": [
        2688
      ],
      "IERC20": [
        1944
      ],
      "IERC20Metadata": [
        1969
      ],
      "IERC721": [
        2107
      ],
      "IERC721Metadata": [
        2152
      ],
      "IERC721Receiver": [
        2125
      ],
      "Strings": [
        2652
      ]
    },
    "id": 478,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:13"
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 478,
        "sourceUnit": 1024,
        "src": "65:55:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 478,
        "sourceUnit": 1840,
        "src": "121:57:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC20Factory.sol",
        "file": "./ERC20Factory.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 478,
        "sourceUnit": 1867,
        "src": "180:28:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2125,
              "src": "291:15:13"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "291:15:13"
          }
        ],
        "canonicalName": "FractionalizeNFT",
        "contractDependencies": [
          1866
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 477,
        "linearizedBaseContracts": [
          477,
          2125
        ],
        "name": "FractionalizeNFT",
        "nameLocation": "271:16:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 10,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "329:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "314:33:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "314:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 8,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -15,
                "src": "337:3:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "337:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "fracNFTs",
            "nameLocation": "398:8:13",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "354:52:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 11,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "363:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "354:35:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT)"
              },
              "valueType": {
                "id": 13,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 12,
                  "name": "FractionalizedNFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34,
                  "src": "371:17:13"
                },
                "referencedDeclaration": 34,
                "src": "371:17:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage_ptr",
                  "typeString": "struct FractionalizeNFT.FractionalizedNFT"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "7ff58ad9",
            "id": 18,
            "mutability": "mutable",
            "name": "fracNFTCount",
            "nameLocation": "427:12:13",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "412:31:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "412:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "442:1:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalizeNFT.FractionalizedNFT",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "nftTokenId",
                "nameLocation": "547:10:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "539:18:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "erc721Address",
                "nameLocation": "575:13:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "567:21:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "567:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "erc20Address",
                "nameLocation": "606:12:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "598:20:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "598:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "erc20Symbol",
                "nameLocation": "635:11:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "628:18:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 25,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "628:6:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "originalOwner",
                "nameLocation": "665:13:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "649:29:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "649:15:13",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "buyoutPrice",
                "nameLocation": "696:11:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "688:19:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "688:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "723:5:13",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "717:11:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$38",
                  "typeString": "enum FractionalizeNFT.State"
                },
                "typeName": {
                  "id": 32,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 31,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 38,
                    "src": "717:5:13"
                  },
                  "referencedDeclaration": 38,
                  "src": "717:5:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$38",
                    "typeString": "enum FractionalizeNFT.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FractionalizedNFT",
            "nameLocation": "511:17:13",
            "nodeType": "StructDefinition",
            "scope": 477,
            "src": "504:231:13",
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalizeNFT.State",
            "id": 38,
            "members": [
              {
                "id": 35,
                "name": "Fractionalized",
                "nameLocation": "754:14:13",
                "nodeType": "EnumValue",
                "src": "754:14:13"
              },
              {
                "id": 36,
                "name": "Redeemed",
                "nameLocation": "770:8:13",
                "nodeType": "EnumValue",
                "src": "770:8:13"
              },
              {
                "id": 37,
                "name": "BoughtOut",
                "nameLocation": "780:9:13",
                "nodeType": "EnumValue",
                "src": "780:9:13"
              }
            ],
            "name": "State",
            "nameLocation": "746:5:13",
            "nodeType": "EnumDefinition",
            "src": "741:50:13"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "811:35:13",
              "statements": [
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "821:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 42,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "829:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "829:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "821:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "821:18:13"
                }
              ]
            },
            "id": 47,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "808:2:13"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "811:0:13"
            },
            "scope": 477,
            "src": "797:49:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 53,
            "name": "Received",
            "nameLocation": "858:8:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "867:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "876:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "866:15:13"
            },
            "src": "852:30:13"
          },
          {
            "anonymous": false,
            "id": 57,
            "name": "NftReceived",
            "nameLocation": "893:11:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "905:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "904:9:13"
            },
            "src": "887:27:13"
          },
          {
            "anonymous": false,
            "id": 63,
            "name": "Fractionalized",
            "nameLocation": "925:14:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "940:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "949:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:15:13"
            },
            "src": "919:36:13"
          },
          {
            "anonymous": false,
            "id": 69,
            "name": "Redeemed",
            "nameLocation": "966:8:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "975:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "984:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "974:15:13"
            },
            "src": "960:30:13"
          },
          {
            "anonymous": false,
            "id": 75,
            "name": "BoughtOut",
            "nameLocation": "1001:9:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1011:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1020:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1010:15:13"
            },
            "src": "995:31:13"
          },
          {
            "anonymous": false,
            "id": 81,
            "name": "Claimed",
            "nameLocation": "1037:7:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1045:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1054:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1044:15:13"
            },
            "src": "1031:29:13"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1165:53:13",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 85,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1189:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1189:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1201:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1201:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 84,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1180:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "EmitStatement",
                  "src": "1175:36:13"
                }
              ]
            },
            "id": 92,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1145:2:13"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1165:0:13"
            },
            "scope": 477,
            "src": "1138:80:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1252:25:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 95,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1262:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1262:8:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1262:8:13"
                }
              ]
            },
            "id": 99,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1232:2:13"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1252:0:13"
            },
            "scope": 477,
            "src": "1224:53:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1357:56:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 106,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1374:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "id": 107,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "1383:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1374:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc20Address",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "1374:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 110,
                  "nodeType": "Return",
                  "src": "1367:39:13"
                }
              ]
            },
            "functionSelector": "d1bc6caa",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getERC20Address",
            "nameLocation": "1292:15:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "1316:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1308:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1307:19:13"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1348:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1347:9:13"
            },
            "scope": 477,
            "src": "1283:130:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "1498:55:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 119,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1515:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 121,
                      "indexExpression": {
                        "id": 120,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "1524:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1515:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc20Symbol",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 26,
                    "src": "1515:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 118,
                  "id": 123,
                  "nodeType": "Return",
                  "src": "1508:38:13"
                }
              ]
            },
            "functionSelector": "78fe17e5",
            "id": 125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getERC20Symbol",
            "nameLocation": "1428:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "1451:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1443:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1443:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1442:19:13"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1483:13:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1482:15:13"
            },
            "scope": 477,
            "src": "1419:134:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "1624:49:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 133,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1641:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 135,
                      "indexExpression": {
                        "id": 134,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "1650:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1641:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33,
                    "src": "1641:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$38",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "functionReturnParameters": 132,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "1634:32:13"
                }
              ]
            },
            "functionSelector": "44c9af28",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getState",
            "nameLocation": "1568:8:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "1585:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1577:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1576:19:13"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1617:5:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$38",
                    "typeString": "enum FractionalizeNFT.State"
                  },
                  "typeName": {
                    "id": 130,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 129,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38,
                      "src": "1617:5:13"
                    },
                    "referencedDeclaration": 38,
                    "src": "1617:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$38",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1616:7:13"
            },
            "scope": 477,
            "src": "1559:114:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "2022:708:13",
              "statements": [
                {
                  "assignments": [
                    158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 158,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "2039:3:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 227,
                      "src": "2032:10:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1839",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 157,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 156,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1839,
                          "src": "2032:6:13"
                        },
                        "referencedDeclaration": 1839,
                        "src": "2032:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1839",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 162,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 160,
                        "name": "nftContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "2052:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 159,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1839,
                      "src": "2045:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1839_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2045:26:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1839",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2032:39:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 166,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2102:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2102:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 170,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2122:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$477",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$477",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2114:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2114:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2114:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 172,
                        "name": "nftTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2129:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 163,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "2081:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1839",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1402,
                      "src": "2081:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:59:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:59:13"
                },
                {
                  "assignments": [
                    177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 177,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "2156:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 227,
                      "src": "2150:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1023",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 176,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 175,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1023,
                          "src": "2150:5:13"
                        },
                        "referencedDeclaration": 1023,
                        "src": "2150:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1023",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 188,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 182,
                        "name": "erc20Name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2183:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 183,
                        "name": "erc20Symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "2194:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 184,
                        "name": "erc20Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "2207:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 185,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2220:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2220:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "components": [
                        {
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2165:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Factory_$1866_$",
                            "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Factory)"
                          },
                          "typeName": {
                            "id": 179,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 178,
                              "name": "ERC20Factory",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1866,
                              "src": "2169:12:13"
                            },
                            "referencedDeclaration": 1866,
                            "src": "2169:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Factory_$1866",
                              "typeString": "contract ERC20Factory"
                            }
                          }
                        }
                      ],
                      "id": 181,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2164:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Factory_$1866_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Factory)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2164:67:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Factory_$1866",
                      "typeString": "contract ERC20Factory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2150:81:13"
                },
                {
                  "expression": {
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 189,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2241:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 191,
                      "indexExpression": {
                        "id": 190,
                        "name": "fracNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2250:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2241:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 193,
                          "name": "nftTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "2310:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 194,
                          "name": "nftContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "2349:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 197,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "2403:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1023",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$1023",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2395:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2395:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2395:14:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 199,
                          "name": "erc20Symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "2436:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 202,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2484:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2484:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2476:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2476:8:13",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2476:19:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 205,
                          "name": "buyoutPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "2522:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 206,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "2554:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$38_$",
                              "typeString": "type(enum FractionalizeNFT.State)"
                            }
                          },
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Fractionalized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "2554:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$38",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$38",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        ],
                        "id": 192,
                        "name": "FractionalizedNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "2266:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FractionalizedNFT_$34_storage_ptr_$",
                          "typeString": "type(struct FractionalizeNFT.FractionalizedNFT storage pointer)"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "nftTokenId",
                        "erc721Address",
                        "erc20Address",
                        "erc20Symbol",
                        "originalOwner",
                        "buyoutPrice",
                        "state"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2266:310:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$34_memory_ptr",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT memory"
                      }
                    },
                    "src": "2241:335:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                      "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:335:13"
                },
                {
                  "assignments": [
                    212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "fracNFTId",
                      "nameLocation": "2594:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 227,
                      "src": "2586:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 211,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2586:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 214,
                  "initialValue": {
                    "id": 213,
                    "name": "fracNFTCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18,
                    "src": "2606:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2586:32:13"
                },
                {
                  "expression": {
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 215,
                      "name": "fracNFTCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2628:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2644:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2628:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "2628:17:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 220,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2675:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2675:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 222,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "2687:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 219,
                      "name": "Fractionalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "2660:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2660:37:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "EmitStatement",
                  "src": "2655:42:13"
                },
                {
                  "expression": {
                    "id": 225,
                    "name": "fracNFTId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 212,
                    "src": "2714:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 155,
                  "id": 226,
                  "nodeType": "Return",
                  "src": "2707:16:13"
                }
              ]
            },
            "functionSelector": "06fbd1f2",
            "id": 228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fractionalizeNft",
            "nameLocation": "1688:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "nftContractAddress",
                  "nameLocation": "1713:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "1705:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "nftTokenId",
                  "nameLocation": "1771:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "1763:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "erc20Name",
                  "nameLocation": "1827:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "1813:23:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "erc20Symbol",
                  "nameLocation": "1882:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "1868:25:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "erc20Supply",
                  "nameLocation": "1933:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "1925:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1925:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "buyoutPrice",
                  "nameLocation": "1984:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "1976:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1976:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1704:292:13"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "2013:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2012:9:13"
            },
            "scope": 477,
            "src": "1679:1051:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "2786:651:13",
              "statements": [
                {
                  "assignments": [
                    235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 235,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "2897:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 307,
                      "src": "2891:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1023",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 234,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 233,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1023,
                          "src": "2891:5:13"
                        },
                        "referencedDeclaration": 1023,
                        "src": "2891:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1023",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 242,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 237,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "2911:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 239,
                          "indexExpression": {
                            "id": 238,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "2920:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2911:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2911:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 236,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1023,
                      "src": "2905:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1023_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2905:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1023",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2891:53:13"
                },
                {
                  "assignments": [
                    244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 244,
                      "mutability": "mutable",
                      "name": "redeemerBalance",
                      "nameLocation": "2962:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 307,
                      "src": "2954:23:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2954:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 247,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2996:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2996:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 245,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "2980:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1023",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 576,
                      "src": "2980:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2980:27:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2954:53:13"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "erc20Supply",
                      "nameLocation": "3025:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 307,
                      "src": "3017:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3017:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 253,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "3039:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1023",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 562,
                      "src": "3039:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3039:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3017:41:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 258,
                          "name": "redeemerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "3076:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 259,
                          "name": "erc20Supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "3095:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3076:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656465656d65657220646f6573206e6f7420686f6c642074686520656e7469726520737570706c792e",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3108:44:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_236101e21dee81e2f18f31894ab8347381b8b05dc8924dcc491bb1cb5e2effc5",
                          "typeString": "literal_string \"Redeemeer does not hold the entire supply.\""
                        },
                        "value": "Redeemeer does not hold the entire supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_236101e21dee81e2f18f31894ab8347381b8b05dc8924dcc491bb1cb5e2effc5",
                          "typeString": "literal_string \"Redeemeer does not hold the entire supply.\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3068:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3068:85:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "3068:85:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 267,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3182:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3182:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 271,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3202:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$477",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$477",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3194:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3194:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3194:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 273,
                        "name": "redeemerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "3209:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 264,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "3163:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1023",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 684,
                      "src": "3163:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3163:62:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "3163:62:13"
                },
                {
                  "assignments": [
                    278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 278,
                      "mutability": "mutable",
                      "name": "erc721",
                      "nameLocation": "3242:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 307,
                      "src": "3235:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1839",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 277,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 276,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1839,
                          "src": "3235:6:13"
                        },
                        "referencedDeclaration": 1839,
                        "src": "3235:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1839",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 285,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 280,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "3258:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 282,
                          "indexExpression": {
                            "id": 281,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "3267:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3258:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "3258:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 279,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1839,
                      "src": "3251:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1839_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3251:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1839",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3235:57:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 291,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3334:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$477",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$477",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3326:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 289,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3326:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3326:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3341:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3341:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 295,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "3353:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 297,
                          "indexExpression": {
                            "id": 296,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "3362:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3353:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20,
                        "src": "3353:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 286,
                        "name": "erc721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "3302:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1839",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1402,
                      "src": "3302:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3302:82:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "3302:82:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 302,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3408:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3408:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 304,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "3420:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 301,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "3399:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3399:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "EmitStatement",
                  "src": "3394:36:13"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "2745:6:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "2760:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "2752:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2751:19:13"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2786:0:13"
            },
            "scope": 477,
            "src": "2736:701:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 363,
              "nodeType": "Block",
              "src": "3493:472:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 314,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3611:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3611:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 316,
                              "name": "fracNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "3624:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                              }
                            },
                            "id": 318,
                            "indexExpression": {
                              "id": 317,
                              "name": "fracNFTId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "3633:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3624:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                              "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "3624:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3611:44:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e6465722073656e74206c657373207468616e20746865206275796f75742070726963652e",
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3657:41:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd942614136c8476e28cdebb64c2d910549cbb0b70edce8dfe326f03f4643a50",
                          "typeString": "literal_string \"Sender sent less than the buyout price.\""
                        },
                        "value": "Sender sent less than the buyout price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd942614136c8476e28cdebb64c2d910549cbb0b70edce8dfe326f03f4643a50",
                          "typeString": "literal_string \"Sender sent less than the buyout price.\""
                        }
                      ],
                      "id": 313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3603:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3603:96:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "3603:96:13"
                },
                {
                  "expression": {
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 324,
                          "name": "fracNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "3709:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                            "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                          }
                        },
                        "id": 326,
                        "indexExpression": {
                          "id": 325,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "3718:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3709:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                          "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "3709:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$38",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 328,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "3737:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$38_$",
                          "typeString": "type(enum FractionalizeNFT.State)"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BoughtOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "3737:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$38",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "src": "3709:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$38",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3709:43:13"
                },
                {
                  "assignments": [
                    334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 334,
                      "mutability": "mutable",
                      "name": "erc721",
                      "nameLocation": "3769:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 363,
                      "src": "3762:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1839",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 333,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 332,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1839,
                          "src": "3762:6:13"
                        },
                        "referencedDeclaration": 1839,
                        "src": "3762:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1839",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 341,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 336,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "3785:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 338,
                          "indexExpression": {
                            "id": 337,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "3794:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3785:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "3785:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 335,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1839,
                      "src": "3778:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1839_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3778:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1839",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3762:57:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 347,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3861:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$477",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$477",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3853:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 345,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3853:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3853:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 349,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3868:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3868:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 351,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "3880:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 353,
                          "indexExpression": {
                            "id": 352,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "3889:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3880:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20,
                        "src": "3880:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 342,
                        "name": "erc721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "3829:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1839",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1402,
                      "src": "3829:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3829:82:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "3829:82:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3936:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3936:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 360,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "3948:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 357,
                      "name": "BoughtOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "3926:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3926:32:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "EmitStatement",
                  "src": "3921:37:13"
                }
              ]
            },
            "functionSelector": "07bec66f",
            "id": 364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyout",
            "nameLocation": "3452:6:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "3467:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 364,
                  "src": "3459:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3459:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3458:19:13"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3493:0:13"
            },
            "scope": 477,
            "src": "3443:522:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "4012:707:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$38",
                          "typeString": "enum FractionalizeNFT.State"
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 370,
                              "name": "fracNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "4107:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                              }
                            },
                            "id": 372,
                            "indexExpression": {
                              "id": 371,
                              "name": "fracNFTId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "4116:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4107:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                              "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "4107:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$38",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 374,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "4136:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$38_$",
                              "typeString": "type(enum FractionalizeNFT.State)"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "BoughtOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37,
                          "src": "4136:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$38",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        },
                        "src": "4107:44:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4672616374696f6e616c697a6564204e465420686173206e6f74206265656e20626f75676874206f75742e",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4153:45:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6d91eba7472d4b813c8f94f076251f17b02a0abaa0ce0e02ab9b764eb0faeb0",
                          "typeString": "literal_string \"Fractionalized NFT has not been bought out.\""
                        },
                        "value": "Fractionalized NFT has not been bought out."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6d91eba7472d4b813c8f94f076251f17b02a0abaa0ce0e02ab9b764eb0faeb0",
                          "typeString": "literal_string \"Fractionalized NFT has not been bought out.\""
                        }
                      ],
                      "id": 369,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4099:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4099:100:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "4099:100:13"
                },
                {
                  "assignments": [
                    382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 382,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "4215:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "4209:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1023",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 381,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 380,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1023,
                          "src": "4209:5:13"
                        },
                        "referencedDeclaration": 1023,
                        "src": "4209:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1023",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 389,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 384,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "4229:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 386,
                          "indexExpression": {
                            "id": 385,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "4238:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4229:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "4229:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 383,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1023,
                      "src": "4223:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1023_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4223:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1023",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4209:53:13"
                },
                {
                  "assignments": [
                    391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 391,
                      "mutability": "mutable",
                      "name": "claimerBalance",
                      "nameLocation": "4280:14:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "4272:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 390,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4272:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 397,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 394,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4313:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4313:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 392,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "4297:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1023",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 576,
                      "src": "4297:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4297:27:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4272:52:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 399,
                          "name": "claimerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 391,
                          "src": "4342:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4359:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4342:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d657220646f6573206e6f7420686f6c6420616e7920746f6b656e732e",
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4362:35:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ef2c2aa2fbe0e8bc377bb41a097869566475b4d7ba3c50ff52a2b50a0a082d5",
                          "typeString": "literal_string \"Claimer does not hold any tokens.\""
                        },
                        "value": "Claimer does not hold any tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ef2c2aa2fbe0e8bc377bb41a097869566475b4d7ba3c50ff52a2b50a0a082d5",
                          "typeString": "literal_string \"Claimer does not hold any tokens.\""
                        }
                      ],
                      "id": 398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4334:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4334:64:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "4334:64:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 408,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4427:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4427:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 412,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4447:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$477",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$477",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4439:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 410,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4439:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4439:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 414,
                        "name": "claimerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "4454:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 405,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "4408:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1023",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 684,
                      "src": "4408:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4408:61:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "4408:61:13"
                },
                {
                  "assignments": [
                    418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 418,
                      "mutability": "mutable",
                      "name": "erc20Supply",
                      "nameLocation": "4487:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "4479:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 417,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4479:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 422,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 419,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "4501:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1023",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 562,
                      "src": "4501:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4501:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4479:41:13"
                },
                {
                  "assignments": [
                    424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 424,
                      "mutability": "mutable",
                      "name": "claimAmountWei",
                      "nameLocation": "4538:14:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "4530:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 423,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4530:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 425,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "4555:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$34_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 427,
                          "indexExpression": {
                            "id": 426,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "4564:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4555:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$34_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "4555:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 429,
                        "name": "claimerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "4587:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4555:46:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 431,
                      "name": "erc20Supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "4602:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4555:58:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4530:83:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 440,
                        "name": "claimAmountWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "4652:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 436,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4631:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4631:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4623:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 434,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4623:8:13",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4623:19:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4623:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4623:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "4623:44:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 444,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4690:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4690:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 446,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "4702:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 443,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "4682:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4682:30:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "EmitStatement",
                  "src": "4677:35:13"
                }
              ]
            },
            "functionSelector": "379607f5",
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "3980:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "3994:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "3986:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3986:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3985:19:13"
            },
            "returnParameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4012:0:13"
            },
            "scope": 477,
            "src": "3971:748:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2124
            ],
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "4846:130:13",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 464,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4873:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4873:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 463,
                      "name": "NftReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "4861:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4861:23:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "EmitStatement",
                  "src": "4856:28:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f6e455243373231526563656976656428616464726573732c616464726573732c75696e743235362c627974657329",
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4918:49:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            },
                            "value": "onERC721Received(address,address,uint256,bytes)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            }
                          ],
                          "id": 470,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4908:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4908:60:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4901:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 468,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "4901:6:13",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4901:68:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 462,
                  "id": 474,
                  "nodeType": "Return",
                  "src": "4894:75:13"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "4734:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4759:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "4751:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4751:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4777:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "4769:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4769:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 456,
                  "mutability": "mutable",
                  "name": "nftTokenId",
                  "nameLocation": "4791:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "4783:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4816:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "4803:17:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4803:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4750:71:13"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "4838:6:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4838:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4837:8:13"
            },
            "scope": 477,
            "src": "4725:251:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 478,
        "src": "262:4717:13",
        "usedErrors": []
      }
    ],
    "src": "32:4948:13"
  },
  "bytecode": "6080604052600080546001600160a01b0319163317815560025534801561002557600080fd5b50600080546001600160a01b03191633179055611ec6806100476000396000f3fe608060405260043610620000a15760003560e01c806378fe17e5116200006057806378fe17e514620001e15780637ff58ad914620002155780638da5cb5b146200022d578063d1bc6caa1462000268578063db006a7514620002a557600080fd5b806306fbd1f214620000e657806307bec66f146200011e578063150b7a021462000137578063379607f5146200017657806344c9af28146200019b57600080fd5b36620000e157604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874910160405180910390a1005b600080fd5b348015620000f357600080fd5b506200010b6200010536600462000eaa565b620002bc565b6040519081526020015b60405180910390f35b620001356200012f36600462000f43565b620004fd565b005b3480156200014457600080fd5b506200015c6200015636600462000f5d565b6200063f565b6040516001600160e01b0319909116815260200162000115565b3480156200018357600080fd5b50620001356200019536600462000f43565b6200069f565b348015620001a857600080fd5b50620001d2620001ba36600462000f43565b60009081526001602052604090206006015460ff1690565b60405162000115919062000ff8565b348015620001ee57600080fd5b50620002066200020036600462000f43565b620009c0565b60405162000115919062001071565b3480156200022257600080fd5b506200010b60025481565b3480156200023a57600080fd5b506000546200024f906001600160a01b031681565b6040516001600160a01b03909116815260200162000115565b3480156200027557600080fd5b506200024f6200028736600462000f43565b6000908152600160205260409020600201546001600160a01b031690565b62000135620002b636600462000f43565b62000a6d565b604051632142170760e11b815260009087906001600160a01b038216906342842e0e90620002f390339030908c9060040162001086565b600060405180830381600087803b1580156200030e57600080fd5b505af115801562000323573d6000803e3d6000fd5b505050506000868686336040516200033b9062000d1c565b6200034a9493929190620010aa565b604051809103906000f08015801562000367573d6000803e3d6000fd5b5090506040518060e001604052808981526020018a6001600160a01b03168152602001826001600160a01b03168152602001878152602001336001600160a01b0316815260200185815260200160006002811115620003ca57620003ca62000fe2565b905260028054600090815260016020818152604092839020855181558582015192810180546001600160a01b039485166001600160a01b03199182161790915593860151948101805495909316949093169390931790556060830151805191926200043e9260038501929091019062000d2a565b5060808201516004820180546001600160a01b0319166001600160a01b0390921691909117905560a0820151600582015560c082015160068201805460ff1916600183600281111562000495576200049562000fe2565b0217905550506002805491506001906000620004b283856200110b565b909155505060408051338152602081018390527f4356f3fd5c3bfc18a01590adcccb99d62f10c4096f5200887c659cc52043e254910160405180910390a19998505050505050505050565b600081815260016020526040902060050154341015620005745760405162461bcd60e51b815260206004820152602760248201527f53656e6465722073656e74206c657373207468616e20746865206275796f757460448201526610383934b1b29760c91b60648201526084015b60405180910390fd5b60008181526001602081905260409182902060068101805460ff191660021790559081015490549151632142170760e11b81526001600160a01b039091169182916342842e0e91620005cd913091339160040162001086565b600060405180830381600087803b158015620005e857600080fd5b505af1158015620005fd573d6000803e3d6000fd5b505060408051338152602081018690527ffbbd268bb69cf922e3840dc96a6702dc064baf4b2d9594b5a66a2fe428f3f2aa935001905060405180910390a15050565b6040513381526000907fcce71fc9cfcacc4ce8153bde254a735ae423cdc2b7852fb754f4de746ac3018f9060200160405180910390a1507f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f949350505050565b600260008281526001602052604090206006015460ff166002811115620006ca57620006ca62000fe2565b146200072d5760405162461bcd60e51b815260206004820152602b60248201527f4672616374696f6e616c697a6564204e465420686173206e6f74206265656e2060448201526a3137bab3b43a1037baba1760a91b60648201526084016200056b565b6000818152600160205260408082206002015490516370a0823160e01b81523360048201526001600160a01b03909116919082906370a082319060240160206040518083038186803b1580156200078357600080fd5b505afa15801562000798573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007be919062001126565b9050600081116200081c5760405162461bcd60e51b815260206004820152602160248201527f436c61696d657220646f6573206e6f7420686f6c6420616e7920746f6b656e736044820152601760f91b60648201526084016200056b565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906200084e9033903090869060040162001086565b602060405180830381600087803b1580156200086957600080fd5b505af11580156200087e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a4919062001140565b506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015620008e157600080fd5b505afa158015620008f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200091c919062001126565b6000858152600160205260408120600501549192509082906200094190859062001164565b6200094d919062001186565b604051909150339082156108fc029083906000818181858888f193505050501580156200097e573d6000803e3d6000fd5b5060408051338152602081018790527fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a91015b60405180910390a15050505050565b6000818152600160205260409020600301805460609190620009e290620011a9565b80601f016020809104026020016040519081016040528092919081815260200182805462000a1090620011a9565b801562000a615780601f1062000a355761010080835404028352916020019162000a61565b820191906000526020600020905b81548152906001019060200180831162000a4357829003601f168201915b50505050509050919050565b6000818152600160205260408082206002015490516370a0823160e01b81523360048201526001600160a01b03909116919082906370a082319060240160206040518083038186803b15801562000ac357600080fd5b505afa15801562000ad8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000afe919062001126565b90506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000b3c57600080fd5b505afa15801562000b51573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b77919062001126565b905080821462000bdd5760405162461bcd60e51b815260206004820152602a60248201527f52656465656d65657220646f6573206e6f7420686f6c642074686520656e746960448201526939329039bab838363c9760b11b60648201526084016200056b565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9062000c0f9033903090879060040162001086565b602060405180830381600087803b15801562000c2a57600080fd5b505af115801562000c3f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c65919062001140565b506000848152600160208190526040918290209081015490549151632142170760e11b81526001600160a01b039091169182916342842e0e9162000cb0913091339160040162001086565b600060405180830381600087803b15801562000ccb57600080fd5b505af115801562000ce0573d6000803e3d6000fd5b505060408051338152602081018990527f4896181ff8f4543cc00db9fe9b6fb7e6f032b7eb772c72ab1ec1b4d2e03b93699350019050620009b1565b610caa80620011e783390190565b82805462000d3890620011a9565b90600052602060002090601f01602090048101928262000d5c576000855562000da7565b82601f1062000d7757805160ff191683800117855562000da7565b8280016001018555821562000da7579182015b8281111562000da757825182559160200191906001019062000d8a565b5062000db592915062000db9565b5090565b5b8082111562000db5576000815560010162000dba565b80356001600160a01b038116811462000de857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111562000e215762000e2162000ded565b604051601f8501601f19908116603f0116810190828211818310171562000e4c5762000e4c62000ded565b8160405280935085815286868601111562000e6657600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011262000e9257600080fd5b62000ea38383356020850162000e03565b9392505050565b60008060008060008060c0878903121562000ec457600080fd5b62000ecf8762000dd0565b955060208701359450604087013567ffffffffffffffff8082111562000ef457600080fd5b62000f028a838b0162000e80565b9550606089013591508082111562000f1957600080fd5b5062000f2889828a0162000e80565b9350506080870135915060a087013590509295509295509295565b60006020828403121562000f5657600080fd5b5035919050565b6000806000806080858703121562000f7457600080fd5b62000f7f8562000dd0565b935062000f8f6020860162000dd0565b925060408501359150606085013567ffffffffffffffff81111562000fb357600080fd5b8501601f8101871362000fc557600080fd5b62000fd68782356020840162000e03565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b60208101600383106200101b57634e487b7160e01b600052602160045260246000fd5b91905290565b6000815180845260005b8181101562001049576020818501810151868301820152016200102b565b818111156200105c576000602083870101525b50601f01601f19169290920160200192915050565b60208152600062000ea3602083018462001021565b6001600160a01b039384168152919092166020820152604081019190915260600190565b608081526000620010bf608083018762001021565b8281036020840152620010d3818762001021565b604084019590955250506001600160a01b039190911660609091015292915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115620011215762001121620010f5565b500190565b6000602082840312156200113957600080fd5b5051919050565b6000602082840312156200115357600080fd5b8151801515811462000ea357600080fd5b6000816000190483118215151615620011815762001181620010f5565b500290565b600082620011a457634e487b7160e01b600052601260045260246000fd5b500490565b600181811c90821680620011be57607f821691505b60208210811415620011e057634e487b7160e01b600052602260045260246000fd5b5091905056fe60806040523480156200001157600080fd5b5060405162000caa38038062000caa8339810160408190526200003491620002dd565b8351849084906200004d9060039060208501906200016a565b508051620000639060049060208401906200016a565b5050506200007881836200008260201b60201c565b50505050620003d6565b6001600160a01b038216620000dd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f1919062000372565b90915550506001600160a01b038216600090815260208190526040812080548392906200012090849062000372565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001789062000399565b90600052602060002090601f0160209004810192826200019c5760008555620001e7565b82601f10620001b757805160ff1916838001178555620001e7565b82800160010185558215620001e7579182015b82811115620001e7578251825591602001919060010190620001ca565b50620001f5929150620001f9565b5090565b5b80821115620001f55760008155600101620001fa565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023857600080fd5b81516001600160401b038082111562000255576200025562000210565b604051601f8301601f19908116603f0116810190828211818310171562000280576200028062000210565b816040528381526020925086838588010111156200029d57600080fd5b600091505b83821015620002c15785820183015181830184015290820190620002a2565b83821115620002d35760008385830101525b9695505050505050565b60008060008060808587031215620002f457600080fd5b84516001600160401b03808211156200030c57600080fd5b6200031a8883890162000226565b955060208701519150808211156200033157600080fd5b50620003408782880162000226565b60408701516060880151919550935090506001600160a01b03811681146200036757600080fd5b939692955090935050565b600082198211156200039457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620003ae57607f821691505b60208210811415620003d057634e487b7160e01b600052602260045260246000fd5b50919050565b6108c480620003e66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220af78008638528eec26bd4cc85b97c678fda33ac96c30d301338538464b6d994b64736f6c63430008090033a2646970667358221220940c487934fbd90ad8ad17fc66ab459a53e67e2e9b1c6674fdb6b8cae58374c264736f6c63430008090033",
  "bytecodeSha1": "83df778d5266eef0f48880e32c3af0d30c252f01",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "FractionalizeNFT",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {
        "FractionalizeNFT.buyout": {
          "25": [
            3611,
            3655,
            true
          ]
        },
        "FractionalizeNFT.claim": {
          "26": [
            4107,
            4151,
            true
          ],
          "27": [
            4342,
            4360,
            true
          ]
        },
        "FractionalizeNFT.redeem": {
          "28": [
            3076,
            3106,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {
        "FractionalizeNFT.<fallback>": {
          "0": [
            1262,
            1270
          ]
        },
        "FractionalizeNFT.<receive>": {
          "1": [
            1175,
            1211
          ]
        },
        "FractionalizeNFT.buyout": {
          "9": [
            3603,
            3699
          ],
          "10": [
            3709,
            3752
          ],
          "11": [
            3829,
            3911
          ],
          "12": [
            3921,
            3958
          ]
        },
        "FractionalizeNFT.claim": {
          "15": [
            4099,
            4199
          ],
          "16": [
            4334,
            4398
          ],
          "17": [
            4408,
            4469
          ],
          "18": [
            4623,
            4667
          ],
          "19": [
            4677,
            4712
          ]
        },
        "FractionalizeNFT.fractionalizeNft": {
          "4": [
            2081,
            2140
          ],
          "5": [
            2241,
            2576
          ],
          "6": [
            2628,
            2645
          ],
          "7": [
            2655,
            2697
          ],
          "8": [
            2707,
            2723
          ]
        },
        "FractionalizeNFT.getERC20Address": {
          "3": [
            1367,
            1406
          ]
        },
        "FractionalizeNFT.getERC20Symbol": {
          "20": [
            1508,
            1546
          ]
        },
        "FractionalizeNFT.getState": {
          "2": [
            1634,
            1666
          ]
        },
        "FractionalizeNFT.onERC721Received": {
          "13": [
            4856,
            4884
          ],
          "14": [
            4894,
            4969
          ]
        },
        "FractionalizeNFT.redeem": {
          "21": [
            3068,
            3153
          ],
          "22": [
            3163,
            3225
          ],
          "23": [
            3302,
            3384
          ],
          "24": [
            3394,
            3430
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC20",
    "ERC20Factory",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Strings"
  ],
  "deployedBytecode": "608060405260043610620000a15760003560e01c806378fe17e5116200006057806378fe17e514620001e15780637ff58ad914620002155780638da5cb5b146200022d578063d1bc6caa1462000268578063db006a7514620002a557600080fd5b806306fbd1f214620000e657806307bec66f146200011e578063150b7a021462000137578063379607f5146200017657806344c9af28146200019b57600080fd5b36620000e157604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874910160405180910390a1005b600080fd5b348015620000f357600080fd5b506200010b6200010536600462000eaa565b620002bc565b6040519081526020015b60405180910390f35b620001356200012f36600462000f43565b620004fd565b005b3480156200014457600080fd5b506200015c6200015636600462000f5d565b6200063f565b6040516001600160e01b0319909116815260200162000115565b3480156200018357600080fd5b50620001356200019536600462000f43565b6200069f565b348015620001a857600080fd5b50620001d2620001ba36600462000f43565b60009081526001602052604090206006015460ff1690565b60405162000115919062000ff8565b348015620001ee57600080fd5b50620002066200020036600462000f43565b620009c0565b60405162000115919062001071565b3480156200022257600080fd5b506200010b60025481565b3480156200023a57600080fd5b506000546200024f906001600160a01b031681565b6040516001600160a01b03909116815260200162000115565b3480156200027557600080fd5b506200024f6200028736600462000f43565b6000908152600160205260409020600201546001600160a01b031690565b62000135620002b636600462000f43565b62000a6d565b604051632142170760e11b815260009087906001600160a01b038216906342842e0e90620002f390339030908c9060040162001086565b600060405180830381600087803b1580156200030e57600080fd5b505af115801562000323573d6000803e3d6000fd5b505050506000868686336040516200033b9062000d1c565b6200034a9493929190620010aa565b604051809103906000f08015801562000367573d6000803e3d6000fd5b5090506040518060e001604052808981526020018a6001600160a01b03168152602001826001600160a01b03168152602001878152602001336001600160a01b0316815260200185815260200160006002811115620003ca57620003ca62000fe2565b905260028054600090815260016020818152604092839020855181558582015192810180546001600160a01b039485166001600160a01b03199182161790915593860151948101805495909316949093169390931790556060830151805191926200043e9260038501929091019062000d2a565b5060808201516004820180546001600160a01b0319166001600160a01b0390921691909117905560a0820151600582015560c082015160068201805460ff1916600183600281111562000495576200049562000fe2565b0217905550506002805491506001906000620004b283856200110b565b909155505060408051338152602081018390527f4356f3fd5c3bfc18a01590adcccb99d62f10c4096f5200887c659cc52043e254910160405180910390a19998505050505050505050565b600081815260016020526040902060050154341015620005745760405162461bcd60e51b815260206004820152602760248201527f53656e6465722073656e74206c657373207468616e20746865206275796f757460448201526610383934b1b29760c91b60648201526084015b60405180910390fd5b60008181526001602081905260409182902060068101805460ff191660021790559081015490549151632142170760e11b81526001600160a01b039091169182916342842e0e91620005cd913091339160040162001086565b600060405180830381600087803b158015620005e857600080fd5b505af1158015620005fd573d6000803e3d6000fd5b505060408051338152602081018690527ffbbd268bb69cf922e3840dc96a6702dc064baf4b2d9594b5a66a2fe428f3f2aa935001905060405180910390a15050565b6040513381526000907fcce71fc9cfcacc4ce8153bde254a735ae423cdc2b7852fb754f4de746ac3018f9060200160405180910390a1507f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f949350505050565b600260008281526001602052604090206006015460ff166002811115620006ca57620006ca62000fe2565b146200072d5760405162461bcd60e51b815260206004820152602b60248201527f4672616374696f6e616c697a6564204e465420686173206e6f74206265656e2060448201526a3137bab3b43a1037baba1760a91b60648201526084016200056b565b6000818152600160205260408082206002015490516370a0823160e01b81523360048201526001600160a01b03909116919082906370a082319060240160206040518083038186803b1580156200078357600080fd5b505afa15801562000798573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007be919062001126565b9050600081116200081c5760405162461bcd60e51b815260206004820152602160248201527f436c61696d657220646f6573206e6f7420686f6c6420616e7920746f6b656e736044820152601760f91b60648201526084016200056b565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906200084e9033903090869060040162001086565b602060405180830381600087803b1580156200086957600080fd5b505af11580156200087e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a4919062001140565b506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015620008e157600080fd5b505afa158015620008f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200091c919062001126565b6000858152600160205260408120600501549192509082906200094190859062001164565b6200094d919062001186565b604051909150339082156108fc029083906000818181858888f193505050501580156200097e573d6000803e3d6000fd5b5060408051338152602081018790527fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a91015b60405180910390a15050505050565b6000818152600160205260409020600301805460609190620009e290620011a9565b80601f016020809104026020016040519081016040528092919081815260200182805462000a1090620011a9565b801562000a615780601f1062000a355761010080835404028352916020019162000a61565b820191906000526020600020905b81548152906001019060200180831162000a4357829003601f168201915b50505050509050919050565b6000818152600160205260408082206002015490516370a0823160e01b81523360048201526001600160a01b03909116919082906370a082319060240160206040518083038186803b15801562000ac357600080fd5b505afa15801562000ad8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000afe919062001126565b90506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000b3c57600080fd5b505afa15801562000b51573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b77919062001126565b905080821462000bdd5760405162461bcd60e51b815260206004820152602a60248201527f52656465656d65657220646f6573206e6f7420686f6c642074686520656e746960448201526939329039bab838363c9760b11b60648201526084016200056b565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9062000c0f9033903090879060040162001086565b602060405180830381600087803b15801562000c2a57600080fd5b505af115801562000c3f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c65919062001140565b506000848152600160208190526040918290209081015490549151632142170760e11b81526001600160a01b039091169182916342842e0e9162000cb0913091339160040162001086565b600060405180830381600087803b15801562000ccb57600080fd5b505af115801562000ce0573d6000803e3d6000fd5b505060408051338152602081018990527f4896181ff8f4543cc00db9fe9b6fb7e6f032b7eb772c72ab1ec1b4d2e03b93699350019050620009b1565b610caa80620011e783390190565b82805462000d3890620011a9565b90600052602060002090601f01602090048101928262000d5c576000855562000da7565b82601f1062000d7757805160ff191683800117855562000da7565b8280016001018555821562000da7579182015b8281111562000da757825182559160200191906001019062000d8a565b5062000db592915062000db9565b5090565b5b8082111562000db5576000815560010162000dba565b80356001600160a01b038116811462000de857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111562000e215762000e2162000ded565b604051601f8501601f19908116603f0116810190828211818310171562000e4c5762000e4c62000ded565b8160405280935085815286868601111562000e6657600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011262000e9257600080fd5b62000ea38383356020850162000e03565b9392505050565b60008060008060008060c0878903121562000ec457600080fd5b62000ecf8762000dd0565b955060208701359450604087013567ffffffffffffffff8082111562000ef457600080fd5b62000f028a838b0162000e80565b9550606089013591508082111562000f1957600080fd5b5062000f2889828a0162000e80565b9350506080870135915060a087013590509295509295509295565b60006020828403121562000f5657600080fd5b5035919050565b6000806000806080858703121562000f7457600080fd5b62000f7f8562000dd0565b935062000f8f6020860162000dd0565b925060408501359150606085013567ffffffffffffffff81111562000fb357600080fd5b8501601f8101871362000fc557600080fd5b62000fd68782356020840162000e03565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b60208101600383106200101b57634e487b7160e01b600052602160045260246000fd5b91905290565b6000815180845260005b8181101562001049576020818501810151868301820152016200102b565b818111156200105c576000602083870101525b50601f01601f19169290920160200192915050565b60208152600062000ea3602083018462001021565b6001600160a01b039384168152919092166020820152604081019190915260600190565b608081526000620010bf608083018762001021565b8281036020840152620010d3818762001021565b604084019590955250506001600160a01b039190911660609091015292915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115620011215762001121620010f5565b500190565b6000602082840312156200113957600080fd5b5051919050565b6000602082840312156200115357600080fd5b8151801515811462000ea357600080fd5b6000816000190483118215151615620011815762001181620010f5565b500290565b600082620011a457634e487b7160e01b600052601260045260246000fd5b500490565b600181811c90821680620011be57607f821691505b60208210811415620011e057634e487b7160e01b600052602260045260246000fd5b5091905056fe60806040523480156200001157600080fd5b5060405162000caa38038062000caa8339810160408190526200003491620002dd565b8351849084906200004d9060039060208501906200016a565b508051620000639060049060208401906200016a565b5050506200007881836200008260201b60201c565b50505050620003d6565b6001600160a01b038216620000dd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f1919062000372565b90915550506001600160a01b038216600090815260208190526040812080548392906200012090849062000372565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001789062000399565b90600052602060002090601f0160209004810192826200019c5760008555620001e7565b82601f10620001b757805160ff1916838001178555620001e7565b82800160010185558215620001e7579182015b82811115620001e7578251825591602001919060010190620001ca565b50620001f5929150620001f9565b5090565b5b80821115620001f55760008155600101620001fa565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023857600080fd5b81516001600160401b038082111562000255576200025562000210565b604051601f8301601f19908116603f0116810190828211818310171562000280576200028062000210565b816040528381526020925086838588010111156200029d57600080fd5b600091505b83821015620002c15785820183015181830184015290820190620002a2565b83821115620002d35760008385830101525b9695505050505050565b60008060008060808587031215620002f457600080fd5b84516001600160401b03808211156200030c57600080fd5b6200031a8883890162000226565b955060208701519150808211156200033157600080fd5b50620003408782880162000226565b60408701516060880151919550935090506001600160a01b03811681146200036757600080fd5b939692955090935050565b600082198211156200039457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620003ae57607f821691505b60208210811415620003d057634e487b7160e01b600052602260045260246000fd5b50919050565b6108c480620003e66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220af78008638528eec26bd4cc85b97c678fda33ac96c30d301338538464b6d994b64736f6c63430008090033a2646970667358221220940c487934fbd90ad8ad17fc66ab459a53e67e2e9b1c6674fdb6b8cae58374c264736f6c63430008090033",
  "deployedSourceMap": "262:4717:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1262:8;;;262:4717;;;;;;;;;;;;;;;;;;;;;;;;;;1262:8;;;262:4717;;;;1180:31;;;1189:10;188:51:14;;1201:9:13;270:2:14;255:18;;248:34;1180:31:13;;161:18:14;1180:31:13;;;;;;;262:4717;;1262:8;;;1679:1051;;;;;;;;;;-1:-1:-1;1679:1051:13;;;;;:::i;:::-;;:::i;:::-;;;2442:25:14;;;2430:2;2415:18;1679:1051:13;;;;;;;;3443:522;;;;;;:::i;:::-;;:::i;:::-;;4725:251;;;;;;;;;;-1:-1:-1;4725:251:13;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3497:33:14;;;3479:52;;3467:2;3452:18;4725:251:13;3335:202:14;3971:748:13;;;;;;;;;;-1:-1:-1;3971:748:13;;;;;:::i;:::-;;:::i;1559:114::-;;;;;;;;;;-1:-1:-1;1559:114:13;;;;;:::i;:::-;1617:5;1641:19;;;:8;:19;;;;;:25;;;;;;1559:114;;;;;;;;:::i;1419:134::-;;;;;;;;;;-1:-1:-1;1419:134:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;412:31::-;;;;;;;;;;;;;;;;314:33;;;;;;;;;;-1:-1:-1;314:33:13;;;;-1:-1:-1;;;;;314:33:13;;;;;;-1:-1:-1;;;;;4881:32:14;;;4863:51;;4851:2;4836:18;314:33:13;4717:203:14;1283:130:13;;;;;;;;;;-1:-1:-1;1283:130:13;;;;;:::i;:::-;1348:7;1374:19;;;:8;:19;;;;;:32;;;-1:-1:-1;;;;;1374:32:13;;1283:130;2736:701;;;;;;:::i;:::-;;:::i;1679:1051::-;2081:59;;-1:-1:-1;;;2081:59:13;;2013:7;;2052:18;;-1:-1:-1;;;;;2081:20:13;;;;;:59;;2102:10;;2122:4;;2129:10;;2081:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:11;2183:9;2194:11;2207;2220:10;2164:67;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2150:81;;2266:310;;;;;;;;2310:10;2266:310;;;;2349:18;-1:-1:-1;;;;;2266:310:13;;;;;2403:5;-1:-1:-1;;;;;2266:310:13;;;;;2436:11;2266:310;;;;2484:10;-1:-1:-1;;;;;2266:310:13;;;;;2522:11;2266:310;;;;2554:20;2266:310;;;;;;;;:::i;:::-;;;2250:12;;;2241:22;;;;:8;:22;;;;;;;;;:335;;;;;;;;;;;;;-1:-1:-1;;;;;2241:335:13;;;-1:-1:-1;;;;;;2241:335:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;:335;;;;;;;;;;;:::i;:::-;-1:-1:-1;2241:335:13;;;;;;;;;-1:-1:-1;;;;;;2241:335:13;-1:-1:-1;;;;;2241:335:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2241:335:13;-1:-1:-1;2241:335:13;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;2606:12:13;;;;-1:-1:-1;2644:1:13;;2586:17;2628;2644:1;2606:12;2628:17;:::i;:::-;;;;-1:-1:-1;;2660:37:13;;;2675:10;188:51:14;;270:2;255:18;;248:34;;;2660:37:13;;161:18:14;2660:37:13;;;;;;;2714:9;1679:1051;-1:-1:-1;;;;;;;;;1679:1051:13:o;3443:522::-;3624:19;;;;:8;:19;;;;;:31;;;3611:9;:44;;3603:96;;;;-1:-1:-1;;;3603:96:13;;6330:2:14;3603:96:13;;;6312:21:14;6369:2;6349:18;;;6342:30;6408:34;6388:18;;;6381:62;-1:-1:-1;;;6459:18:14;;;6452:37;6506:19;;3603:96:13;;;;;;;;;3709:19;;;;:8;:19;;;;;;;;;:25;;;:43;;-1:-1:-1;;3709:43:13;3737:15;3709:43;;;3785:33;;;;3880:30;;3829:82;;-1:-1:-1;;;3829:82:13;;-1:-1:-1;;;;;3785:33:13;;;;;;3829:23;;:82;;3861:4;;3868:10;;3829:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3926:32:13;;;3936:10;188:51:14;;270:2;255:18;;248:34;;;3926:32:13;;-1:-1:-1;161:18:14;;-1:-1:-1;3926:32:13;;;;;;;3493:472;3443:522;:::o;4725:251::-;4861:23;;4873:10;4863:51:14;;4838:6:13;;4861:23;;4851:2:14;4836:18;4861:23:13;;;;;;;-1:-1:-1;4908:60:13;4725:251;;;;;;:::o;3971:748::-;4136:15;4107:19;;;;:8;:19;;;;;:25;;;;;:44;;;;;;;;:::i;:::-;;4099:100;;;;-1:-1:-1;;;4099:100:13;;6738:2:14;4099:100:13;;;6720:21:14;6777:2;6757:18;;;6750:30;6816:34;6796:18;;;6789:62;-1:-1:-1;;;6867:18:14;;;6860:41;6918:19;;4099:100:13;6536:407:14;4099:100:13;4209:11;4229:19;;;:8;:19;;;;;;:32;;;4297:27;;-1:-1:-1;;;4297:27:13;;4313:10;4297:27;;;4863:51:14;-1:-1:-1;;;;;4229:32:13;;;;4209:11;4229:32;;4297:15;;4836:18:14;;4297:27:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4272:52;;4359:1;4342:14;:18;4334:64;;;;-1:-1:-1;;;4334:64:13;;7339:2:14;4334:64:13;;;7321:21:14;7378:2;7358:18;;;7351:30;7417:34;7397:18;;;7390:62;-1:-1:-1;;;7468:18:14;;;7461:31;7509:19;;4334:64:13;7137:397:14;4334:64:13;4408:61;;-1:-1:-1;;;4408:61:13;;-1:-1:-1;;;;;4408:18:13;;;;;:61;;4427:10;;4447:4;;4454:14;;4408:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4479:19;4501:5;-1:-1:-1;;;;;4501:17:13;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4530:22;4555:19;;;:8;:19;;;;;:31;;;4479:41;;-1:-1:-1;4530:22:13;4479:41;;4555:46;;4587:14;;4555:46;:::i;:::-;:58;;;;:::i;:::-;4623:44;;4530:83;;-1:-1:-1;4631:10:13;;4623:44;;;;;4530:83;;4623:44;;;;4530:83;4631:10;4623:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4682:30:13;;;4690:10;188:51:14;;270:2;255:18;;248:34;;;4682:30:13;;161:18:14;4682:30:13;;;;;;;;4012:707;;;;3971:748;:::o;1419:134::-;1515:19;;;;:8;:19;;;;;:31;;1508:38;;1483:13;;1515:31;1508:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1419:134;;;:::o;2736:701::-;2891:11;2911:19;;;:8;:19;;;;;;:32;;;2980:27;;-1:-1:-1;;;2980:27:13;;2996:10;2980:27;;;4863:51:14;-1:-1:-1;;;;;2911:32:13;;;;2891:11;2911:32;;2980:15;;4836:18:14;;2980:27:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2954:53;;3017:19;3039:5;-1:-1:-1;;;;;3039:17:13;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3017:41;;3095:11;3076:15;:30;3068:85;;;;-1:-1:-1;;;3068:85:13;;8803:2:14;3068:85:13;;;8785:21:14;8842:2;8822:18;;;8815:30;8881:34;8861:18;;;8854:62;-1:-1:-1;;;8932:18:14;;;8925:40;8982:19;;3068:85:13;8601:406:14;3068:85:13;3163:62;;-1:-1:-1;;;3163:62:13;;-1:-1:-1;;;;;3163:18:13;;;;;:62;;3182:10;;3202:4;;3209:15;;3163:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3235:13:13;3258:19;;;:8;:19;;;;;;;;;:33;;;;3353:30;;3302:82;;-1:-1:-1;;;3302:82:13;;-1:-1:-1;;;;;3258:33:13;;;;;;3302:23;;:82;;3334:4;;3341:10;;3302:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3399:31:13;;;3408:10;188:51:14;;270:2;255:18;;248:34;;;3399:31:13;;-1:-1:-1;161:18:14;;-1:-1:-1;3399:31:13;14:274:14;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;293:173:14;361:20;;-1:-1:-1;;;;;410:31:14;;400:42;;390:70;;456:1;453;446:12;390:70;293:173;;;:::o;471:127::-;532:10;527:3;523:20;520:1;513:31;563:4;560:1;553:15;587:4;584:1;577:15;603:632;668:5;698:18;739:2;731:6;728:14;725:40;;;745:18;;:::i;:::-;820:2;814:9;788:2;874:15;;-1:-1:-1;;870:24:14;;;896:2;866:33;862:42;850:55;;;920:18;;;940:22;;;917:46;914:72;;;966:18;;:::i;:::-;1006:10;1002:2;995:22;1035:6;1026:15;;1065:6;1057;1050:22;1105:3;1096:6;1091:3;1087:16;1084:25;1081:45;;;1122:1;1119;1112:12;1081:45;1172:6;1167:3;1160:4;1152:6;1148:17;1135:44;1227:1;1220:4;1211:6;1203;1199:19;1195:30;1188:41;;;;603:632;;;;;:::o;1240:222::-;1283:5;1336:3;1329:4;1321:6;1317:17;1313:27;1303:55;;1354:1;1351;1344:12;1303:55;1376:80;1452:3;1443:6;1430:20;1423:4;1415:6;1411:17;1376:80;:::i;:::-;1367:89;1240:222;-1:-1:-1;;;1240:222:14:o;1467:824::-;1591:6;1599;1607;1615;1623;1631;1684:3;1672:9;1663:7;1659:23;1655:33;1652:53;;;1701:1;1698;1691:12;1652:53;1724:29;1743:9;1724:29;:::i;:::-;1714:39;;1800:2;1789:9;1785:18;1772:32;1762:42;;1855:2;1844:9;1840:18;1827:32;1878:18;1919:2;1911:6;1908:14;1905:34;;;1935:1;1932;1925:12;1905:34;1958:50;2000:7;1991:6;1980:9;1976:22;1958:50;:::i;:::-;1948:60;;2061:2;2050:9;2046:18;2033:32;2017:48;;2090:2;2080:8;2077:16;2074:36;;;2106:1;2103;2096:12;2074:36;;2129:52;2173:7;2162:8;2151:9;2147:24;2129:52;:::i;:::-;2119:62;;;2228:3;2217:9;2213:19;2200:33;2190:43;;2280:3;2269:9;2265:19;2252:33;2242:43;;1467:824;;;;;;;;:::o;2478:180::-;2537:6;2590:2;2578:9;2569:7;2565:23;2561:32;2558:52;;;2606:1;2603;2596:12;2558:52;-1:-1:-1;2629:23:14;;2478:180;-1:-1:-1;2478:180:14:o;2663:667::-;2758:6;2766;2774;2782;2835:3;2823:9;2814:7;2810:23;2806:33;2803:53;;;2852:1;2849;2842:12;2803:53;2875:29;2894:9;2875:29;:::i;:::-;2865:39;;2923:38;2957:2;2946:9;2942:18;2923:38;:::i;:::-;2913:48;;3008:2;2997:9;2993:18;2980:32;2970:42;;3063:2;3052:9;3048:18;3035:32;3090:18;3082:6;3079:30;3076:50;;;3122:1;3119;3112:12;3076:50;3145:22;;3198:4;3190:13;;3186:27;-1:-1:-1;3176:55:14;;3227:1;3224;3217:12;3176:55;3250:74;3316:7;3311:2;3298:16;3293:2;3289;3285:11;3250:74;:::i;:::-;3240:84;;;2663:667;;;;;;;:::o;3542:127::-;3603:10;3598:3;3594:20;3591:1;3584:31;3634:4;3631:1;3624:15;3658:4;3655:1;3648:15;3674:336;3814:2;3799:18;;3847:1;3836:13;;3826:144;;3892:10;3887:3;3883:20;3880:1;3873:31;3927:4;3924:1;3917:15;3955:4;3952:1;3945:15;3826:144;3979:25;;;3674:336;:::o;4015:472::-;4057:3;4095:5;4089:12;4122:6;4117:3;4110:19;4147:1;4157:162;4171:6;4168:1;4165:13;4157:162;;;4233:4;4289:13;;;4285:22;;4279:29;4261:11;;;4257:20;;4250:59;4186:12;4157:162;;;4337:6;4334:1;4331:13;4328:87;;;4403:1;4396:4;4387:6;4382:3;4378:16;4374:27;4367:38;4328:87;-1:-1:-1;4469:2:14;4448:15;-1:-1:-1;;4444:29:14;4435:39;;;;4476:4;4431:50;;4015:472;-1:-1:-1;;4015:472:14:o;4492:220::-;4641:2;4630:9;4623:21;4604:4;4661:45;4702:2;4691:9;4687:18;4679:6;4661:45;:::i;4925:375::-;-1:-1:-1;;;;;5183:15:14;;;5165:34;;5235:15;;;;5230:2;5215:18;;5208:43;5282:2;5267:18;;5260:34;;;;5115:2;5100:18;;4925:375::o;5305:553::-;5558:3;5547:9;5540:22;5521:4;5585:46;5626:3;5615:9;5611:19;5603:6;5585:46;:::i;:::-;5679:9;5671:6;5667:22;5662:2;5651:9;5647:18;5640:50;5707:33;5733:6;5725;5707:33;:::i;:::-;5771:2;5756:18;;5749:34;;;;-1:-1:-1;;;;;;;5819:32:14;;;;5814:2;5799:18;;;5792:60;5699:41;5305:553;-1:-1:-1;;5305:553:14:o;5863:127::-;5924:10;5919:3;5915:20;5912:1;5905:31;5955:4;5952:1;5945:15;5979:4;5976:1;5969:15;5995:128;6035:3;6066:1;6062:6;6059:1;6056:13;6053:39;;;6072:18;;:::i;:::-;-1:-1:-1;6108:9:14;;5995:128::o;6948:184::-;7018:6;7071:2;7059:9;7050:7;7046:23;7042:32;7039:52;;;7087:1;7084;7077:12;7039:52;-1:-1:-1;7110:16:14;;6948:184;-1:-1:-1;6948:184:14:o;7539:277::-;7606:6;7659:2;7647:9;7638:7;7634:23;7630:32;7627:52;;;7675:1;7672;7665:12;7627:52;7707:9;7701:16;7760:5;7753:13;7746:21;7739:5;7736:32;7726:60;;7782:1;7779;7772:12;7821:168;7861:7;7927:1;7923;7919:6;7915:14;7912:1;7909:21;7904:1;7897:9;7890:17;7886:45;7883:71;;;7934:18;;:::i;:::-;-1:-1:-1;7974:9:14;;7821:168::o;7994:217::-;8034:1;8060;8050:132;;8104:10;8099:3;8095:20;8092:1;8085:31;8139:4;8136:1;8129:15;8167:4;8164:1;8157:15;8050:132;-1:-1:-1;8196:9:14;;7994:217::o;8216:380::-;8295:1;8291:12;;;;8338;;;8359:61;;8413:4;8405:6;8401:17;8391:27;;8359:61;8466:2;8458:6;8455:14;8435:18;8432:38;8429:161;;;8512:10;8507:3;8503:20;8500:1;8493:31;8547:4;8544:1;8537:15;8575:4;8572:1;8565:15;8429:161;;8216:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    262,
    4979
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0xA1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78FE17E5 GT PUSH3 0x60 JUMPI DUP1 PUSH4 0x78FE17E5 EQ PUSH3 0x1E1 JUMPI DUP1 PUSH4 0x7FF58AD9 EQ PUSH3 0x215 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x22D JUMPI DUP1 PUSH4 0xD1BC6CAA EQ PUSH3 0x268 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH3 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FBD1F2 EQ PUSH3 0xE6 JUMPI DUP1 PUSH4 0x7BEC66F EQ PUSH3 0x11E JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH3 0x137 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH3 0x176 JUMPI DUP1 PUSH4 0x44C9AF28 EQ PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH3 0xE1 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x10B PUSH3 0x105 CALLDATASIZE PUSH1 0x4 PUSH3 0xEAA JUMP JUMPDEST PUSH3 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x135 PUSH3 0x12F CALLDATASIZE PUSH1 0x4 PUSH3 0xF43 JUMP JUMPDEST PUSH3 0x4FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x15C PUSH3 0x156 CALLDATASIZE PUSH1 0x4 PUSH3 0xF5D JUMP JUMPDEST PUSH3 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x115 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x135 PUSH3 0x195 CALLDATASIZE PUSH1 0x4 PUSH3 0xF43 JUMP JUMPDEST PUSH3 0x69F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1D2 PUSH3 0x1BA CALLDATASIZE PUSH1 0x4 PUSH3 0xF43 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x115 SWAP2 SWAP1 PUSH3 0xFF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x206 PUSH3 0x200 CALLDATASIZE PUSH1 0x4 PUSH3 0xF43 JUMP JUMPDEST PUSH3 0x9C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x115 SWAP2 SWAP1 PUSH3 0x1071 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x10B PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH3 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x115 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x24F PUSH3 0x287 CALLDATASIZE PUSH1 0x4 PUSH3 0xF43 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x135 PUSH3 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH3 0xF43 JUMP JUMPDEST PUSH3 0xA6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH3 0x2F3 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH3 0x1086 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x323 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP7 DUP7 DUP7 CALLER PUSH1 0x40 MLOAD PUSH3 0x33B SWAP1 PUSH3 0xD1C JUMP JUMPDEST PUSH3 0x34A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x3CA JUMPI PUSH3 0x3CA PUSH3 0xFE2 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE DUP6 DUP3 ADD MLOAD SWAP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE SWAP4 DUP7 ADD MLOAD SWAP5 DUP2 ADD DUP1 SLOAD SWAP6 SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH3 0x43E SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xD2A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x495 JUMPI PUSH3 0x495 PUSH3 0xFE2 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0x0 PUSH3 0x4B2 DUP4 DUP6 PUSH3 0x110B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4356F3FD5C3BFC18A01590ADCCCB99D62F10C4096F5200887C659CC52043E254 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD CALLVALUE LT ISZERO PUSH3 0x574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E6465722073656E74206C657373207468616E20746865206275796F7574 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x10383934B1B297 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE SWAP1 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 SWAP2 PUSH4 0x42842E0E SWAP2 PUSH3 0x5CD SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH3 0x1086 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x5FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0xFBBD268BB69CF922E3840DC96A6702DC064BAF4B2D9594B5A66A2FE428F3F2AA SWAP4 POP ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH32 0xCCE71FC9CFCACC4CE8153BDE254A735AE423CDC2B7852FB754F4DE746AC3018F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH32 0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x6CA JUMPI PUSH3 0x6CA PUSH3 0xFE2 JUMP JUMPDEST EQ PUSH3 0x72D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4672616374696F6E616C697A6564204E465420686173206E6F74206265656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3137BAB3B43A1037BABA17 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x56B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x798 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7BE SWAP2 SWAP1 PUSH3 0x1126 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH3 0x81C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D657220646F6573206E6F7420686F6C6420616E7920746F6B656E73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0x84E SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH3 0x1086 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x869 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x87E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x8A4 SWAP2 SWAP1 PUSH3 0x1140 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x8F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x91C SWAP2 SWAP1 PUSH3 0x1126 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 PUSH3 0x941 SWAP1 DUP6 SWAP1 PUSH3 0x1164 JUMP JUMPDEST PUSH3 0x94D SWAP2 SWAP1 PUSH3 0x1186 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0x97E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH3 0x9E2 SWAP1 PUSH3 0x11A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xA10 SWAP1 PUSH3 0x11A9 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xA61 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xA35 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xA61 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xA43 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xAD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xAFE SWAP2 SWAP1 PUSH3 0x1126 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xB3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xB51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xB77 SWAP2 SWAP1 PUSH3 0x1126 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH3 0xBDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656465656D65657220646F6573206E6F7420686F6C642074686520656E7469 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39329039BAB838363C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0xC0F SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH3 0x1086 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xC2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xC3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC65 SWAP2 SWAP1 PUSH3 0x1140 JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 SWAP2 PUSH4 0x42842E0E SWAP2 PUSH3 0xCB0 SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH3 0x1086 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xCCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xCE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH32 0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369 SWAP4 POP ADD SWAP1 POP PUSH3 0x9B1 JUMP JUMPDEST PUSH2 0xCAA DUP1 PUSH3 0x11E7 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xD38 SWAP1 PUSH3 0x11A9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xD5C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDA7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xD77 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDA7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDA7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDA7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD8A JUMP JUMPDEST POP PUSH3 0xDB5 SWAP3 SWAP2 POP PUSH3 0xDB9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xDB5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xDBA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xDE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH3 0xE21 JUMPI PUSH3 0xE21 PUSH3 0xDED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xE4C JUMPI PUSH3 0xE4C PUSH3 0xDED JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH3 0xE66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xEA3 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH3 0xE03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0xEC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xECF DUP8 PUSH3 0xDD0 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0xEF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF02 DUP11 DUP4 DUP12 ADD PUSH3 0xE80 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0xF19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xF28 DUP10 DUP3 DUP11 ADD PUSH3 0xE80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0xF74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF7F DUP6 PUSH3 0xDD0 JUMP JUMPDEST SWAP4 POP PUSH3 0xF8F PUSH1 0x20 DUP7 ADD PUSH3 0xDD0 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xFB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH3 0xFC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xFD6 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH3 0xE03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH3 0x101B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1049 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x102B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x105C JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0xEA3 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1021 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH3 0x10BF PUSH1 0x80 DUP4 ADD DUP8 PUSH3 0x1021 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x10D3 DUP2 DUP8 PUSH3 0x1021 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x1121 JUMPI PUSH3 0x1121 PUSH3 0x10F5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x1181 JUMPI PUSH3 0x1181 PUSH3 0x10F5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x11A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x11BE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x11E0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCAA CODESIZE SUB DUP1 PUSH3 0xCAA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2DD JUMP JUMPDEST DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x16A JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x16A JUMP JUMPDEST POP POP POP PUSH3 0x78 DUP2 DUP4 PUSH3 0x82 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xF1 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x120 SWAP1 DUP5 SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x178 SWAP1 PUSH3 0x399 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x19C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1E7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1B7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1E7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1E7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1E7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1CA JUMP JUMPDEST POP PUSH3 0x1F5 SWAP3 SWAP2 POP PUSH3 0x1F9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1F5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x255 JUMPI PUSH3 0x255 PUSH3 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x280 JUMPI PUSH3 0x280 PUSH3 0x210 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2C1 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2A2 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x2D3 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x31A DUP9 DUP4 DUP10 ADD PUSH3 0x226 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x340 DUP8 DUP3 DUP9 ADD PUSH3 0x226 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x394 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x3E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x889 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF PUSH25 0x8638528EEC26BD4CC85B97C678FDA33AC96C30D301338538 CHAINID 0x4B PUSH14 0x994B64736F6C63430008090033A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xC BASEFEE PUSH26 0x34FBD90AD8AD17FC66AB459A53E67E2E9B1C6674FDB6B8CAE583 PUSH21 0xC264736F6C63430008090033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        262,
        4979
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "LT",
      "path": "13"
    },
    "9": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xA1"
    },
    "13": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "14": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "16": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "17": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "19": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "SHR",
      "path": "13"
    },
    "20": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "DUP1",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x78FE17E5"
    },
    "26": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "GT",
      "path": "13"
    },
    "27": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x60"
    },
    "31": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x78FE17E5"
    },
    "38": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "EQ",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1E1"
    },
    "43": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "DUP1",
      "path": "13"
    },
    "45": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7FF58AD9"
    },
    "50": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "EQ",
      "path": "13"
    },
    "51": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x215"
    },
    "55": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "56": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "DUP1",
      "path": "13"
    },
    "57": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8DA5CB5B"
    },
    "62": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "EQ",
      "path": "13"
    },
    "63": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x22D"
    },
    "67": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "68": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "DUP1",
      "path": "13"
    },
    "69": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD1BC6CAA"
    },
    "74": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "EQ",
      "path": "13"
    },
    "75": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x268"
    },
    "79": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "80": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "DUP1",
      "path": "13"
    },
    "81": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDB006A75"
    },
    "86": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "EQ",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2A5"
    },
    "91": {
      "fn": null,
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "92": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1262,
        1270
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 0,
      "value": "0x0"
    },
    "94": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1262,
        1270
      ],
      "op": "DUP1",
      "path": "13"
    },
    "95": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1262,
        1270
      ],
      "op": "REVERT",
      "path": "13"
    },
    "96": {
      "offset": [
        262,
        4979
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "97": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "DUP1",
      "path": "13"
    },
    "98": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6FBD1F2"
    },
    "103": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "EQ",
      "path": "13"
    },
    "104": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xE6"
    },
    "108": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "109": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "DUP1",
      "path": "13"
    },
    "110": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7BEC66F"
    },
    "115": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "EQ",
      "path": "13"
    },
    "116": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11E"
    },
    "120": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "121": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "DUP1",
      "path": "13"
    },
    "122": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x150B7A02"
    },
    "127": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "EQ",
      "path": "13"
    },
    "128": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x137"
    },
    "132": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "133": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "DUP1",
      "path": "13"
    },
    "134": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x379607F5"
    },
    "139": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "EQ",
      "path": "13"
    },
    "140": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x176"
    },
    "144": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "145": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "DUP1",
      "path": "13"
    },
    "146": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x44C9AF28"
    },
    "151": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "EQ",
      "path": "13"
    },
    "152": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x19B"
    },
    "156": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "157": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1262,
        1270
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "159": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1262,
        1270
      ],
      "op": "DUP1",
      "path": "13"
    },
    "160": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1262,
        1270
      ],
      "op": "REVERT",
      "path": "13"
    },
    "161": {
      "offset": [
        262,
        4979
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "162": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "163": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xE1"
    },
    "167": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        262,
        4979
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "168": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 1,
      "value": "0x40"
    },
    "170": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "DUP1",
      "path": "13"
    },
    "171": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "172": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1189,
        1199
      ],
      "op": "CALLER",
      "path": "13"
    },
    "173": {
      "op": "DUP2"
    },
    "174": {
      "op": "MSTORE"
    },
    "175": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1201,
        1210
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "178": {
      "op": "DUP3"
    },
    "179": {
      "op": "ADD"
    },
    "180": {
      "op": "MSTORE"
    },
    "181": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "214": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "215": {
      "op": "ADD"
    },
    "216": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "218": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "219": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "DUP1",
      "path": "13"
    },
    "220": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "221": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "SUB",
      "path": "13"
    },
    "222": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "223": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        1180,
        1211
      ],
      "op": "LOG1",
      "path": "13"
    },
    "224": {
      "offset": [
        262,
        4979
      ],
      "op": "STOP",
      "path": "13"
    },
    "225": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        262,
        4979
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "226": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1262,
        1270
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "228": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1262,
        1270
      ],
      "op": "DUP1",
      "path": "13"
    },
    "229": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        1262,
        1270
      ],
      "op": "REVERT",
      "path": "13"
    },
    "230": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "231": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "232": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "DUP1",
      "path": "13"
    },
    "233": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "234": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF3"
    },
    "238": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "239": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "241": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "DUP1",
      "path": "13"
    },
    "242": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "REVERT",
      "path": "13"
    },
    "243": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "244": {
      "op": "POP"
    },
    "245": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x10B"
    },
    "249": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x105"
    },
    "253": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "254": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "256": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xEAA"
    },
    "260": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        1679,
        2730
      ],
      "op": "JUMP",
      "path": "13"
    },
    "261": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "262": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2BC"
    },
    "266": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        1679,
        2730
      ],
      "op": "JUMP",
      "path": "13"
    },
    "267": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "268": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "270": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "271": {
      "op": "SWAP1"
    },
    "272": {
      "op": "DUP2"
    },
    "273": {
      "op": "MSTORE"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "276": {
      "op": "ADD"
    },
    "277": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "278": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "280": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "281": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "DUP1",
      "path": "13"
    },
    "282": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "283": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "SUB",
      "path": "13"
    },
    "284": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "285": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "RETURN",
      "path": "13"
    },
    "286": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "287": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x135"
    },
    "291": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x12F"
    },
    "295": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "296": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "298": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF43"
    },
    "302": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        3443,
        3965
      ],
      "op": "JUMP",
      "path": "13"
    },
    "303": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "304": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4FD"
    },
    "308": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        3443,
        3965
      ],
      "op": "JUMP",
      "path": "13"
    },
    "309": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "310": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "STOP",
      "path": "13"
    },
    "311": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "312": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "313": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "DUP1",
      "path": "13"
    },
    "314": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "315": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x144"
    },
    "319": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "320": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "322": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "DUP1",
      "path": "13"
    },
    "323": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "REVERT",
      "path": "13"
    },
    "324": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "325": {
      "op": "POP"
    },
    "326": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x15C"
    },
    "330": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x156"
    },
    "334": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "335": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "337": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF5D"
    },
    "341": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "i",
      "offset": [
        4725,
        4976
      ],
      "op": "JUMP",
      "path": "13"
    },
    "342": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "343": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x63F"
    },
    "347": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "i",
      "offset": [
        4725,
        4976
      ],
      "op": "JUMP",
      "path": "13"
    },
    "348": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "349": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "351": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "356": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "358": {
      "op": "SHL"
    },
    "359": {
      "op": "SUB"
    },
    "360": {
      "op": "NOT"
    },
    "361": {
      "op": "SWAP1"
    },
    "362": {
      "op": "SWAP2"
    },
    "363": {
      "op": "AND"
    },
    "364": {
      "op": "DUP2"
    },
    "365": {
      "op": "MSTORE"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "368": {
      "op": "ADD"
    },
    "369": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x115"
    },
    "373": {
      "op": "JUMP"
    },
    "374": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "375": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "376": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "DUP1",
      "path": "13"
    },
    "377": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "378": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x183"
    },
    "382": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "383": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "385": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "DUP1",
      "path": "13"
    },
    "386": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "REVERT",
      "path": "13"
    },
    "387": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "388": {
      "op": "POP"
    },
    "389": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x135"
    },
    "393": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x195"
    },
    "397": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "398": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "400": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF43"
    },
    "404": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        3971,
        4719
      ],
      "op": "JUMP",
      "path": "13"
    },
    "405": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "406": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x69F"
    },
    "410": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        3971,
        4719
      ],
      "op": "JUMP",
      "path": "13"
    },
    "411": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "412": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "413": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "DUP1",
      "path": "13"
    },
    "414": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "415": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1A8"
    },
    "419": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "420": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "422": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "DUP1",
      "path": "13"
    },
    "423": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "REVERT",
      "path": "13"
    },
    "424": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "425": {
      "op": "POP"
    },
    "426": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1D2"
    },
    "430": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1BA"
    },
    "434": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "435": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "437": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF43"
    },
    "441": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        1559,
        1673
      ],
      "op": "JUMP",
      "path": "13"
    },
    "442": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "443": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1617,
        1622
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "445": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1660
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 2
    },
    "446": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1660
      ],
      "op": "DUP2",
      "path": "13"
    },
    "447": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1660
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "448": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1649
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "450": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1660
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "452": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1660
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "453": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1660
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "455": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1660
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "456": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1660
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "457": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1666
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "459": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1666
      ],
      "op": "ADD",
      "path": "13"
    },
    "460": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1666
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "461": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1666
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "463": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1666
      ],
      "op": "AND",
      "path": "13"
    },
    "464": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1641,
        1666
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "465": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "JUMP",
      "path": "13"
    },
    "466": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "467": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "469": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "470": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x115"
    },
    "474": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "475": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "476": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        1559,
        1673
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xFF8"
    },
    "480": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        1559,
        1673
      ],
      "op": "JUMP",
      "path": "13"
    },
    "481": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "482": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "483": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "DUP1",
      "path": "13"
    },
    "484": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "485": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1EE"
    },
    "489": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "490": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "492": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "DUP1",
      "path": "13"
    },
    "493": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "REVERT",
      "path": "13"
    },
    "494": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "495": {
      "op": "POP"
    },
    "496": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x206"
    },
    "500": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x200"
    },
    "504": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "505": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "507": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF43"
    },
    "511": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        1419,
        1553
      ],
      "op": "JUMP",
      "path": "13"
    },
    "512": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "513": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x9C0"
    },
    "517": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        1419,
        1553
      ],
      "op": "JUMP",
      "path": "13"
    },
    "518": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "519": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "521": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "522": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x115"
    },
    "526": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "527": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "528": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1071"
    },
    "532": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        1419,
        1553
      ],
      "op": "JUMP",
      "path": "13"
    },
    "533": {
      "offset": [
        412,
        443
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "534": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "535": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "DUP1",
      "path": "13"
    },
    "536": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "537": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x222"
    },
    "541": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "542": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "544": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "DUP1",
      "path": "13"
    },
    "545": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "REVERT",
      "path": "13"
    },
    "546": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "547": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "POP",
      "path": "13"
    },
    "548": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x10B"
    },
    "552": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "554": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "555": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "DUP2",
      "path": "13"
    },
    "556": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        412,
        443
      ],
      "op": "JUMP",
      "path": "13"
    },
    "557": {
      "offset": [
        314,
        347
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "558": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "559": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "DUP1",
      "path": "13"
    },
    "560": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "561": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x23A"
    },
    "565": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "566": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "568": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "DUP1",
      "path": "13"
    },
    "569": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "REVERT",
      "path": "13"
    },
    "570": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "571": {
      "op": "POP"
    },
    "572": {
      "offset": [
        314,
        347
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "574": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "575": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x24F"
    },
    "579": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "586": {
      "op": "SHL"
    },
    "587": {
      "op": "SUB"
    },
    "588": {
      "offset": [
        314,
        347
      ],
      "op": "AND",
      "path": "13"
    },
    "589": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "DUP2",
      "path": "13"
    },
    "590": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "JUMP",
      "path": "13"
    },
    "591": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "592": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "594": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        314,
        347
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "601": {
      "op": "SHL"
    },
    "602": {
      "op": "SUB"
    },
    "603": {
      "op": "SWAP1"
    },
    "604": {
      "op": "SWAP2"
    },
    "605": {
      "op": "AND"
    },
    "606": {
      "op": "DUP2"
    },
    "607": {
      "op": "MSTORE"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "offset": [
        314,
        347
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x115"
    },
    "615": {
      "op": "JUMP"
    },
    "616": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "617": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "618": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "DUP1",
      "path": "13"
    },
    "619": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "620": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x275"
    },
    "624": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "625": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "627": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "DUP1",
      "path": "13"
    },
    "628": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "REVERT",
      "path": "13"
    },
    "629": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "630": {
      "op": "POP"
    },
    "631": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x24F"
    },
    "635": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x287"
    },
    "639": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "640": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "642": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF43"
    },
    "646": {
      "fn": "FractionalizeNFT.getERC20Address",
      "jump": "i",
      "offset": [
        1283,
        1413
      ],
      "op": "JUMP",
      "path": "13"
    },
    "647": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "648": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1348,
        1355
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "650": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1393
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 3
    },
    "651": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1393
      ],
      "op": "DUP2",
      "path": "13"
    },
    "652": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1393
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "653": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1382
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "655": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1393
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "657": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1393
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "658": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1393
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "660": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1393
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "661": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1393
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "662": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1406
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "664": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1406
      ],
      "op": "ADD",
      "path": "13"
    },
    "665": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1406
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "op": "SUB"
    },
    "674": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1406
      ],
      "op": "AND",
      "path": "13"
    },
    "675": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1374,
        1406
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "676": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        1283,
        1413
      ],
      "op": "JUMP",
      "path": "13"
    },
    "677": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2736,
        3437
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "678": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2736,
        3437
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x135"
    },
    "682": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2736,
        3437
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2B6"
    },
    "686": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2736,
        3437
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "687": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2736,
        3437
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "689": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2736,
        3437
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF43"
    },
    "693": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        2736,
        3437
      ],
      "op": "JUMP",
      "path": "13"
    },
    "694": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2736,
        3437
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "695": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2736,
        3437
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xA6D"
    },
    "699": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        2736,
        3437
      ],
      "op": "JUMP",
      "path": "13"
    },
    "700": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "701": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 4,
      "value": "0x40"
    },
    "703": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "704": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "709": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "711": {
      "op": "SHL"
    },
    "712": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "DUP2",
      "path": "13"
    },
    "713": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "714": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2013,
        2020
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "716": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2013,
        2020
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "717": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2052,
        2070
      ],
      "op": "DUP8",
      "path": "13"
    },
    "718": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2052,
        2070
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "725": {
      "op": "SHL"
    },
    "726": {
      "op": "SUB"
    },
    "727": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2101
      ],
      "op": "DUP3",
      "path": "13"
    },
    "728": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2101
      ],
      "op": "AND",
      "path": "13"
    },
    "729": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2101
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "730": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2101
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x42842E0E"
    },
    "735": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2101
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "736": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2F3"
    },
    "740": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "741": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2102,
        2112
      ],
      "op": "CALLER",
      "path": "13"
    },
    "742": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2102,
        2112
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "743": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2122,
        2126
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "744": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2122,
        2126
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "745": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2129,
        2139
      ],
      "op": "DUP13",
      "path": "13"
    },
    "746": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2129,
        2139
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "747": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "749": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "ADD",
      "path": "13"
    },
    "750": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1086"
    },
    "754": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2081,
        2140
      ],
      "op": "JUMP",
      "path": "13"
    },
    "755": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "756": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "758": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "760": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "761": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "DUP1",
      "path": "13"
    },
    "762": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "DUP4",
      "path": "13"
    },
    "763": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "SUB",
      "path": "13"
    },
    "764": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "DUP2",
      "path": "13"
    },
    "765": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "767": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "DUP8",
      "path": "13"
    },
    "768": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "DUP1",
      "path": "13"
    },
    "769": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "770": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "771": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "DUP1",
      "path": "13"
    },
    "772": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "773": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30E"
    },
    "777": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "778": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "780": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "DUP1",
      "path": "13"
    },
    "781": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "REVERT",
      "path": "13"
    },
    "782": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "783": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "POP",
      "path": "13"
    },
    "784": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "GAS",
      "path": "13"
    },
    "785": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "CALL",
      "path": "13"
    },
    "786": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "787": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "DUP1",
      "path": "13"
    },
    "788": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "789": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x323"
    },
    "793": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "794": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "795": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "797": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "DUP1",
      "path": "13"
    },
    "798": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "799": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "800": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "802": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "REVERT",
      "path": "13"
    },
    "803": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "804": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "POP",
      "path": "13"
    },
    "805": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "POP",
      "path": "13"
    },
    "806": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "POP",
      "path": "13"
    },
    "807": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2081,
        2140
      ],
      "op": "POP",
      "path": "13"
    },
    "808": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2150,
        2161
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "810": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2183,
        2192
      ],
      "op": "DUP7",
      "path": "13"
    },
    "811": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2194,
        2205
      ],
      "op": "DUP7",
      "path": "13"
    },
    "812": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2207,
        2218
      ],
      "op": "DUP7",
      "path": "13"
    },
    "813": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2220,
        2230
      ],
      "op": "CALLER",
      "path": "13"
    },
    "814": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "816": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "817": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x33B"
    },
    "821": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "822": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xD1C"
    },
    "826": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2164,
        2231
      ],
      "op": "JUMP",
      "path": "13"
    },
    "827": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "828": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x34A"
    },
    "832": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "833": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "834": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "835": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "836": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "837": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x10AA"
    },
    "841": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2164,
        2231
      ],
      "op": "JUMP",
      "path": "13"
    },
    "842": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "843": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "845": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "846": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "DUP1",
      "path": "13"
    },
    "847": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "848": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "SUB",
      "path": "13"
    },
    "849": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "850": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "852": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "CREATE",
      "path": "13"
    },
    "853": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "DUP1",
      "path": "13"
    },
    "854": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "855": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "DUP1",
      "path": "13"
    },
    "856": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "857": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x367"
    },
    "861": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "862": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "863": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "865": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "DUP1",
      "path": "13"
    },
    "866": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "867": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "868": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "870": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "REVERT",
      "path": "13"
    },
    "871": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "872": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2164,
        2231
      ],
      "op": "POP",
      "path": "13"
    },
    "873": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2150,
        2231
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "874": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2150,
        2231
      ],
      "op": "POP",
      "path": "13"
    },
    "875": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 5,
      "value": "0x40"
    },
    "877": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "878": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "DUP1",
      "path": "13"
    },
    "879": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "881": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "882": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "884": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "885": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "DUP1",
      "path": "13"
    },
    "886": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2310,
        2320
      ],
      "op": "DUP10",
      "path": "13"
    },
    "887": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "888": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "889": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "891": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "892": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2349,
        2367
      ],
      "op": "DUP11",
      "path": "13"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "899": {
      "op": "SHL"
    },
    "900": {
      "op": "SUB"
    },
    "901": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "AND",
      "path": "13"
    },
    "902": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "903": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "904": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "906": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "907": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2403,
        2408
      ],
      "op": "DUP3",
      "path": "13"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "op": "SUB"
    },
    "916": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "AND",
      "path": "13"
    },
    "917": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "918": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "919": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "921": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "922": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2436,
        2447
      ],
      "op": "DUP8",
      "path": "13"
    },
    "923": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "924": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "925": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "927": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "928": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2484,
        2494
      ],
      "op": "CALLER",
      "path": "13"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "op": "SUB"
    },
    "937": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "AND",
      "path": "13"
    },
    "938": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "939": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "940": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "942": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "943": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2522,
        2533
      ],
      "op": "DUP6",
      "path": "13"
    },
    "944": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "945": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "946": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "948": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "949": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2554,
        2574
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "951": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "953": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "954": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "GT",
      "path": "13"
    },
    "955": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "956": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3CA"
    },
    "960": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "961": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3CA"
    },
    "965": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xFE2"
    },
    "969": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2266,
        2576
      ],
      "op": "JUMP",
      "path": "13"
    },
    "970": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "971": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "972": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2266,
        2576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "973": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2250,
        2262
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "975": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2250,
        2262
      ],
      "op": "DUP1",
      "path": "13"
    },
    "976": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2250,
        2262
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "977": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "979": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "980": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "DUP2",
      "path": "13"
    },
    "981": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "982": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2249
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "984": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "986": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "DUP2",
      "path": "13"
    },
    "987": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "DUP2",
      "path": "13"
    },
    "988": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "989": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "991": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "992": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "DUP4",
      "path": "13"
    },
    "993": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "994": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "995": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP6",
      "path": "13"
    },
    "996": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "997": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "998": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "999": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1000": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1001": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1002": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1003": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1004": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1005": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1006": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1007": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1014": {
      "op": "SHL"
    },
    "1015": {
      "op": "SUB"
    },
    "1016": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "1017": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1018": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "AND",
      "path": "13"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "op": "SUB"
    },
    "1027": {
      "op": "NOT"
    },
    "1028": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1029": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1030": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "AND",
      "path": "13"
    },
    "1031": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "OR",
      "path": "13"
    },
    "1032": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1033": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1034": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1035": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1036": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1037": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1038": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1039": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "1040": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1041": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1042": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1043": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1044": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "1045": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1046": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1047": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "AND",
      "path": "13"
    },
    "1048": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "1049": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1050": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1051": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "AND",
      "path": "13"
    },
    "1052": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1053": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1054": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1055": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "OR",
      "path": "13"
    },
    "1056": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1057": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1058": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "1060": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1061": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1062": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1063": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1064": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1065": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1066": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2263
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1067": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x43E"
    },
    "1071": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1072": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1074": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1075": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1076": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1077": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1078": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1079": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1080": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1081": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xD2A"
    },
    "1085": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2241,
        2576
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1086": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "1090": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1091": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1092": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1093": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1095": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1096": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1097": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1098": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1105": {
      "op": "SHL"
    },
    "1106": {
      "op": "SUB"
    },
    "1107": {
      "op": "NOT"
    },
    "1108": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "AND",
      "path": "13"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "op": "SUB"
    },
    "1117": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1118": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1119": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "AND",
      "path": "13"
    },
    "1120": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1121": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1122": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1123": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "OR",
      "path": "13"
    },
    "1124": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1125": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1126": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "1128": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1129": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1130": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1131": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "1133": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1134": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1135": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1136": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC0"
    },
    "1138": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1139": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1140": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1141": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "1143": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1144": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ADD",
      "path": "13"
    },
    "1145": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1146": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1149": {
      "op": "NOT"
    },
    "1150": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "AND",
      "path": "13"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1154": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1156": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1157": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "GT",
      "path": "13"
    },
    "1158": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1159": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x495"
    },
    "1163": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1164": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x495"
    },
    "1168": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xFE2"
    },
    "1172": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2241,
        2576
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1173": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1174": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "MUL",
      "path": "13"
    },
    "1175": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "OR",
      "path": "13"
    },
    "1176": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1177": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2241,
        2576
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2606,
        2618
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1182": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2606,
        2618
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1183": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2606,
        2618
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1184": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2606,
        2618
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2644,
        2645
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 6,
      "value": "0x1"
    },
    "1188": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2644,
        2645
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1189": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2586,
        2603
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1191": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2628,
        2645
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4B2"
    },
    "1195": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2644,
        2645
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1196": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2606,
        2618
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1197": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2628,
        2645
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x110B"
    },
    "1201": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        2628,
        2645
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1202": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2628,
        2645
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1203": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2628,
        2645
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1204": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2628,
        2645
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1205": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2628,
        2645
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1206": {
      "op": "POP"
    },
    "1207": {
      "op": "POP"
    },
    "1208": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 7,
      "value": "0x40"
    },
    "1210": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1211": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1212": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2675,
        2685
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1213": {
      "op": "DUP2"
    },
    "1214": {
      "op": "MSTORE"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1217": {
      "op": "DUP2"
    },
    "1218": {
      "op": "ADD"
    },
    "1219": {
      "op": "DUP4"
    },
    "1220": {
      "op": "SWAP1"
    },
    "1221": {
      "op": "MSTORE"
    },
    "1222": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x4356F3FD5C3BFC18A01590ADCCCB99D62F10C4096F5200887C659CC52043E254"
    },
    "1255": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1259": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1260": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1261": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1262": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "SUB",
      "path": "13"
    },
    "1263": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1264": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2660,
        2697
      ],
      "op": "LOG1",
      "path": "13"
    },
    "1265": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        2714,
        2723
      ],
      "op": "SWAP10",
      "path": "13",
      "statement": 8
    },
    "1266": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        1679,
        2730
      ],
      "op": "SWAP9",
      "path": "13"
    },
    "1267": {
      "op": "POP"
    },
    "1268": {
      "op": "POP"
    },
    "1269": {
      "op": "POP"
    },
    "1270": {
      "op": "POP"
    },
    "1271": {
      "op": "POP"
    },
    "1272": {
      "op": "POP"
    },
    "1273": {
      "op": "POP"
    },
    "1274": {
      "op": "POP"
    },
    "1275": {
      "op": "POP"
    },
    "1276": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "o",
      "offset": [
        1679,
        2730
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1277": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1278": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3643
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x0"
    },
    "1280": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3643
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1281": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3643
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1282": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3643
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1283": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3632
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1285": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3643
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1287": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3643
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1288": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3643
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1290": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3643
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1291": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3643
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1292": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "1294": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3655
      ],
      "op": "ADD",
      "path": "13"
    },
    "1295": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3624,
        3655
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1296": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3611,
        3620
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1297": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3611,
        3655
      ],
      "op": "LT",
      "path": "13"
    },
    "1298": {
      "branch": 25,
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3611,
        3655
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1299": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x574"
    },
    "1303": {
      "branch": 25,
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1304": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1306": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1315": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1318": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1320": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1321": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "ADD",
      "path": "13"
    },
    "1322": {
      "op": "MSTORE"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1327": {
      "op": "DUP3"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "op": "MSTORE"
    },
    "1330": {
      "op": "PUSH32",
      "value": "0x53656E6465722073656E74206C657373207468616E20746865206275796F7574"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1365": {
      "op": "DUP3"
    },
    "1366": {
      "op": "ADD"
    },
    "1367": {
      "op": "MSTORE"
    },
    "1368": {
      "op": "PUSH7",
      "value": "0x10383934B1B297"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1381": {
      "op": "DUP3"
    },
    "1382": {
      "op": "ADD"
    },
    "1383": {
      "op": "MSTORE"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1386": {
      "op": "ADD"
    },
    "1387": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1388": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1390": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1391": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1392": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1393": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "SUB",
      "path": "13"
    },
    "1394": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1395": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "13"
    },
    "1396": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3603,
        3699
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1397": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 10,
      "value": "0x0"
    },
    "1399": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1400": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1401": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1402": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3717
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1404": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1406": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1407": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1408": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1409": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1411": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1412": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1413": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1414": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3728
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1415": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3734
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "1417": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3734
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1418": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3734
      ],
      "op": "ADD",
      "path": "13"
    },
    "1419": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3752
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1420": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3752
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1423": {
      "op": "NOT"
    },
    "1424": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3752
      ],
      "op": "AND",
      "path": "13"
    },
    "1425": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3737,
        3752
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1427": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3752
      ],
      "op": "OR",
      "path": "13"
    },
    "1428": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3752
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1429": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3709,
        3752
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1430": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3785,
        3818
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1431": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3785,
        3818
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1432": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3785,
        3818
      ],
      "op": "ADD",
      "path": "13"
    },
    "1433": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3785,
        3818
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1434": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3880,
        3910
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 11
    },
    "1435": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3880,
        3910
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1436": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1437": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1438": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1445": {
      "op": "SHL"
    },
    "1446": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1447": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "op": "SUB"
    },
    "1456": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3785,
        3818
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1457": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3785,
        3818
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1458": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3785,
        3818
      ],
      "op": "AND",
      "path": "13"
    },
    "1459": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3785,
        3818
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1460": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3785,
        3818
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1461": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3785,
        3818
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1462": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3852
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x42842E0E"
    },
    "1467": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3852
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1468": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x5CD"
    },
    "1472": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1473": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3861,
        3865
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "1474": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3861,
        3865
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1475": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3868,
        3878
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1476": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3868,
        3878
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1477": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1479": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "ADD",
      "path": "13"
    },
    "1480": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1086"
    },
    "1484": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        3829,
        3911
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1485": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1486": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1488": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1490": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1491": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1492": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1493": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "SUB",
      "path": "13"
    },
    "1494": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1495": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1497": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1498": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1499": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1500": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1501": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1502": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1503": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x5E8"
    },
    "1507": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1508": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1510": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1511": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1512": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1513": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "POP",
      "path": "13"
    },
    "1514": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "GAS",
      "path": "13"
    },
    "1515": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "CALL",
      "path": "13"
    },
    "1516": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1517": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1518": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1519": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x5FD"
    },
    "1523": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1524": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1525": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1527": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1528": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1529": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1530": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1532": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1533": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3829,
        3911
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1534": {
      "op": "POP"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 12,
      "value": "0x40"
    },
    "1538": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1539": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1540": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3936,
        3946
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1541": {
      "op": "DUP2"
    },
    "1542": {
      "op": "MSTORE"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1545": {
      "op": "DUP2"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "op": "DUP7"
    },
    "1548": {
      "op": "SWAP1"
    },
    "1549": {
      "op": "MSTORE"
    },
    "1550": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xFBBD268BB69CF922E3840DC96A6702DC064BAF4B2D9594B5A66A2FE428F3F2AA"
    },
    "1583": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1584": {
      "op": "POP"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "op": "SWAP1"
    },
    "1587": {
      "op": "POP"
    },
    "1588": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1590": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1591": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1592": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1593": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "SUB",
      "path": "13"
    },
    "1594": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1595": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3926,
        3958
      ],
      "op": "LOG1",
      "path": "13"
    },
    "1596": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3493,
        3965
      ],
      "op": "POP",
      "path": "13"
    },
    "1597": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        3443,
        3965
      ],
      "op": "POP",
      "path": "13"
    },
    "1598": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "o",
      "offset": [
        3443,
        3965
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1599": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1600": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4861,
        4884
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 13,
      "value": "0x40"
    },
    "1602": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4861,
        4884
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1603": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4873,
        4883
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1604": {
      "op": "DUP2"
    },
    "1605": {
      "op": "MSTORE"
    },
    "1606": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4838,
        4844
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1608": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4838,
        4844
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1609": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4861,
        4884
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xCCE71FC9CFCACC4CE8153BDE254A735AE423CDC2B7852FB754F4DE746AC3018F"
    },
    "1642": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4861,
        4884
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1645": {
      "op": "ADD"
    },
    "1646": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4861,
        4884
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1648": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4861,
        4884
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1649": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4861,
        4884
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1650": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4861,
        4884
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1651": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4861,
        4884
      ],
      "op": "SUB",
      "path": "13"
    },
    "1652": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4861,
        4884
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1653": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4861,
        4884
      ],
      "op": "LOG1",
      "path": "13"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4908,
        4968
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 14,
      "value": "0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F"
    },
    "1688": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "1689": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1690": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "POP",
      "path": "13"
    },
    "1691": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "POP",
      "path": "13"
    },
    "1692": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "POP",
      "path": "13"
    },
    "1693": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        4725,
        4976
      ],
      "op": "POP",
      "path": "13"
    },
    "1694": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "o",
      "offset": [
        4725,
        4976
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1695": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1696": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4136,
        4151
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 15,
      "value": "0x2"
    },
    "1698": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4126
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1700": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4126
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1701": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4126
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1702": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4126
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1703": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4115
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1705": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4126
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1707": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4126
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1708": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4126
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1710": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4126
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1711": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4126
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1712": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4132
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "1714": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4132
      ],
      "op": "ADD",
      "path": "13"
    },
    "1715": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4132
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1716": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4132
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1718": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4132
      ],
      "op": "AND",
      "path": "13"
    },
    "1719": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1721": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4151
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1722": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4151
      ],
      "op": "GT",
      "path": "13"
    },
    "1723": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4151
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1724": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4151
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x6CA"
    },
    "1728": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1729": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4151
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x6CA"
    },
    "1733": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4151
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xFE2"
    },
    "1737": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4107,
        4151
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1738": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4151
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1739": {
      "branch": 26,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4107,
        4151
      ],
      "op": "EQ",
      "path": "13"
    },
    "1740": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4099,
        4199
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x72D"
    },
    "1744": {
      "branch": 26,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4099,
        4199
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1745": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4099,
        4199
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1747": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4099,
        4199
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1754": {
      "op": "SHL"
    },
    "1755": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4099,
        4199
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1756": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4099,
        4199
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1759": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4099,
        4199
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1761": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4099,
        4199
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1762": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4099,
        4199
      ],
      "op": "ADD",
      "path": "13"
    },
    "1763": {
      "op": "MSTORE"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1768": {
      "op": "DUP3"
    },
    "1769": {
      "op": "ADD"
    },
    "1770": {
      "op": "MSTORE"
    },
    "1771": {
      "op": "PUSH32",
      "value": "0x4672616374696F6E616C697A6564204E465420686173206E6F74206265656E20"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1806": {
      "op": "DUP3"
    },
    "1807": {
      "op": "ADD"
    },
    "1808": {
      "op": "MSTORE"
    },
    "1809": {
      "op": "PUSH11",
      "value": "0x3137BAB3B43A1037BABA17"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1823": {
      "op": "SHL"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1826": {
      "op": "DUP3"
    },
    "1827": {
      "op": "ADD"
    },
    "1828": {
      "op": "MSTORE"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1831": {
      "op": "ADD"
    },
    "1832": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4099,
        4199
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x56B"
    },
    "1836": {
      "op": "JUMP"
    },
    "1837": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4099,
        4199
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1838": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4209,
        4220
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1840": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4248
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1841": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4248
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1842": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4248
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1843": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4237
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1845": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4248
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1847": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4248
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1848": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4248
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1850": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4248
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1851": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4248
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1852": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4248
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1853": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4261
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1855": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4261
      ],
      "op": "ADD",
      "path": "13"
    },
    "1856": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4261
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1857": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1858": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1859": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1866": {
      "op": "SHL"
    },
    "1867": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1868": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1869": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4313,
        4323
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1870": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1872": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1873": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "ADD",
      "path": "13"
    },
    "1874": {
      "op": "MSTORE"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1881": {
      "op": "SHL"
    },
    "1882": {
      "op": "SUB"
    },
    "1883": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4261
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1884": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4261
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1885": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4261
      ],
      "op": "AND",
      "path": "13"
    },
    "1886": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4261
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1887": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4209,
        4220
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1888": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4261
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1889": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4229,
        4261
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1890": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4312
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70A08231"
    },
    "1895": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4312
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1898": {
      "op": "ADD"
    },
    "1899": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1901": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1903": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1904": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1905": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1906": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "SUB",
      "path": "13"
    },
    "1907": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1908": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1909": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1910": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1911": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1912": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1913": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1914": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x783"
    },
    "1918": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1919": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1921": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1922": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1923": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1924": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "POP",
      "path": "13"
    },
    "1925": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "GAS",
      "path": "13"
    },
    "1926": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "1927": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1928": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1929": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1930": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x798"
    },
    "1934": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1935": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1936": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1938": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1939": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1940": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1941": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1943": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1944": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1945": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "POP",
      "path": "13"
    },
    "1946": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "POP",
      "path": "13"
    },
    "1947": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "POP",
      "path": "13"
    },
    "1948": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "POP",
      "path": "13"
    },
    "1949": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1951": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1952": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1953": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1955": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "NOT",
      "path": "13"
    },
    "1956": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1958": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1959": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "ADD",
      "path": "13"
    },
    "1960": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "AND",
      "path": "13"
    },
    "1961": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1962": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "ADD",
      "path": "13"
    },
    "1963": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1964": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1966": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1967": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "POP",
      "path": "13"
    },
    "1968": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1969": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "ADD",
      "path": "13"
    },
    "1970": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1971": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x7BE"
    },
    "1975": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1976": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1977": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1126"
    },
    "1981": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4297,
        4324
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1982": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4297,
        4324
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1983": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4272,
        4324
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1984": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4272,
        4324
      ],
      "op": "POP",
      "path": "13"
    },
    "1985": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4359,
        4360
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 16,
      "value": "0x0"
    },
    "1987": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4342,
        4356
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1988": {
      "branch": 27,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4342,
        4360
      ],
      "op": "GT",
      "path": "13"
    },
    "1989": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4334,
        4398
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x81C"
    },
    "1993": {
      "branch": 27,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4334,
        4398
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1994": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4334,
        4398
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1996": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4334,
        4398
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1997": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2003": {
      "op": "SHL"
    },
    "2004": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4334,
        4398
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2005": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4334,
        4398
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2008": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4334,
        4398
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2010": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4334,
        4398
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2011": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4334,
        4398
      ],
      "op": "ADD",
      "path": "13"
    },
    "2012": {
      "op": "MSTORE"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2017": {
      "op": "DUP3"
    },
    "2018": {
      "op": "ADD"
    },
    "2019": {
      "op": "MSTORE"
    },
    "2020": {
      "op": "PUSH32",
      "value": "0x436C61696D657220646F6573206E6F7420686F6C6420616E7920746F6B656E73"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2055": {
      "op": "DUP3"
    },
    "2056": {
      "op": "ADD"
    },
    "2057": {
      "op": "MSTORE"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2062": {
      "op": "SHL"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2065": {
      "op": "DUP3"
    },
    "2066": {
      "op": "ADD"
    },
    "2067": {
      "op": "MSTORE"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2070": {
      "op": "ADD"
    },
    "2071": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4334,
        4398
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x56B"
    },
    "2075": {
      "op": "JUMP"
    },
    "2076": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4334,
        4398
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2077": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 17,
      "value": "0x40"
    },
    "2079": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2080": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2089": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2096": {
      "op": "SHL"
    },
    "2097": {
      "op": "SUB"
    },
    "2098": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4426
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2099": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4426
      ],
      "op": "AND",
      "path": "13"
    },
    "2100": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4426
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2101": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4426
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "2106": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4426
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2107": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x84E"
    },
    "2111": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2112": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4427,
        4437
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2113": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4427,
        4437
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2114": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4447,
        4451
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "2115": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4447,
        4451
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2116": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4454,
        4468
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2117": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4454,
        4468
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2118": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2120": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "ADD",
      "path": "13"
    },
    "2121": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1086"
    },
    "2125": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4408,
        4469
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2126": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2127": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2129": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2131": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2132": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2133": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2134": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "SUB",
      "path": "13"
    },
    "2135": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2136": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2138": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2139": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2140": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2141": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2142": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2143": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2144": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x869"
    },
    "2148": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2149": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2151": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2152": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2153": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2154": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "POP",
      "path": "13"
    },
    "2155": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "GAS",
      "path": "13"
    },
    "2156": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "CALL",
      "path": "13"
    },
    "2157": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2158": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2159": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2160": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x87E"
    },
    "2164": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2165": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2166": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2168": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2169": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2170": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2171": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2173": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2174": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2175": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "POP",
      "path": "13"
    },
    "2176": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "POP",
      "path": "13"
    },
    "2177": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "POP",
      "path": "13"
    },
    "2178": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "POP",
      "path": "13"
    },
    "2179": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2181": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2182": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2183": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2185": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "NOT",
      "path": "13"
    },
    "2186": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2188": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2189": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "ADD",
      "path": "13"
    },
    "2190": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "AND",
      "path": "13"
    },
    "2191": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2192": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "ADD",
      "path": "13"
    },
    "2193": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2194": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2196": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2197": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "POP",
      "path": "13"
    },
    "2198": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2199": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "ADD",
      "path": "13"
    },
    "2200": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2201": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x8A4"
    },
    "2205": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2206": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2207": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1140"
    },
    "2211": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4408,
        4469
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2212": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2213": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4408,
        4469
      ],
      "op": "POP",
      "path": "13"
    },
    "2214": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4479,
        4498
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2216": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4506
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2223": {
      "op": "SHL"
    },
    "2224": {
      "op": "SUB"
    },
    "2225": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4518
      ],
      "op": "AND",
      "path": "13"
    },
    "2226": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4518
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x18160DDD"
    },
    "2231": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2233": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2234": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2235": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "2240": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "AND",
      "path": "13"
    },
    "2241": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "2243": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "SHL",
      "path": "13"
    },
    "2244": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2245": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2246": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2248": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "ADD",
      "path": "13"
    },
    "2249": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2251": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2253": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2254": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2255": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2256": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "SUB",
      "path": "13"
    },
    "2257": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2258": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2259": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2260": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2261": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2262": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2263": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2264": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x8E1"
    },
    "2268": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2269": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2271": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2272": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2273": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2274": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "POP",
      "path": "13"
    },
    "2275": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "GAS",
      "path": "13"
    },
    "2276": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "2277": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2278": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2279": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2280": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x8F6"
    },
    "2284": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2285": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2286": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2288": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2289": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2290": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2291": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2293": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2294": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2295": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "POP",
      "path": "13"
    },
    "2296": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "POP",
      "path": "13"
    },
    "2297": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "POP",
      "path": "13"
    },
    "2298": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "POP",
      "path": "13"
    },
    "2299": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2301": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2302": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2303": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2305": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "NOT",
      "path": "13"
    },
    "2306": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2308": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2309": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "ADD",
      "path": "13"
    },
    "2310": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "AND",
      "path": "13"
    },
    "2311": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2312": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "ADD",
      "path": "13"
    },
    "2313": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2314": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2316": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2317": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "POP",
      "path": "13"
    },
    "2318": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2319": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "ADD",
      "path": "13"
    },
    "2320": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2321": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x91C"
    },
    "2325": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2326": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2327": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1126"
    },
    "2331": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4501,
        4520
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2332": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4501,
        4520
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2333": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4530,
        4552
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2335": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4574
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2336": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4574
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2337": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4574
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2338": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4563
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2340": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4574
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2342": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4574
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2343": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4574
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2345": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4574
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2346": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4574
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2347": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4586
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "2349": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4586
      ],
      "op": "ADD",
      "path": "13"
    },
    "2350": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4586
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2351": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4479,
        4520
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2352": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4479,
        4520
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2353": {
      "op": "POP"
    },
    "2354": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4530,
        4552
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2355": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4479,
        4520
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2356": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4479,
        4520
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2357": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4601
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x941"
    },
    "2361": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4601
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2362": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4587,
        4601
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2363": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4587,
        4601
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2364": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4601
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1164"
    },
    "2368": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4555,
        4601
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2369": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4601
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2370": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4613
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x94D"
    },
    "2374": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4613
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2375": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4613
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2376": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4613
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1186"
    },
    "2380": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        4555,
        4613
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2381": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4555,
        4613
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2382": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 18,
      "value": "0x40"
    },
    "2384": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2385": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4530,
        4613
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2386": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4530,
        4613
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2387": {
      "op": "POP"
    },
    "2388": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4631,
        4641
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2389": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4631,
        4641
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2390": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2391": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2392": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8FC"
    },
    "2395": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "MUL",
      "path": "13"
    },
    "2396": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2397": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4530,
        4613
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2398": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4530,
        4613
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2399": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2401": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2402": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2403": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2404": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4530,
        4613
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2405": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4631,
        4641
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2406": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2407": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "CALL",
      "path": "13"
    },
    "2408": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2409": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "POP",
      "path": "13"
    },
    "2410": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "POP",
      "path": "13"
    },
    "2411": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "POP",
      "path": "13"
    },
    "2412": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "POP",
      "path": "13"
    },
    "2413": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2414": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2415": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2416": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x97E"
    },
    "2420": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2421": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2422": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2424": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2425": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2426": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2427": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2429": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2430": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4623,
        4667
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2431": {
      "op": "POP"
    },
    "2432": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 19,
      "value": "0x40"
    },
    "2434": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2435": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2436": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4690,
        4700
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2437": {
      "op": "DUP2"
    },
    "2438": {
      "op": "MSTORE"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2441": {
      "op": "DUP2"
    },
    "2442": {
      "op": "ADD"
    },
    "2443": {
      "op": "DUP8"
    },
    "2444": {
      "op": "SWAP1"
    },
    "2445": {
      "op": "MSTORE"
    },
    "2446": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
    },
    "2479": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2480": {
      "op": "ADD"
    },
    "2481": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2482": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2484": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2485": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2486": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2487": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "SUB",
      "path": "13"
    },
    "2488": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2489": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4682,
        4712
      ],
      "op": "LOG1",
      "path": "13"
    },
    "2490": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4012,
        4719
      ],
      "op": "POP",
      "path": "13"
    },
    "2491": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4012,
        4719
      ],
      "op": "POP",
      "path": "13"
    },
    "2492": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4012,
        4719
      ],
      "op": "POP",
      "path": "13"
    },
    "2493": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        4012,
        4719
      ],
      "op": "POP",
      "path": "13"
    },
    "2494": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        3971,
        4719
      ],
      "op": "POP",
      "path": "13"
    },
    "2495": {
      "fn": "FractionalizeNFT.claim",
      "jump": "o",
      "offset": [
        3971,
        4719
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2496": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2497": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1534
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 20,
      "value": "0x0"
    },
    "2499": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1534
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2500": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1534
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2501": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1534
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2502": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1523
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2504": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1534
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2506": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1534
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2507": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1534
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2509": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1534
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2510": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1534
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2511": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "2513": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1546
      ],
      "op": "ADD",
      "path": "13"
    },
    "2514": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2515": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2516": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1483,
        1496
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2518": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1483,
        1496
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2519": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1515,
        1546
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2520": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x9E2"
    },
    "2524": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2525": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11A9"
    },
    "2529": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        1508,
        1546
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2530": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2531": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2532": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2534": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "ADD",
      "path": "13"
    },
    "2535": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2537": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2538": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2539": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DIV",
      "path": "13"
    },
    "2540": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "MUL",
      "path": "13"
    },
    "2541": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2543": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "ADD",
      "path": "13"
    },
    "2544": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2546": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2547": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2548": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2549": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "ADD",
      "path": "13"
    },
    "2550": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2552": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2553": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2554": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2555": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2556": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2557": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2558": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2559": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2560": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2562": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "ADD",
      "path": "13"
    },
    "2563": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2564": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2565": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2566": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xA10"
    },
    "2570": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2571": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11A9"
    },
    "2575": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        1508,
        1546
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2576": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2577": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2578": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2579": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xA61"
    },
    "2583": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2584": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2585": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2587": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "LT",
      "path": "13"
    },
    "2588": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xA35"
    },
    "2592": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2593": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "2596": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2597": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2598": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2599": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DIV",
      "path": "13"
    },
    "2600": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "MUL",
      "path": "13"
    },
    "2601": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2602": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2603": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2604": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2606": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "ADD",
      "path": "13"
    },
    "2607": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2608": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xA61"
    },
    "2612": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2613": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2614": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2615": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "ADD",
      "path": "13"
    },
    "2616": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2617": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2618": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2620": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2621": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2623": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2625": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2626": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2627": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2628": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2629": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2630": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2631": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2632": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2633": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2635": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "ADD",
      "path": "13"
    },
    "2636": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2637": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2639": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "ADD",
      "path": "13"
    },
    "2640": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2641": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2642": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "GT",
      "path": "13"
    },
    "2643": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xA43"
    },
    "2647": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2648": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2649": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2650": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SUB",
      "path": "13"
    },
    "2651": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2653": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "AND",
      "path": "13"
    },
    "2654": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2655": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "ADD",
      "path": "13"
    },
    "2656": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2657": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2658": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "POP",
      "path": "13"
    },
    "2659": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "POP",
      "path": "13"
    },
    "2660": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "POP",
      "path": "13"
    },
    "2661": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "POP",
      "path": "13"
    },
    "2662": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "POP",
      "path": "13"
    },
    "2663": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2664": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1508,
        1546
      ],
      "op": "POP",
      "path": "13"
    },
    "2665": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2666": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2667": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        1419,
        1553
      ],
      "op": "POP",
      "path": "13"
    },
    "2668": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "o",
      "offset": [
        1419,
        1553
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2669": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2736,
        3437
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2670": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2891,
        2902
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2672": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2930
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2673": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2930
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2674": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2930
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2675": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2919
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2677": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2930
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2679": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2930
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2680": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2930
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2682": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2930
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2683": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2930
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2684": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2930
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2685": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2943
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2687": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2943
      ],
      "op": "ADD",
      "path": "13"
    },
    "2688": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2943
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2689": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2690": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2691": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2698": {
      "op": "SHL"
    },
    "2699": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2700": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2701": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2996,
        3006
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2702": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2704": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2705": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "ADD",
      "path": "13"
    },
    "2706": {
      "op": "MSTORE"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2713": {
      "op": "SHL"
    },
    "2714": {
      "op": "SUB"
    },
    "2715": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2943
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2716": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2943
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2717": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2943
      ],
      "op": "AND",
      "path": "13"
    },
    "2718": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2943
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2719": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2891,
        2902
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2720": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2943
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2721": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2911,
        2943
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2722": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        2995
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70A08231"
    },
    "2727": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        2995
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2730": {
      "op": "ADD"
    },
    "2731": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2733": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2735": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2736": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2737": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2738": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "SUB",
      "path": "13"
    },
    "2739": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2740": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2741": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2742": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2743": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2744": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2745": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2746": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xAC3"
    },
    "2750": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2751": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2753": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2754": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2755": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2756": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "POP",
      "path": "13"
    },
    "2757": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "GAS",
      "path": "13"
    },
    "2758": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "2759": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2760": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2761": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2762": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xAD8"
    },
    "2766": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2767": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2768": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2770": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2771": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2772": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2773": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2775": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2776": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2777": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "POP",
      "path": "13"
    },
    "2778": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "POP",
      "path": "13"
    },
    "2779": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "POP",
      "path": "13"
    },
    "2780": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "POP",
      "path": "13"
    },
    "2781": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2783": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2784": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2785": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2787": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "NOT",
      "path": "13"
    },
    "2788": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2790": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2791": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "ADD",
      "path": "13"
    },
    "2792": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "AND",
      "path": "13"
    },
    "2793": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2794": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "ADD",
      "path": "13"
    },
    "2795": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2796": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2798": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2799": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "POP",
      "path": "13"
    },
    "2800": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2801": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "ADD",
      "path": "13"
    },
    "2802": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2803": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xAFE"
    },
    "2807": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2808": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2809": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1126"
    },
    "2813": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        2980,
        3007
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2814": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2980,
        3007
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2815": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2954,
        3007
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2816": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        2954,
        3007
      ],
      "op": "POP",
      "path": "13"
    },
    "2817": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3017,
        3036
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2819": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3044
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2826": {
      "op": "SHL"
    },
    "2827": {
      "op": "SUB"
    },
    "2828": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3056
      ],
      "op": "AND",
      "path": "13"
    },
    "2829": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3056
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x18160DDD"
    },
    "2834": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2836": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2837": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2838": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "2843": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "AND",
      "path": "13"
    },
    "2844": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "2846": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "SHL",
      "path": "13"
    },
    "2847": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2848": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2849": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2851": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "ADD",
      "path": "13"
    },
    "2852": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2854": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2856": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2857": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2858": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2859": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "SUB",
      "path": "13"
    },
    "2860": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2861": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2862": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2863": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2864": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2865": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2866": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2867": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xB3C"
    },
    "2871": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2872": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2874": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2875": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2876": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2877": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "POP",
      "path": "13"
    },
    "2878": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "GAS",
      "path": "13"
    },
    "2879": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "2880": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2881": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2882": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2883": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xB51"
    },
    "2887": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2888": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2889": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2891": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2892": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2893": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2894": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2896": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2897": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2898": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "POP",
      "path": "13"
    },
    "2899": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "POP",
      "path": "13"
    },
    "2900": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "POP",
      "path": "13"
    },
    "2901": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "POP",
      "path": "13"
    },
    "2902": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2904": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2905": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2906": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2908": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "NOT",
      "path": "13"
    },
    "2909": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2911": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2912": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "ADD",
      "path": "13"
    },
    "2913": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "AND",
      "path": "13"
    },
    "2914": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2915": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "ADD",
      "path": "13"
    },
    "2916": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2917": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2919": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2920": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "POP",
      "path": "13"
    },
    "2921": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2922": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "ADD",
      "path": "13"
    },
    "2923": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2924": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xB77"
    },
    "2928": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2929": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2930": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1126"
    },
    "2934": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        3039,
        3058
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2935": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3039,
        3058
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2936": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3017,
        3058
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2937": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3017,
        3058
      ],
      "op": "POP",
      "path": "13"
    },
    "2938": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3095,
        3106
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 21
    },
    "2939": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3076,
        3091
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2940": {
      "branch": 28,
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3076,
        3106
      ],
      "op": "EQ",
      "path": "13"
    },
    "2941": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3068,
        3153
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xBDD"
    },
    "2945": {
      "branch": 28,
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3068,
        3153
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2946": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3068,
        3153
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2948": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3068,
        3153
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2949": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2955": {
      "op": "SHL"
    },
    "2956": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3068,
        3153
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2957": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3068,
        3153
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2960": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3068,
        3153
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2962": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3068,
        3153
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2963": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3068,
        3153
      ],
      "op": "ADD",
      "path": "13"
    },
    "2964": {
      "op": "MSTORE"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2969": {
      "op": "DUP3"
    },
    "2970": {
      "op": "ADD"
    },
    "2971": {
      "op": "MSTORE"
    },
    "2972": {
      "op": "PUSH32",
      "value": "0x52656465656D65657220646F6573206E6F7420686F6C642074686520656E7469"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3007": {
      "op": "DUP3"
    },
    "3008": {
      "op": "ADD"
    },
    "3009": {
      "op": "MSTORE"
    },
    "3010": {
      "op": "PUSH10",
      "value": "0x39329039BAB838363C97"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3023": {
      "op": "SHL"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3026": {
      "op": "DUP3"
    },
    "3027": {
      "op": "ADD"
    },
    "3028": {
      "op": "MSTORE"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3031": {
      "op": "ADD"
    },
    "3032": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3068,
        3153
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x56B"
    },
    "3036": {
      "op": "JUMP"
    },
    "3037": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3068,
        3153
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3038": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 22,
      "value": "0x40"
    },
    "3040": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3041": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3048": {
      "op": "SHL"
    },
    "3049": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3050": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3057": {
      "op": "SHL"
    },
    "3058": {
      "op": "SUB"
    },
    "3059": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3181
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3060": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3181
      ],
      "op": "AND",
      "path": "13"
    },
    "3061": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3181
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3062": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3181
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "3067": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3181
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3068": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC0F"
    },
    "3072": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3073": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3182,
        3192
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3074": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3182,
        3192
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3075": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3202,
        3206
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "3076": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3202,
        3206
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3077": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3209,
        3224
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3078": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3209,
        3224
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3079": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3081": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "ADD",
      "path": "13"
    },
    "3082": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1086"
    },
    "3086": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        3163,
        3225
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3087": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3088": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3090": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3092": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3093": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3094": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3095": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "SUB",
      "path": "13"
    },
    "3096": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3097": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3099": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3100": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3101": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3102": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3103": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3104": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3105": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC2A"
    },
    "3109": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3110": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3112": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3113": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3114": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3115": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "POP",
      "path": "13"
    },
    "3116": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "GAS",
      "path": "13"
    },
    "3117": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "CALL",
      "path": "13"
    },
    "3118": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3119": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3120": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3121": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC3F"
    },
    "3125": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3126": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3127": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3129": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3130": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3131": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3132": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3134": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3135": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3136": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "POP",
      "path": "13"
    },
    "3137": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "POP",
      "path": "13"
    },
    "3138": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "POP",
      "path": "13"
    },
    "3139": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "POP",
      "path": "13"
    },
    "3140": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3142": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3143": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3144": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3146": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "NOT",
      "path": "13"
    },
    "3147": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3149": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3150": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "ADD",
      "path": "13"
    },
    "3151": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "AND",
      "path": "13"
    },
    "3152": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3153": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "ADD",
      "path": "13"
    },
    "3154": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3155": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3157": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3158": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "POP",
      "path": "13"
    },
    "3159": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3160": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "ADD",
      "path": "13"
    },
    "3161": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3162": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC65"
    },
    "3166": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3167": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3168": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1140"
    },
    "3172": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        3163,
        3225
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3173": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3163,
        3225
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3174": {
      "op": "POP"
    },
    "3175": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3235,
        3248
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3177": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3178": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3179": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3180": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3266
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3182": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3184": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3185": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3186": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3187": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3189": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3190": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3191": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3192": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3277
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3193": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3291
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3194": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3291
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3195": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3291
      ],
      "op": "ADD",
      "path": "13"
    },
    "3196": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3291
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3197": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3353,
        3383
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 23
    },
    "3198": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3353,
        3383
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3199": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3200": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3201": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3208": {
      "op": "SHL"
    },
    "3209": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3210": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3217": {
      "op": "SHL"
    },
    "3218": {
      "op": "SUB"
    },
    "3219": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3291
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3220": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3291
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3221": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3291
      ],
      "op": "AND",
      "path": "13"
    },
    "3222": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3291
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3223": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3291
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3224": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3258,
        3291
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3225": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3325
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x42842E0E"
    },
    "3230": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3325
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3231": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xCB0"
    },
    "3235": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3236": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3334,
        3338
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "3237": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3334,
        3338
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3238": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3341,
        3351
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3239": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3341,
        3351
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3240": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3242": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "ADD",
      "path": "13"
    },
    "3243": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1086"
    },
    "3247": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        3302,
        3384
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3248": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3249": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3251": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3253": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3254": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3255": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3256": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "SUB",
      "path": "13"
    },
    "3257": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3258": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3260": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3261": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3262": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3263": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3264": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3265": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3266": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xCCB"
    },
    "3270": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3271": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3273": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3274": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3275": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3276": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "POP",
      "path": "13"
    },
    "3277": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "GAS",
      "path": "13"
    },
    "3278": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "CALL",
      "path": "13"
    },
    "3279": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3280": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3281": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3282": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xCE0"
    },
    "3286": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3287": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3288": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3290": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3291": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3292": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3293": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3295": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3296": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3302,
        3384
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3297": {
      "op": "POP"
    },
    "3298": {
      "op": "POP"
    },
    "3299": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3399,
        3430
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 24,
      "value": "0x40"
    },
    "3301": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3399,
        3430
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3302": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3399,
        3430
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3303": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3408,
        3418
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3304": {
      "op": "DUP2"
    },
    "3305": {
      "op": "MSTORE"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3308": {
      "op": "DUP2"
    },
    "3309": {
      "op": "ADD"
    },
    "3310": {
      "op": "DUP10"
    },
    "3311": {
      "op": "SWAP1"
    },
    "3312": {
      "op": "MSTORE"
    },
    "3313": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3399,
        3430
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369"
    },
    "3346": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3399,
        3430
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3347": {
      "op": "POP"
    },
    "3348": {
      "op": "ADD"
    },
    "3349": {
      "op": "SWAP1"
    },
    "3350": {
      "op": "POP"
    },
    "3351": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        3399,
        3430
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x9B1"
    },
    "3355": {
      "op": "JUMP"
    },
    "3356": {
      "op": "JUMPDEST"
    },
    "3357": {
      "op": "PUSH2",
      "value": "0xCAA"
    },
    "3360": {
      "op": "DUP1"
    },
    "3361": {
      "op": "PUSH3",
      "value": "0x11E7"
    },
    "3365": {
      "op": "DUP4"
    },
    "3366": {
      "op": "CODECOPY"
    },
    "3367": {
      "op": "ADD"
    },
    "3368": {
      "op": "SWAP1"
    },
    "3369": {
      "jump": "o",
      "op": "JUMP"
    },
    "3370": {
      "op": "JUMPDEST"
    },
    "3371": {
      "op": "DUP3"
    },
    "3372": {
      "op": "DUP1"
    },
    "3373": {
      "op": "SLOAD"
    },
    "3374": {
      "op": "PUSH3",
      "value": "0xD38"
    },
    "3378": {
      "op": "SWAP1"
    },
    "3379": {
      "op": "PUSH3",
      "value": "0x11A9"
    },
    "3383": {
      "jump": "i",
      "op": "JUMP"
    },
    "3384": {
      "op": "JUMPDEST"
    },
    "3385": {
      "op": "SWAP1"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3388": {
      "op": "MSTORE"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3393": {
      "op": "KECCAK256"
    },
    "3394": {
      "op": "SWAP1"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3397": {
      "op": "ADD"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3400": {
      "op": "SWAP1"
    },
    "3401": {
      "op": "DIV"
    },
    "3402": {
      "op": "DUP2"
    },
    "3403": {
      "op": "ADD"
    },
    "3404": {
      "op": "SWAP3"
    },
    "3405": {
      "op": "DUP3"
    },
    "3406": {
      "op": "PUSH3",
      "value": "0xD5C"
    },
    "3410": {
      "op": "JUMPI"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3413": {
      "op": "DUP6"
    },
    "3414": {
      "op": "SSTORE"
    },
    "3415": {
      "op": "PUSH3",
      "value": "0xDA7"
    },
    "3419": {
      "op": "JUMP"
    },
    "3420": {
      "op": "JUMPDEST"
    },
    "3421": {
      "op": "DUP3"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3424": {
      "op": "LT"
    },
    "3425": {
      "op": "PUSH3",
      "value": "0xD77"
    },
    "3429": {
      "op": "JUMPI"
    },
    "3430": {
      "op": "DUP1"
    },
    "3431": {
      "op": "MLOAD"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3434": {
      "op": "NOT"
    },
    "3435": {
      "op": "AND"
    },
    "3436": {
      "op": "DUP4"
    },
    "3437": {
      "op": "DUP1"
    },
    "3438": {
      "op": "ADD"
    },
    "3439": {
      "op": "OR"
    },
    "3440": {
      "op": "DUP6"
    },
    "3441": {
      "op": "SSTORE"
    },
    "3442": {
      "op": "PUSH3",
      "value": "0xDA7"
    },
    "3446": {
      "op": "JUMP"
    },
    "3447": {
      "op": "JUMPDEST"
    },
    "3448": {
      "op": "DUP3"
    },
    "3449": {
      "op": "DUP1"
    },
    "3450": {
      "op": "ADD"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3453": {
      "op": "ADD"
    },
    "3454": {
      "op": "DUP6"
    },
    "3455": {
      "op": "SSTORE"
    },
    "3456": {
      "op": "DUP3"
    },
    "3457": {
      "op": "ISZERO"
    },
    "3458": {
      "op": "PUSH3",
      "value": "0xDA7"
    },
    "3462": {
      "op": "JUMPI"
    },
    "3463": {
      "op": "SWAP2"
    },
    "3464": {
      "op": "DUP3"
    },
    "3465": {
      "op": "ADD"
    },
    "3466": {
      "op": "JUMPDEST"
    },
    "3467": {
      "op": "DUP3"
    },
    "3468": {
      "op": "DUP2"
    },
    "3469": {
      "op": "GT"
    },
    "3470": {
      "op": "ISZERO"
    },
    "3471": {
      "op": "PUSH3",
      "value": "0xDA7"
    },
    "3475": {
      "op": "JUMPI"
    },
    "3476": {
      "op": "DUP3"
    },
    "3477": {
      "op": "MLOAD"
    },
    "3478": {
      "op": "DUP3"
    },
    "3479": {
      "op": "SSTORE"
    },
    "3480": {
      "op": "SWAP2"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3483": {
      "op": "ADD"
    },
    "3484": {
      "op": "SWAP2"
    },
    "3485": {
      "op": "SWAP1"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3488": {
      "op": "ADD"
    },
    "3489": {
      "op": "SWAP1"
    },
    "3490": {
      "op": "PUSH3",
      "value": "0xD8A"
    },
    "3494": {
      "op": "JUMP"
    },
    "3495": {
      "op": "JUMPDEST"
    },
    "3496": {
      "op": "POP"
    },
    "3497": {
      "op": "PUSH3",
      "value": "0xDB5"
    },
    "3501": {
      "op": "SWAP3"
    },
    "3502": {
      "op": "SWAP2"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "op": "PUSH3",
      "value": "0xDB9"
    },
    "3508": {
      "jump": "i",
      "op": "JUMP"
    },
    "3509": {
      "op": "JUMPDEST"
    },
    "3510": {
      "op": "POP"
    },
    "3511": {
      "op": "SWAP1"
    },
    "3512": {
      "jump": "o",
      "op": "JUMP"
    },
    "3513": {
      "op": "JUMPDEST"
    },
    "3514": {
      "op": "JUMPDEST"
    },
    "3515": {
      "op": "DUP1"
    },
    "3516": {
      "op": "DUP3"
    },
    "3517": {
      "op": "GT"
    },
    "3518": {
      "op": "ISZERO"
    },
    "3519": {
      "op": "PUSH3",
      "value": "0xDB5"
    },
    "3523": {
      "op": "JUMPI"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3526": {
      "op": "DUP2"
    },
    "3527": {
      "op": "SSTORE"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3530": {
      "op": "ADD"
    },
    "3531": {
      "op": "PUSH3",
      "value": "0xDBA"
    },
    "3535": {
      "op": "JUMP"
    },
    "3536": {
      "op": "JUMPDEST"
    },
    "3537": {
      "op": "DUP1"
    },
    "3538": {
      "op": "CALLDATALOAD"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3545": {
      "op": "SHL"
    },
    "3546": {
      "op": "SUB"
    },
    "3547": {
      "op": "DUP2"
    },
    "3548": {
      "op": "AND"
    },
    "3549": {
      "op": "DUP2"
    },
    "3550": {
      "op": "EQ"
    },
    "3551": {
      "op": "PUSH3",
      "value": "0xDE8"
    },
    "3555": {
      "op": "JUMPI"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3558": {
      "op": "DUP1"
    },
    "3559": {
      "op": "REVERT"
    },
    "3560": {
      "op": "JUMPDEST"
    },
    "3561": {
      "op": "SWAP2"
    },
    "3562": {
      "op": "SWAP1"
    },
    "3563": {
      "op": "POP"
    },
    "3564": {
      "jump": "o",
      "op": "JUMP"
    },
    "3565": {
      "op": "JUMPDEST"
    },
    "3566": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3573": {
      "op": "SHL"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3576": {
      "op": "MSTORE"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3581": {
      "op": "MSTORE"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3586": {
      "op": "REVERT"
    },
    "3587": {
      "op": "JUMPDEST"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3590": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3599": {
      "op": "DUP1"
    },
    "3600": {
      "op": "DUP5"
    },
    "3601": {
      "op": "GT"
    },
    "3602": {
      "op": "ISZERO"
    },
    "3603": {
      "op": "PUSH3",
      "value": "0xE21"
    },
    "3607": {
      "op": "JUMPI"
    },
    "3608": {
      "op": "PUSH3",
      "value": "0xE21"
    },
    "3612": {
      "op": "PUSH3",
      "value": "0xDED"
    },
    "3616": {
      "jump": "i",
      "op": "JUMP"
    },
    "3617": {
      "op": "JUMPDEST"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3620": {
      "op": "MLOAD"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3623": {
      "op": "DUP6"
    },
    "3624": {
      "op": "ADD"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3627": {
      "op": "NOT"
    },
    "3628": {
      "op": "SWAP1"
    },
    "3629": {
      "op": "DUP2"
    },
    "3630": {
      "op": "AND"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3633": {
      "op": "ADD"
    },
    "3634": {
      "op": "AND"
    },
    "3635": {
      "op": "DUP2"
    },
    "3636": {
      "op": "ADD"
    },
    "3637": {
      "op": "SWAP1"
    },
    "3638": {
      "op": "DUP3"
    },
    "3639": {
      "op": "DUP3"
    },
    "3640": {
      "op": "GT"
    },
    "3641": {
      "op": "DUP2"
    },
    "3642": {
      "op": "DUP4"
    },
    "3643": {
      "op": "LT"
    },
    "3644": {
      "op": "OR"
    },
    "3645": {
      "op": "ISZERO"
    },
    "3646": {
      "op": "PUSH3",
      "value": "0xE4C"
    },
    "3650": {
      "op": "JUMPI"
    },
    "3651": {
      "op": "PUSH3",
      "value": "0xE4C"
    },
    "3655": {
      "op": "PUSH3",
      "value": "0xDED"
    },
    "3659": {
      "jump": "i",
      "op": "JUMP"
    },
    "3660": {
      "op": "JUMPDEST"
    },
    "3661": {
      "op": "DUP2"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3664": {
      "op": "MSTORE"
    },
    "3665": {
      "op": "DUP1"
    },
    "3666": {
      "op": "SWAP4"
    },
    "3667": {
      "op": "POP"
    },
    "3668": {
      "op": "DUP6"
    },
    "3669": {
      "op": "DUP2"
    },
    "3670": {
      "op": "MSTORE"
    },
    "3671": {
      "op": "DUP7"
    },
    "3672": {
      "op": "DUP7"
    },
    "3673": {
      "op": "DUP7"
    },
    "3674": {
      "op": "ADD"
    },
    "3675": {
      "op": "GT"
    },
    "3676": {
      "op": "ISZERO"
    },
    "3677": {
      "op": "PUSH3",
      "value": "0xE66"
    },
    "3681": {
      "op": "JUMPI"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3684": {
      "op": "DUP1"
    },
    "3685": {
      "op": "REVERT"
    },
    "3686": {
      "op": "JUMPDEST"
    },
    "3687": {
      "op": "DUP6"
    },
    "3688": {
      "op": "DUP6"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3691": {
      "op": "DUP4"
    },
    "3692": {
      "op": "ADD"
    },
    "3693": {
      "op": "CALLDATACOPY"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3698": {
      "op": "DUP8"
    },
    "3699": {
      "op": "DUP4"
    },
    "3700": {
      "op": "ADD"
    },
    "3701": {
      "op": "ADD"
    },
    "3702": {
      "op": "MSTORE"
    },
    "3703": {
      "op": "POP"
    },
    "3704": {
      "op": "POP"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "op": "SWAP4"
    },
    "3707": {
      "op": "SWAP3"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "op": "POP"
    },
    "3710": {
      "op": "POP"
    },
    "3711": {
      "jump": "o",
      "op": "JUMP"
    },
    "3712": {
      "op": "JUMPDEST"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3715": {
      "op": "DUP3"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3718": {
      "op": "DUP4"
    },
    "3719": {
      "op": "ADD"
    },
    "3720": {
      "op": "SLT"
    },
    "3721": {
      "op": "PUSH3",
      "value": "0xE92"
    },
    "3725": {
      "op": "JUMPI"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3728": {
      "op": "DUP1"
    },
    "3729": {
      "op": "REVERT"
    },
    "3730": {
      "op": "JUMPDEST"
    },
    "3731": {
      "op": "PUSH3",
      "value": "0xEA3"
    },
    "3735": {
      "op": "DUP4"
    },
    "3736": {
      "op": "DUP4"
    },
    "3737": {
      "op": "CALLDATALOAD"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3740": {
      "op": "DUP6"
    },
    "3741": {
      "op": "ADD"
    },
    "3742": {
      "op": "PUSH3",
      "value": "0xE03"
    },
    "3746": {
      "jump": "i",
      "op": "JUMP"
    },
    "3747": {
      "op": "JUMPDEST"
    },
    "3748": {
      "op": "SWAP4"
    },
    "3749": {
      "op": "SWAP3"
    },
    "3750": {
      "op": "POP"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "op": "POP"
    },
    "3753": {
      "jump": "o",
      "op": "JUMP"
    },
    "3754": {
      "op": "JUMPDEST"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3757": {
      "op": "DUP1"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3760": {
      "op": "DUP1"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3763": {
      "op": "DUP1"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3766": {
      "op": "DUP8"
    },
    "3767": {
      "op": "DUP10"
    },
    "3768": {
      "op": "SUB"
    },
    "3769": {
      "op": "SLT"
    },
    "3770": {
      "op": "ISZERO"
    },
    "3771": {
      "op": "PUSH3",
      "value": "0xEC4"
    },
    "3775": {
      "op": "JUMPI"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3778": {
      "op": "DUP1"
    },
    "3779": {
      "op": "REVERT"
    },
    "3780": {
      "op": "JUMPDEST"
    },
    "3781": {
      "op": "PUSH3",
      "value": "0xECF"
    },
    "3785": {
      "op": "DUP8"
    },
    "3786": {
      "op": "PUSH3",
      "value": "0xDD0"
    },
    "3790": {
      "jump": "i",
      "op": "JUMP"
    },
    "3791": {
      "op": "JUMPDEST"
    },
    "3792": {
      "op": "SWAP6"
    },
    "3793": {
      "op": "POP"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3796": {
      "op": "DUP8"
    },
    "3797": {
      "op": "ADD"
    },
    "3798": {
      "op": "CALLDATALOAD"
    },
    "3799": {
      "op": "SWAP5"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3803": {
      "op": "DUP8"
    },
    "3804": {
      "op": "ADD"
    },
    "3805": {
      "op": "CALLDATALOAD"
    },
    "3806": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3815": {
      "op": "DUP1"
    },
    "3816": {
      "op": "DUP3"
    },
    "3817": {
      "op": "GT"
    },
    "3818": {
      "op": "ISZERO"
    },
    "3819": {
      "op": "PUSH3",
      "value": "0xEF4"
    },
    "3823": {
      "op": "JUMPI"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3826": {
      "op": "DUP1"
    },
    "3827": {
      "op": "REVERT"
    },
    "3828": {
      "op": "JUMPDEST"
    },
    "3829": {
      "op": "PUSH3",
      "value": "0xF02"
    },
    "3833": {
      "op": "DUP11"
    },
    "3834": {
      "op": "DUP4"
    },
    "3835": {
      "op": "DUP12"
    },
    "3836": {
      "op": "ADD"
    },
    "3837": {
      "op": "PUSH3",
      "value": "0xE80"
    },
    "3841": {
      "jump": "i",
      "op": "JUMP"
    },
    "3842": {
      "op": "JUMPDEST"
    },
    "3843": {
      "op": "SWAP6"
    },
    "3844": {
      "op": "POP"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3847": {
      "op": "DUP10"
    },
    "3848": {
      "op": "ADD"
    },
    "3849": {
      "op": "CALLDATALOAD"
    },
    "3850": {
      "op": "SWAP2"
    },
    "3851": {
      "op": "POP"
    },
    "3852": {
      "op": "DUP1"
    },
    "3853": {
      "op": "DUP3"
    },
    "3854": {
      "op": "GT"
    },
    "3855": {
      "op": "ISZERO"
    },
    "3856": {
      "op": "PUSH3",
      "value": "0xF19"
    },
    "3860": {
      "op": "JUMPI"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3863": {
      "op": "DUP1"
    },
    "3864": {
      "op": "REVERT"
    },
    "3865": {
      "op": "JUMPDEST"
    },
    "3866": {
      "op": "POP"
    },
    "3867": {
      "op": "PUSH3",
      "value": "0xF28"
    },
    "3871": {
      "op": "DUP10"
    },
    "3872": {
      "op": "DUP3"
    },
    "3873": {
      "op": "DUP11"
    },
    "3874": {
      "op": "ADD"
    },
    "3875": {
      "op": "PUSH3",
      "value": "0xE80"
    },
    "3879": {
      "jump": "i",
      "op": "JUMP"
    },
    "3880": {
      "op": "JUMPDEST"
    },
    "3881": {
      "op": "SWAP4"
    },
    "3882": {
      "op": "POP"
    },
    "3883": {
      "op": "POP"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3886": {
      "op": "DUP8"
    },
    "3887": {
      "op": "ADD"
    },
    "3888": {
      "op": "CALLDATALOAD"
    },
    "3889": {
      "op": "SWAP2"
    },
    "3890": {
      "op": "POP"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3893": {
      "op": "DUP8"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "op": "CALLDATALOAD"
    },
    "3896": {
      "op": "SWAP1"
    },
    "3897": {
      "op": "POP"
    },
    "3898": {
      "op": "SWAP3"
    },
    "3899": {
      "op": "SWAP6"
    },
    "3900": {
      "op": "POP"
    },
    "3901": {
      "op": "SWAP3"
    },
    "3902": {
      "op": "SWAP6"
    },
    "3903": {
      "op": "POP"
    },
    "3904": {
      "op": "SWAP3"
    },
    "3905": {
      "op": "SWAP6"
    },
    "3906": {
      "jump": "o",
      "op": "JUMP"
    },
    "3907": {
      "op": "JUMPDEST"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3912": {
      "op": "DUP3"
    },
    "3913": {
      "op": "DUP5"
    },
    "3914": {
      "op": "SUB"
    },
    "3915": {
      "op": "SLT"
    },
    "3916": {
      "op": "ISZERO"
    },
    "3917": {
      "op": "PUSH3",
      "value": "0xF56"
    },
    "3921": {
      "op": "JUMPI"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3924": {
      "op": "DUP1"
    },
    "3925": {
      "op": "REVERT"
    },
    "3926": {
      "op": "JUMPDEST"
    },
    "3927": {
      "op": "POP"
    },
    "3928": {
      "op": "CALLDATALOAD"
    },
    "3929": {
      "op": "SWAP2"
    },
    "3930": {
      "op": "SWAP1"
    },
    "3931": {
      "op": "POP"
    },
    "3932": {
      "jump": "o",
      "op": "JUMP"
    },
    "3933": {
      "op": "JUMPDEST"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3936": {
      "op": "DUP1"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3939": {
      "op": "DUP1"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3942": {
      "op": "DUP6"
    },
    "3943": {
      "op": "DUP8"
    },
    "3944": {
      "op": "SUB"
    },
    "3945": {
      "op": "SLT"
    },
    "3946": {
      "op": "ISZERO"
    },
    "3947": {
      "op": "PUSH3",
      "value": "0xF74"
    },
    "3951": {
      "op": "JUMPI"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3954": {
      "op": "DUP1"
    },
    "3955": {
      "op": "REVERT"
    },
    "3956": {
      "op": "JUMPDEST"
    },
    "3957": {
      "op": "PUSH3",
      "value": "0xF7F"
    },
    "3961": {
      "op": "DUP6"
    },
    "3962": {
      "op": "PUSH3",
      "value": "0xDD0"
    },
    "3966": {
      "jump": "i",
      "op": "JUMP"
    },
    "3967": {
      "op": "JUMPDEST"
    },
    "3968": {
      "op": "SWAP4"
    },
    "3969": {
      "op": "POP"
    },
    "3970": {
      "op": "PUSH3",
      "value": "0xF8F"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3976": {
      "op": "DUP7"
    },
    "3977": {
      "op": "ADD"
    },
    "3978": {
      "op": "PUSH3",
      "value": "0xDD0"
    },
    "3982": {
      "jump": "i",
      "op": "JUMP"
    },
    "3983": {
      "op": "JUMPDEST"
    },
    "3984": {
      "op": "SWAP3"
    },
    "3985": {
      "op": "POP"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3988": {
      "op": "DUP6"
    },
    "3989": {
      "op": "ADD"
    },
    "3990": {
      "op": "CALLDATALOAD"
    },
    "3991": {
      "op": "SWAP2"
    },
    "3992": {
      "op": "POP"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3995": {
      "op": "DUP6"
    },
    "3996": {
      "op": "ADD"
    },
    "3997": {
      "op": "CALLDATALOAD"
    },
    "3998": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4007": {
      "op": "DUP2"
    },
    "4008": {
      "op": "GT"
    },
    "4009": {
      "op": "ISZERO"
    },
    "4010": {
      "op": "PUSH3",
      "value": "0xFB3"
    },
    "4014": {
      "op": "JUMPI"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4017": {
      "op": "DUP1"
    },
    "4018": {
      "op": "REVERT"
    },
    "4019": {
      "op": "JUMPDEST"
    },
    "4020": {
      "op": "DUP6"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4024": {
      "op": "DUP2"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "op": "DUP8"
    },
    "4027": {
      "op": "SGT"
    },
    "4028": {
      "op": "PUSH3",
      "value": "0xFC5"
    },
    "4032": {
      "op": "JUMPI"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4035": {
      "op": "DUP1"
    },
    "4036": {
      "op": "REVERT"
    },
    "4037": {
      "op": "JUMPDEST"
    },
    "4038": {
      "op": "PUSH3",
      "value": "0xFD6"
    },
    "4042": {
      "op": "DUP8"
    },
    "4043": {
      "op": "DUP3"
    },
    "4044": {
      "op": "CALLDATALOAD"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4047": {
      "op": "DUP5"
    },
    "4048": {
      "op": "ADD"
    },
    "4049": {
      "op": "PUSH3",
      "value": "0xE03"
    },
    "4053": {
      "jump": "i",
      "op": "JUMP"
    },
    "4054": {
      "op": "JUMPDEST"
    },
    "4055": {
      "op": "SWAP2"
    },
    "4056": {
      "op": "POP"
    },
    "4057": {
      "op": "POP"
    },
    "4058": {
      "op": "SWAP3"
    },
    "4059": {
      "op": "SWAP6"
    },
    "4060": {
      "op": "SWAP2"
    },
    "4061": {
      "op": "SWAP5"
    },
    "4062": {
      "op": "POP"
    },
    "4063": {
      "op": "SWAP3"
    },
    "4064": {
      "op": "POP"
    },
    "4065": {
      "jump": "o",
      "op": "JUMP"
    },
    "4066": {
      "op": "JUMPDEST"
    },
    "4067": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4074": {
      "op": "SHL"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4077": {
      "op": "MSTORE"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4082": {
      "op": "MSTORE"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4087": {
      "op": "REVERT"
    },
    "4088": {
      "op": "JUMPDEST"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4091": {
      "op": "DUP2"
    },
    "4092": {
      "op": "ADD"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4095": {
      "op": "DUP4"
    },
    "4096": {
      "op": "LT"
    },
    "4097": {
      "op": "PUSH3",
      "value": "0x101B"
    },
    "4101": {
      "op": "JUMPI"
    },
    "4102": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4109": {
      "op": "SHL"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4112": {
      "op": "MSTORE"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4117": {
      "op": "MSTORE"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4122": {
      "op": "REVERT"
    },
    "4123": {
      "op": "JUMPDEST"
    },
    "4124": {
      "op": "SWAP2"
    },
    "4125": {
      "op": "SWAP1"
    },
    "4126": {
      "op": "MSTORE"
    },
    "4127": {
      "op": "SWAP1"
    },
    "4128": {
      "jump": "o",
      "op": "JUMP"
    },
    "4129": {
      "op": "JUMPDEST"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4132": {
      "op": "DUP2"
    },
    "4133": {
      "op": "MLOAD"
    },
    "4134": {
      "op": "DUP1"
    },
    "4135": {
      "op": "DUP5"
    },
    "4136": {
      "op": "MSTORE"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4139": {
      "op": "JUMPDEST"
    },
    "4140": {
      "op": "DUP2"
    },
    "4141": {
      "op": "DUP2"
    },
    "4142": {
      "op": "LT"
    },
    "4143": {
      "op": "ISZERO"
    },
    "4144": {
      "op": "PUSH3",
      "value": "0x1049"
    },
    "4148": {
      "op": "JUMPI"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4151": {
      "op": "DUP2"
    },
    "4152": {
      "op": "DUP6"
    },
    "4153": {
      "op": "ADD"
    },
    "4154": {
      "op": "DUP2"
    },
    "4155": {
      "op": "ADD"
    },
    "4156": {
      "op": "MLOAD"
    },
    "4157": {
      "op": "DUP7"
    },
    "4158": {
      "op": "DUP4"
    },
    "4159": {
      "op": "ADD"
    },
    "4160": {
      "op": "DUP3"
    },
    "4161": {
      "op": "ADD"
    },
    "4162": {
      "op": "MSTORE"
    },
    "4163": {
      "op": "ADD"
    },
    "4164": {
      "op": "PUSH3",
      "value": "0x102B"
    },
    "4168": {
      "op": "JUMP"
    },
    "4169": {
      "op": "JUMPDEST"
    },
    "4170": {
      "op": "DUP2"
    },
    "4171": {
      "op": "DUP2"
    },
    "4172": {
      "op": "GT"
    },
    "4173": {
      "op": "ISZERO"
    },
    "4174": {
      "op": "PUSH3",
      "value": "0x105C"
    },
    "4178": {
      "op": "JUMPI"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4183": {
      "op": "DUP4"
    },
    "4184": {
      "op": "DUP8"
    },
    "4185": {
      "op": "ADD"
    },
    "4186": {
      "op": "ADD"
    },
    "4187": {
      "op": "MSTORE"
    },
    "4188": {
      "op": "JUMPDEST"
    },
    "4189": {
      "op": "POP"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4192": {
      "op": "ADD"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4195": {
      "op": "NOT"
    },
    "4196": {
      "op": "AND"
    },
    "4197": {
      "op": "SWAP3"
    },
    "4198": {
      "op": "SWAP1"
    },
    "4199": {
      "op": "SWAP3"
    },
    "4200": {
      "op": "ADD"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4203": {
      "op": "ADD"
    },
    "4204": {
      "op": "SWAP3"
    },
    "4205": {
      "op": "SWAP2"
    },
    "4206": {
      "op": "POP"
    },
    "4207": {
      "op": "POP"
    },
    "4208": {
      "jump": "o",
      "op": "JUMP"
    },
    "4209": {
      "op": "JUMPDEST"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4212": {
      "op": "DUP2"
    },
    "4213": {
      "op": "MSTORE"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4216": {
      "op": "PUSH3",
      "value": "0xEA3"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4222": {
      "op": "DUP4"
    },
    "4223": {
      "op": "ADD"
    },
    "4224": {
      "op": "DUP5"
    },
    "4225": {
      "op": "PUSH3",
      "value": "0x1021"
    },
    "4229": {
      "jump": "i",
      "op": "JUMP"
    },
    "4230": {
      "op": "JUMPDEST"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4237": {
      "op": "SHL"
    },
    "4238": {
      "op": "SUB"
    },
    "4239": {
      "op": "SWAP4"
    },
    "4240": {
      "op": "DUP5"
    },
    "4241": {
      "op": "AND"
    },
    "4242": {
      "op": "DUP2"
    },
    "4243": {
      "op": "MSTORE"
    },
    "4244": {
      "op": "SWAP2"
    },
    "4245": {
      "op": "SWAP1"
    },
    "4246": {
      "op": "SWAP3"
    },
    "4247": {
      "op": "AND"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4250": {
      "op": "DUP3"
    },
    "4251": {
      "op": "ADD"
    },
    "4252": {
      "op": "MSTORE"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4255": {
      "op": "DUP2"
    },
    "4256": {
      "op": "ADD"
    },
    "4257": {
      "op": "SWAP2"
    },
    "4258": {
      "op": "SWAP1"
    },
    "4259": {
      "op": "SWAP2"
    },
    "4260": {
      "op": "MSTORE"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4263": {
      "op": "ADD"
    },
    "4264": {
      "op": "SWAP1"
    },
    "4265": {
      "jump": "o",
      "op": "JUMP"
    },
    "4266": {
      "op": "JUMPDEST"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4269": {
      "op": "DUP2"
    },
    "4270": {
      "op": "MSTORE"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4273": {
      "op": "PUSH3",
      "value": "0x10BF"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4279": {
      "op": "DUP4"
    },
    "4280": {
      "op": "ADD"
    },
    "4281": {
      "op": "DUP8"
    },
    "4282": {
      "op": "PUSH3",
      "value": "0x1021"
    },
    "4286": {
      "jump": "i",
      "op": "JUMP"
    },
    "4287": {
      "op": "JUMPDEST"
    },
    "4288": {
      "op": "DUP3"
    },
    "4289": {
      "op": "DUP2"
    },
    "4290": {
      "op": "SUB"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4293": {
      "op": "DUP5"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "MSTORE"
    },
    "4296": {
      "op": "PUSH3",
      "value": "0x10D3"
    },
    "4300": {
      "op": "DUP2"
    },
    "4301": {
      "op": "DUP8"
    },
    "4302": {
      "op": "PUSH3",
      "value": "0x1021"
    },
    "4306": {
      "jump": "i",
      "op": "JUMP"
    },
    "4307": {
      "op": "JUMPDEST"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4310": {
      "op": "DUP5"
    },
    "4311": {
      "op": "ADD"
    },
    "4312": {
      "op": "SWAP6"
    },
    "4313": {
      "op": "SWAP1"
    },
    "4314": {
      "op": "SWAP6"
    },
    "4315": {
      "op": "MSTORE"
    },
    "4316": {
      "op": "POP"
    },
    "4317": {
      "op": "POP"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4324": {
      "op": "SHL"
    },
    "4325": {
      "op": "SUB"
    },
    "4326": {
      "op": "SWAP2"
    },
    "4327": {
      "op": "SWAP1"
    },
    "4328": {
      "op": "SWAP2"
    },
    "4329": {
      "op": "AND"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4332": {
      "op": "SWAP1"
    },
    "4333": {
      "op": "SWAP2"
    },
    "4334": {
      "op": "ADD"
    },
    "4335": {
      "op": "MSTORE"
    },
    "4336": {
      "op": "SWAP3"
    },
    "4337": {
      "op": "SWAP2"
    },
    "4338": {
      "op": "POP"
    },
    "4339": {
      "op": "POP"
    },
    "4340": {
      "jump": "o",
      "op": "JUMP"
    },
    "4341": {
      "op": "JUMPDEST"
    },
    "4342": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4349": {
      "op": "SHL"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4352": {
      "op": "MSTORE"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4357": {
      "op": "MSTORE"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4362": {
      "op": "REVERT"
    },
    "4363": {
      "op": "JUMPDEST"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4366": {
      "op": "DUP3"
    },
    "4367": {
      "op": "NOT"
    },
    "4368": {
      "op": "DUP3"
    },
    "4369": {
      "op": "GT"
    },
    "4370": {
      "op": "ISZERO"
    },
    "4371": {
      "op": "PUSH3",
      "value": "0x1121"
    },
    "4375": {
      "op": "JUMPI"
    },
    "4376": {
      "op": "PUSH3",
      "value": "0x1121"
    },
    "4380": {
      "op": "PUSH3",
      "value": "0x10F5"
    },
    "4384": {
      "jump": "i",
      "op": "JUMP"
    },
    "4385": {
      "op": "JUMPDEST"
    },
    "4386": {
      "op": "POP"
    },
    "4387": {
      "op": "ADD"
    },
    "4388": {
      "op": "SWAP1"
    },
    "4389": {
      "jump": "o",
      "op": "JUMP"
    },
    "4390": {
      "op": "JUMPDEST"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4395": {
      "op": "DUP3"
    },
    "4396": {
      "op": "DUP5"
    },
    "4397": {
      "op": "SUB"
    },
    "4398": {
      "op": "SLT"
    },
    "4399": {
      "op": "ISZERO"
    },
    "4400": {
      "op": "PUSH3",
      "value": "0x1139"
    },
    "4404": {
      "op": "JUMPI"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4407": {
      "op": "DUP1"
    },
    "4408": {
      "op": "REVERT"
    },
    "4409": {
      "op": "JUMPDEST"
    },
    "4410": {
      "op": "POP"
    },
    "4411": {
      "op": "MLOAD"
    },
    "4412": {
      "op": "SWAP2"
    },
    "4413": {
      "op": "SWAP1"
    },
    "4414": {
      "op": "POP"
    },
    "4415": {
      "jump": "o",
      "op": "JUMP"
    },
    "4416": {
      "op": "JUMPDEST"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4421": {
      "op": "DUP3"
    },
    "4422": {
      "op": "DUP5"
    },
    "4423": {
      "op": "SUB"
    },
    "4424": {
      "op": "SLT"
    },
    "4425": {
      "op": "ISZERO"
    },
    "4426": {
      "op": "PUSH3",
      "value": "0x1153"
    },
    "4430": {
      "op": "JUMPI"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4433": {
      "op": "DUP1"
    },
    "4434": {
      "op": "REVERT"
    },
    "4435": {
      "op": "JUMPDEST"
    },
    "4436": {
      "op": "DUP2"
    },
    "4437": {
      "op": "MLOAD"
    },
    "4438": {
      "op": "DUP1"
    },
    "4439": {
      "op": "ISZERO"
    },
    "4440": {
      "op": "ISZERO"
    },
    "4441": {
      "op": "DUP2"
    },
    "4442": {
      "op": "EQ"
    },
    "4443": {
      "op": "PUSH3",
      "value": "0xEA3"
    },
    "4447": {
      "op": "JUMPI"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4450": {
      "op": "DUP1"
    },
    "4451": {
      "op": "REVERT"
    },
    "4452": {
      "op": "JUMPDEST"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4455": {
      "op": "DUP2"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4458": {
      "op": "NOT"
    },
    "4459": {
      "op": "DIV"
    },
    "4460": {
      "op": "DUP4"
    },
    "4461": {
      "op": "GT"
    },
    "4462": {
      "op": "DUP3"
    },
    "4463": {
      "op": "ISZERO"
    },
    "4464": {
      "op": "ISZERO"
    },
    "4465": {
      "op": "AND"
    },
    "4466": {
      "op": "ISZERO"
    },
    "4467": {
      "op": "PUSH3",
      "value": "0x1181"
    },
    "4471": {
      "op": "JUMPI"
    },
    "4472": {
      "op": "PUSH3",
      "value": "0x1181"
    },
    "4476": {
      "op": "PUSH3",
      "value": "0x10F5"
    },
    "4480": {
      "jump": "i",
      "op": "JUMP"
    },
    "4481": {
      "op": "JUMPDEST"
    },
    "4482": {
      "op": "POP"
    },
    "4483": {
      "op": "MUL"
    },
    "4484": {
      "op": "SWAP1"
    },
    "4485": {
      "jump": "o",
      "op": "JUMP"
    },
    "4486": {
      "op": "JUMPDEST"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4489": {
      "op": "DUP3"
    },
    "4490": {
      "op": "PUSH3",
      "value": "0x11A4"
    },
    "4494": {
      "op": "JUMPI"
    },
    "4495": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4502": {
      "op": "SHL"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4505": {
      "op": "MSTORE"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4510": {
      "op": "MSTORE"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4515": {
      "op": "REVERT"
    },
    "4516": {
      "op": "JUMPDEST"
    },
    "4517": {
      "op": "POP"
    },
    "4518": {
      "op": "DIV"
    },
    "4519": {
      "op": "SWAP1"
    },
    "4520": {
      "jump": "o",
      "op": "JUMP"
    },
    "4521": {
      "op": "JUMPDEST"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4524": {
      "op": "DUP2"
    },
    "4525": {
      "op": "DUP2"
    },
    "4526": {
      "op": "SHR"
    },
    "4527": {
      "op": "SWAP1"
    },
    "4528": {
      "op": "DUP3"
    },
    "4529": {
      "op": "AND"
    },
    "4530": {
      "op": "DUP1"
    },
    "4531": {
      "op": "PUSH3",
      "value": "0x11BE"
    },
    "4535": {
      "op": "JUMPI"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4538": {
      "op": "DUP3"
    },
    "4539": {
      "op": "AND"
    },
    "4540": {
      "op": "SWAP2"
    },
    "4541": {
      "op": "POP"
    },
    "4542": {
      "op": "JUMPDEST"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4545": {
      "op": "DUP3"
    },
    "4546": {
      "op": "LT"
    },
    "4547": {
      "op": "DUP2"
    },
    "4548": {
      "op": "EQ"
    },
    "4549": {
      "op": "ISZERO"
    },
    "4550": {
      "op": "PUSH3",
      "value": "0x11E0"
    },
    "4554": {
      "op": "JUMPI"
    },
    "4555": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4562": {
      "op": "SHL"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4565": {
      "op": "MSTORE"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4570": {
      "op": "MSTORE"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4575": {
      "op": "REVERT"
    },
    "4576": {
      "op": "JUMPDEST"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "SWAP2"
    },
    "4579": {
      "op": "SWAP1"
    },
    "4580": {
      "op": "POP"
    },
    "4581": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "edb8868ba819d5f05bc852e5370cf42a571303c7",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\nimport \"./ERC20Factory.sol\";\n\n// @title\n// @author Web3Wannabe\n// @notice\n// @dev\ncontract FractionalizeNFT is IERC721Receiver {\n\n    address public owner = msg.sender;\n\n    mapping (uint => FractionalizedNFT) private fracNFTs;\n    uint256 public fracNFTCount = 0;\n\n    //    mapping (address => uint256) userFracNFTs;\n\n    struct FractionalizedNFT {\n        uint256 nftTokenId;\n        address erc721Address;\n        address erc20Address;\n        string erc20Symbol;\n\taddress payable originalOwner;\n        uint256 buyoutPrice;\n        State state;\n    }\n\n    enum State { Fractionalized, Redeemed, BoughtOut }\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    event Received(address, uint);\n    event NftReceived(address);\n    event Fractionalized(address, uint);\n    event Redeemed(address, uint);\n    event BoughtOut(address, uint);\n    event Claimed(address, uint);\n\n    // https://blog.soliditylang.org/2020/03/26/fallback-receive-split/\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    fallback() external payable {\n        revert();\n    }\n\n    function getERC20Address(uint256 fracNFTId) public view returns (address) {\n        return fracNFTs[fracNFTId].erc20Address;\n    }\n\n    function getERC20Symbol(uint256 fracNFTId) public view returns (string memory) {\n        return fracNFTs[fracNFTId].erc20Symbol;\n    }\n\n    function getState(uint256 fracNFTId) public view returns (State) {\n        return fracNFTs[fracNFTId].state;\n    }\n\n    function fractionalizeNft(address nftContractAddress,\n                              uint256 nftTokenId,\n                              string memory erc20Name,\n                              string memory erc20Symbol,\n                              uint256 erc20Supply,\n                              uint256 buyoutPrice) public returns (uint256) {\n        ERC721 nft = ERC721(nftContractAddress);\n        nft.safeTransferFrom(msg.sender, address(this), nftTokenId);\n        ERC20 erc20 = (new ERC20Factory)(erc20Name, erc20Symbol, erc20Supply, msg.sender);\n        fracNFTs[fracNFTCount] = FractionalizedNFT({\n            nftTokenId: nftTokenId,\n            erc721Address: nftContractAddress,\n            erc20Address: address(erc20),\n            erc20Symbol: erc20Symbol,\n            originalOwner: payable(msg.sender),\n            buyoutPrice: buyoutPrice,\n            state: State.Fractionalized});\n        uint256 fracNFTId = fracNFTCount;\n        fracNFTCount += 1;\n        emit Fractionalized(msg.sender, fracNFTId);\n        return fracNFTId;\n    }\n\n    function redeem(uint256 fracNFTId) public payable {\n        // A holder of the entire ERC20 supply can send the tokens in order to redeem the NFT.\n        ERC20 erc20 = ERC20(fracNFTs[fracNFTId].erc20Address);\n        uint256 redeemerBalance = erc20.balanceOf(msg.sender);\n        uint256 erc20Supply = erc20.totalSupply();\n        require(redeemerBalance == erc20Supply, \"Redeemeer does not hold the entire supply.\");\n        erc20.transferFrom(msg.sender, address(this), redeemerBalance);\n        ERC721 erc721 = ERC721(fracNFTs[fracNFTId].erc721Address);\n        erc721.safeTransferFrom(address(this), msg.sender, fracNFTs[fracNFTId].nftTokenId);\n        emit Redeemed(msg.sender, fracNFTId);\n    }\n\n    function buyout(uint256 fracNFTId) public payable {\n        // A buyer can buy the NFT as specified by the buyout price by sending ETH to the contract.\n        require(msg.value >= fracNFTs[fracNFTId].buyoutPrice, \"Sender sent less than the buyout price.\");\n        fracNFTs[fracNFTId].state = State.BoughtOut;\n        ERC721 erc721 = ERC721(fracNFTs[fracNFTId].erc721Address);\n        erc721.safeTransferFrom(address(this), msg.sender, fracNFTs[fracNFTId].nftTokenId);\n        emit BoughtOut(msg.sender, fracNFTId);\n    }\n\n    function claim(uint256 fracNFTId) public {\n        // A holder of the ERC20 token can claim his ETH following a buyout.\n        require(fracNFTs[fracNFTId].state == State.BoughtOut, \"Fractionalized NFT has not been bought out.\");\n        ERC20 erc20 = ERC20(fracNFTs[fracNFTId].erc20Address);\n        uint256 claimerBalance = erc20.balanceOf(msg.sender);\n        require(claimerBalance > 0, \"Claimer does not hold any tokens.\");\n        erc20.transferFrom(msg.sender, address(this), claimerBalance);\n        uint256 erc20Supply = erc20.totalSupply();\n        uint256 claimAmountWei = fracNFTs[fracNFTId].buyoutPrice*claimerBalance/erc20Supply;\n        payable(msg.sender).transfer(claimAmountWei);\n        emit Claimed(msg.sender, fracNFTId);\n    }\n\n    function onERC721Received(address operator, address from, uint256 nftTokenId, bytes memory data) public returns (bytes4) {\n        emit NftReceived(msg.sender);\n        return bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"));\n    }\n\n}\n",
  "sourceMap": "262:4717:13:-:0;;;314:33;;;-1:-1:-1;;;;;;314:33:13;337:10;314:33;;;412:31;;797:49;;;;;;;;;-1:-1:-1;821:5:13;:18;;-1:-1:-1;;;;;;821:18:13;829:10;821:18;;;262:4717;;;;;;",
  "sourcePath": "contracts/FractionalizeNFT.sol",
  "type": "contract"
}