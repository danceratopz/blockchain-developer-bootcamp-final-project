{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "BoughtOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        }
      ],
      "name": "Fractionalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "NftReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "buyout",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fracNFTs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "erc721Address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "erc20Symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "originalOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "buyoutPrice",
          "type": "uint256"
        },
        {
          "internalType": "enum FractionalizeNFT.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "erc20Symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "erc20Supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "buyoutPrice",
          "type": "uint256"
        }
      ],
      "name": "fractionalizeNft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getERC20Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getERC20Symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFracNftCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "enum FractionalizeNFT.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "idListLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "10": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol",
    "13": "contracts/ERC20Factory.sol",
    "14": "contracts/FractionalizeNFT.sol",
    "3": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
    "5": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
    "7": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
    "9": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Counters.sol"
  },
  "ast": {
    "absolutePath": "contracts/FractionalizeNFT.sol",
    "exportedSymbols": {
      "Address": [
        2620
      ],
      "Context": [
        2162
      ],
      "Counters": [
        2008
      ],
      "ERC165": [
        2847
      ],
      "ERC20": [
        1118
      ],
      "ERC20Factory": [
        2037
      ],
      "ERC721": [
        1934
      ],
      "FractionalizeNFT": [
        572
      ],
      "IERC165": [
        2859
      ],
      "IERC20": [
        2115
      ],
      "IERC20Metadata": [
        2140
      ],
      "IERC721": [
        2278
      ],
      "IERC721Metadata": [
        2323
      ],
      "IERC721Receiver": [
        2296
      ],
      "Strings": [
        2823
      ]
    },
    "id": 573,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:14"
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 573,
        "sourceUnit": 2009,
        "src": "56:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 573,
        "sourceUnit": 1119,
        "src": "109:55:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 573,
        "sourceUnit": 1935,
        "src": "165:57:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC20Factory.sol",
        "file": "./ERC20Factory.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 573,
        "sourceUnit": 2038,
        "src": "224:28:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2296,
              "src": "508:15:14"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "508:15:14"
          }
        ],
        "canonicalName": "FractionalizeNFT",
        "contractDependencies": [
          2037
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "254:225:14",
          "text": "@title NFT Fractionalizer with Buyout Functionality\n @author Web3Wannabe\n @notice NFTs can be sent to the contract with a specified buyout price. The sender receives the total supply of a newly created ERC20 token."
        },
        "fullyImplemented": true,
        "id": 572,
        "linearizedBaseContracts": [
          572,
          2296
        ],
        "name": "FractionalizeNFT",
        "nameLocation": "488:16:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12,
            "libraryName": {
              "id": 9,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2008,
              "src": "536:8:14"
            },
            "nodeType": "UsingForDirective",
            "src": "530:36:14",
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1940,
                "src": "549:16:14"
              },
              "referencedDeclaration": 1940,
              "src": "549:16:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1940_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "_fracNFTCount",
            "nameLocation": "596:13:14",
            "nodeType": "VariableDeclaration",
            "scope": 572,
            "src": "571:38:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1940_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 14,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1940,
                "src": "571:16:14"
              },
              "referencedDeclaration": 1940,
              "src": "571:16:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1940_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "b141d781",
            "id": 20,
            "mutability": "mutable",
            "name": "fracNFTs",
            "nameLocation": "661:8:14",
            "nodeType": "VariableDeclaration",
            "scope": 572,
            "src": "616:53:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 16,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "624:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "616:37:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT)"
              },
              "valueType": {
                "id": 18,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 17,
                  "name": "FractionalizedNFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "635:17:14"
                },
                "referencedDeclaration": 40,
                "src": "635:17:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage_ptr",
                  "typeString": "struct FractionalizeNFT.FractionalizedNFT"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalizeNFT.FractionalizedNFT",
            "id": 40,
            "members": [
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "fracNFTId",
                "nameLocation": "760:9:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "752:17:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "752:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "nftTokenId",
                "nameLocation": "787:10:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "779:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "779:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "erc721Address",
                "nameLocation": "815:13:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "807:21:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "807:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "erc20Address",
                "nameLocation": "846:12:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "838:20:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "838:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "erc20Symbol",
                "nameLocation": "875:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "868:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 29,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "868:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "erc20Name",
                "nameLocation": "903:9:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "896:16:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 31,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "896:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "originalOwner",
                "nameLocation": "938:13:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "922:29:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 33,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "922:15:14",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "buyoutPrice",
                "nameLocation": "969:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "961:19:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "961:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "996:5:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "990:11:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$44",
                  "typeString": "enum FractionalizeNFT.State"
                },
                "typeName": {
                  "id": 38,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 37,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 44,
                    "src": "990:5:14"
                  },
                  "referencedDeclaration": 44,
                  "src": "990:5:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$44",
                    "typeString": "enum FractionalizeNFT.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FractionalizedNFT",
            "nameLocation": "724:17:14",
            "nodeType": "StructDefinition",
            "scope": 572,
            "src": "717:291:14",
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalizeNFT.State",
            "id": 44,
            "members": [
              {
                "id": 41,
                "name": "Fractionalized",
                "nameLocation": "1035:14:14",
                "nodeType": "EnumValue",
                "src": "1035:14:14"
              },
              {
                "id": 42,
                "name": "Redeemed",
                "nameLocation": "1059:8:14",
                "nodeType": "EnumValue",
                "src": "1059:8:14"
              },
              {
                "id": 43,
                "name": "BoughtOut",
                "nameLocation": "1077:9:14",
                "nodeType": "EnumValue",
                "src": "1077:9:14"
              }
            ],
            "name": "State",
            "nameLocation": "1019:5:14",
            "nodeType": "EnumDefinition",
            "src": "1014:78:14"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "1112:2:14",
              "statements": []
            },
            "id": 48,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1109:2:14"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1112:0:14"
            },
            "scope": 572,
            "src": "1098:16:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 49,
              "nodeType": "StructuredDocumentation",
              "src": "1120:161:14",
              "text": "@notice Emitted when ether is sent to the contract.\n @param sender The sender of the transaction/ether.\n @param value The amount of ether sent."
            },
            "id": 55,
            "name": "Received",
            "nameLocation": "1292:8:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1317:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1301:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1341:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1325:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1300:47:14"
            },
            "src": "1286:62:14"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 56,
              "nodeType": "StructuredDocumentation",
              "src": "1354:133:14",
              "text": "@notice Emitted when an NFT is transferred to the FractionalizeNFT contract.\n @param sender The address that sent the NFT."
            },
            "id": 60,
            "name": "NftReceived",
            "nameLocation": "1498:11:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1526:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1510:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1509:24:14"
            },
            "src": "1492:42:14"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "1540:462:14",
              "text": "@notice Emitted when a user successfully fractionalizes an NFT and receives the total supply of the newly created ERC20 token.\n @param sender The address that sent/fractionalized the NFT (i.e., the address that called fractionalize()).\n @param fracNFTId The ID of the newly fractionalized NFT.\n @param erc20Name The name of the newly created ERC20 token.\n @param erc20Address The contract address of the newly created ERC20 token."
            },
            "id": 71,
            "name": "Fractionalized",
            "nameLocation": "2013:14:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2053:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2037:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "2085:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2069:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2069:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "erc20Name",
                  "nameLocation": "2119:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2104:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2104:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nameLocation": "2146:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2138:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2027:137:14"
            },
            "src": "2007:158:14"
          },
          {
            "constant": false,
            "documentation": {
              "id": 72,
              "nodeType": "StructuredDocumentation",
              "src": "2171:138:14",
              "text": "@notice List of all fractionalized NFT ids.\n @dev Used as a helper when iterating over fractionalized NFTs in frontend clients."
            },
            "functionSelector": "6313531f",
            "id": 75,
            "mutability": "mutable",
            "name": "idList",
            "nameLocation": "2331:6:14",
            "nodeType": "VariableDeclaration",
            "scope": 572,
            "src": "2314:23:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 73,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2314:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 74,
              "nodeType": "ArrayTypeName",
              "src": "2314:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 76,
              "nodeType": "StructuredDocumentation",
              "src": "2344:117:14",
              "text": "@notice idList length.\n @dev Used as a helper when iterating over fractionalized NFTs in frontend clients."
            },
            "functionSelector": "6386cd17",
            "id": 78,
            "mutability": "mutable",
            "name": "idListLength",
            "nameLocation": "2481:12:14",
            "nodeType": "VariableDeclaration",
            "scope": 572,
            "src": "2466:27:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 77,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2466:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "2500:277:14",
              "text": "@notice Emitted when a user successfully redeems an NFT in exchange for the total ERC20 supply.\n @param sender The address that redeemed the NFT (i.e., the address that called redeem()).\n @param fracNFTId The index of the fractionalized NFT that was redeemed."
            },
            "id": 85,
            "name": "Redeemed",
            "nameLocation": "2788:8:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2813:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "2797:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "2837:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "2821:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2821:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2796:51:14"
            },
            "src": "2782:66:14"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 86,
              "nodeType": "StructuredDocumentation",
              "src": "2854:316:14",
              "text": "@notice Emitted when a user successfully claims a payout following the buyout of an NFT from the FractionalizeNFT contract.\n @param sender The address that the user held ERC20 tokens for (i.e., the address that called claim()).\n @param fracNFTId The index of the fractionalized NFT that was bought."
            },
            "id": 92,
            "name": "Claimed",
            "nameLocation": "3181:7:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3205:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "3189:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "3229:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "3213:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3213:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3188:51:14"
            },
            "src": "3175:65:14"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 93,
              "nodeType": "StructuredDocumentation",
              "src": "3246:266:14",
              "text": "@notice Emitted when a user successfully buys an NFT from the FractionalizeNFT contract.\n @param sender The address that bought the NFT (i.e., the address that called buyout()).\n @param fracNFTId The index of the fractionalized NFT that was bought."
            },
            "id": 99,
            "name": "BoughtOut",
            "nameLocation": "3523:9:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3549:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "3533:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3533:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "3573:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "3557:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3557:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3532:51:14"
            },
            "src": "3517:67:14"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "3635:147:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 104,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "3666:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 105,
                              "name": "_fracNFTCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "3678:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1940_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 106,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1952,
                            "src": "3678:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1940_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1940_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3678:23:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3666:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "667261634e4654496420646f6573206e6f7420657869737420696e20667261634e4654732e",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3715:39:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c4ea8c7fd302bde934fd8062fe75054823c4b55bac4d3745962af161338336d",
                          "typeString": "literal_string \"fracNFTId does not exist in fracNFTs.\""
                        },
                        "value": "fracNFTId does not exist in fracNFTs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c4ea8c7fd302bde934fd8062fe75054823c4b55bac4d3745962af161338336d",
                          "typeString": "literal_string \"fracNFTId does not exist in fracNFTs.\""
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3645:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3645:119:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "3645:119:14"
                },
                {
                  "id": 112,
                  "nodeType": "PlaceholderStatement",
                  "src": "3774:1:14"
                }
              ]
            },
            "id": 114,
            "name": "isLegalFracNftId",
            "nameLocation": "3599:16:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "3624:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "3616:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3616:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3615:19:14"
            },
            "src": "3590:192:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "3815:53:14",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3839:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3839:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 120,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3851:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3851:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 117,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "3830:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3830:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "EmitStatement",
                  "src": "3825:36:14"
                }
              ]
            },
            "id": 125,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3795:2:14"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3815:0:14"
            },
            "scope": 572,
            "src": "3788:80:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "3902:25:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 128,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "3912:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:8:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:8:14"
                }
              ]
            },
            "id": 132,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3882:2:14"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3902:0:14"
            },
            "scope": 572,
            "src": "3874:53:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "4155:47:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 138,
                        "name": "_fracNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "4172:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1940_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1952,
                      "src": "4172:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1940_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1940_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4172:23:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 137,
                  "id": 141,
                  "nodeType": "Return",
                  "src": "4165:30:14"
                }
              ]
            },
            "documentation": {
              "id": 133,
              "nodeType": "StructuredDocumentation",
              "src": "3933:160:14",
              "text": "@notice A getter function to get the current number of fractionalized NFT entries in the contract.\n @return The number of fractionalized NFT entries."
            },
            "functionSelector": "8478d997",
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFracNftCount",
            "nameLocation": "4107:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4122:2:14"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "4146:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4146:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4145:9:14"
            },
            "scope": 572,
            "src": "4098:104:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "4547:56:14",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 154,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "4564:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 156,
                      "indexExpression": {
                        "id": 155,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "4573:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4564:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc20Address",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28,
                    "src": "4564:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 153,
                  "id": 158,
                  "nodeType": "Return",
                  "src": "4557:39:14"
                }
              ]
            },
            "documentation": {
              "id": 144,
              "nodeType": "StructuredDocumentation",
              "src": "4208:196:14",
              "text": "@notice A getter function for the contract address of a fractionalized NFT's ERC20 token.\n @param fracNFTId The ID of the fractionalized NFT.\n @return The ERC20 contract address."
            },
            "functionSelector": "d1bc6caa",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 149,
                    "name": "fracNFTId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 146,
                    "src": "4506:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 150,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 148,
                  "name": "isLegalFracNftId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 114,
                  "src": "4489:16:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4489:27:14"
              }
            ],
            "name": "getERC20Address",
            "nameLocation": "4418:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "4442:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "4434:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4434:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4433:19:14"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "4534:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4534:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4533:9:14"
            },
            "scope": 572,
            "src": "4409:194:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "4935:55:14",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 171,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "4952:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 173,
                      "indexExpression": {
                        "id": 172,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "4961:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4952:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc20Symbol",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 30,
                    "src": "4952:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 170,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "4945:38:14"
                }
              ]
            },
            "documentation": {
              "id": 161,
              "nodeType": "StructuredDocumentation",
              "src": "4609:178:14",
              "text": "@notice A getter function for the symbol of a fractionalized NFT's ERC20 token.\n @param fracNFTId The ID of the fractionalized NFT.\n @return The ERC20's symobl."
            },
            "functionSelector": "78fe17e5",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 166,
                    "name": "fracNFTId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 163,
                    "src": "4888:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 167,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 165,
                  "name": "isLegalFracNftId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 114,
                  "src": "4871:16:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4871:27:14"
              }
            ],
            "name": "getERC20Symbol",
            "nameLocation": "4801:14:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "4824:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "4816:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4816:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4815:19:14"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "4916:13:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4916:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4915:15:14"
            },
            "scope": 572,
            "src": "4792:198:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "5345:49:14",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 189,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "5362:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 191,
                      "indexExpression": {
                        "id": 190,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "5371:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5362:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 39,
                    "src": "5362:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$44",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "functionReturnParameters": 188,
                  "id": 193,
                  "nodeType": "Return",
                  "src": "5355:32:14"
                }
              ]
            },
            "documentation": {
              "id": 178,
              "nodeType": "StructuredDocumentation",
              "src": "4996:215:14",
              "text": "@notice A getter function for the state of a fractionalized NFT.\n @param fracNFTId The ID of the fractionalized NFT.\n @return The fractionalized NFT's state (Fractionalized, Redeemed or BoughtOut)."
            },
            "functionSelector": "44c9af28",
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 183,
                    "name": "fracNFTId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 180,
                    "src": "5306:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 184,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 182,
                  "name": "isLegalFracNftId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 114,
                  "src": "5289:16:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5289:27:14"
              }
            ],
            "name": "getState",
            "nameLocation": "5225:8:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "5242:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "5234:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5234:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5233:19:14"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "5334:5:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$44",
                    "typeString": "enum FractionalizeNFT.State"
                  },
                  "typeName": {
                    "id": 186,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 185,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44,
                      "src": "5334:5:14"
                    },
                    "referencedDeclaration": 44,
                    "src": "5334:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$44",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5333:7:14"
            },
            "scope": 572,
            "src": "5216:178:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "6479:986:14",
              "statements": [
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "6495:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 309,
                      "src": "6489:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1118",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 214,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 213,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1118,
                          "src": "6489:5:14"
                        },
                        "referencedDeclaration": 1118,
                        "src": "6489:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1118",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 226,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 220,
                        "name": "erc20Name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "6535:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 221,
                        "name": "erc20Symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "6558:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 222,
                        "name": "erc20Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "6583:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 223,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6608:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6608:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "components": [
                        {
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "6504:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Factory_$2037_$",
                            "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Factory)"
                          },
                          "typeName": {
                            "id": 217,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 216,
                              "name": "ERC20Factory",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2037,
                              "src": "6508:12:14"
                            },
                            "referencedDeclaration": 2037,
                            "src": "6508:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Factory_$2037",
                              "typeString": "contract ERC20Factory"
                            }
                          }
                        }
                      ],
                      "id": 219,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6503:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Factory_$2037_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Factory)"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6503:125:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Factory_$2037",
                      "typeString": "contract ERC20Factory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6489:139:14"
                },
                {
                  "assignments": [
                    228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 228,
                      "mutability": "mutable",
                      "name": "fracNFTId",
                      "nameLocation": "6646:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 309,
                      "src": "6638:17:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 227,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6638:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 232,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 229,
                        "name": "_fracNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "6658:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1940_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1952,
                      "src": "6658:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1940_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1940_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6658:23:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6638:43:14"
                },
                {
                  "expression": {
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 233,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "6691:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 237,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 234,
                            "name": "_fracNFTCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "6700:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1940_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1952,
                          "src": "6700:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1940_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1940_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6700:23:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6691:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 239,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "6770:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 240,
                          "name": "nftTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "6805:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 241,
                          "name": "nftContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "6844:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 244,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "6898:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1118",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$1118",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6890:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 242,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6890:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6890:14:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 246,
                          "name": "erc20Symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "6931:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 247,
                          "name": "erc20Name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6967:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 250,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7013:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7013:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7005:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 248,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7005:8:14",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7005:19:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 253,
                          "name": "buyoutPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "7051:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 254,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "7083:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$44_$",
                              "typeString": "type(enum FractionalizeNFT.State)"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Fractionalized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "7083:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$44",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$44",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        ],
                        "id": 238,
                        "name": "FractionalizedNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "6727:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FractionalizedNFT_$40_storage_ptr_$",
                          "typeString": "type(struct FractionalizeNFT.FractionalizedNFT storage pointer)"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "fracNFTId",
                        "nftTokenId",
                        "erc721Address",
                        "erc20Address",
                        "erc20Symbol",
                        "erc20Name",
                        "originalOwner",
                        "buyoutPrice",
                        "state"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6727:387:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$40_memory_ptr",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT memory"
                      }
                    },
                    "src": "6691:423:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                      "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "6691:423:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 262,
                            "name": "_fracNFTCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "7136:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1940_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1952,
                          "src": "7136:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1940_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1940_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7136:23:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 259,
                        "name": "idList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "7124:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7124:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7124:36:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "7124:36:14"
                },
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 267,
                      "name": "idListLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "7170:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 268,
                        "name": "idList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "7185:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7185:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7170:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "7170:28:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 272,
                        "name": "_fracNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "7208:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1940_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1966,
                      "src": "7208:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1940_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1940_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7208:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "7208:25:14"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "7250:3:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 309,
                      "src": "7243:10:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1934",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 278,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 277,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1934,
                          "src": "7243:6:14"
                        },
                        "referencedDeclaration": 1934,
                        "src": "7243:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1934",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 283,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 281,
                        "name": "nftContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "7263:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 280,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "7256:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1934_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7256:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1934",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7243:39:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 287,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7313:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7313:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 291,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7333:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$572",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$572",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7325:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 289,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7325:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7325:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 293,
                        "name": "nftTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "7340:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 284,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "7292:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1934",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1497,
                      "src": "7292:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7292:59:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "7292:59:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 297,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7381:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7381:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 299,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "7393:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 300,
                        "name": "erc20Symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "7404:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 303,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "7425:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1118",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1118",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7417:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 301,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7417:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7417:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 296,
                      "name": "Fractionalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "7366:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,string memory,address)"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7366:66:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "EmitStatement",
                  "src": "7361:71:14"
                },
                {
                  "expression": {
                    "id": 307,
                    "name": "fracNFTId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 228,
                    "src": "7449:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 212,
                  "id": 308,
                  "nodeType": "Return",
                  "src": "7442:16:14"
                }
              ]
            },
            "documentation": {
              "id": 196,
              "nodeType": "StructuredDocumentation",
              "src": "5400:827:14",
              "text": "@notice Create a fractionalized NFT: Lock the NFT in the contract; create a new ERC20 token, as specified; and transfer the total supply of the token to the sender.\n @param nftContractAddress The address of the NFT that is to be fractionalized.\n @param nftTokenId The token ID of the NFT that is to be fractionalized.\n @param erc20Name The name of the newly created ERC20 token.\n @param erc20Symbol The symbol of the newly created ERC20 token.\n @param erc20Supply The total supply of the newly created ERC20 token.\n @param buyoutPrice The price (in Wei) for which the fractionalized NFT can be be bought for from the contract.\n @dev Note, the NFT must be approved for transfer by the FractionalizeNFT contract.\n @return The ID of the newly created fractionalized NFT."
            },
            "functionSelector": "06fbd1f2",
            "id": 310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fractionalizeNft",
            "nameLocation": "6241:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "nftContractAddress",
                  "nameLocation": "6275:18:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "6267:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6267:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "nftTokenId",
                  "nameLocation": "6311:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "6303:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6303:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "erc20Name",
                  "nameLocation": "6345:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "6331:23:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6331:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "erc20Symbol",
                  "nameLocation": "6378:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "6364:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6364:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "erc20Supply",
                  "nameLocation": "6407:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "6399:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6399:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "buyoutPrice",
                  "nameLocation": "6436:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "6428:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6428:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6257:196:14"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "6470:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6470:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6469:9:14"
            },
            "scope": 572,
            "src": "6232:1233:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "7882:688:14",
              "statements": [
                {
                  "assignments": [
                    318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "7898:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 398,
                      "src": "7892:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1118",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 317,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 316,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1118,
                          "src": "7892:5:14"
                        },
                        "referencedDeclaration": 1118,
                        "src": "7892:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1118",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 325,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 320,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "7912:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 322,
                          "indexExpression": {
                            "id": 321,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "7921:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7912:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "7912:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 319,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "7906:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1118_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7906:39:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1118",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7892:53:14"
                },
                {
                  "assignments": [
                    327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 327,
                      "mutability": "mutable",
                      "name": "redeemerBalance",
                      "nameLocation": "7963:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 398,
                      "src": "7955:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 326,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7955:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 333,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 330,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7997:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7997:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 328,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "7981:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1118",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 671,
                      "src": "7981:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7981:27:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7955:53:14"
                },
                {
                  "assignments": [
                    335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 335,
                      "mutability": "mutable",
                      "name": "erc20Supply",
                      "nameLocation": "8026:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 398,
                      "src": "8018:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8018:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 339,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 336,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "8040:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1118",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 657,
                      "src": "8040:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8040:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8018:41:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 341,
                          "name": "redeemerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 327,
                          "src": "8090:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 342,
                          "name": "erc20Supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "8109:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8090:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656465656d65657220646f6573206e6f7420686f6c642074686520656e7469726520737570706c792e",
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8134:44:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_236101e21dee81e2f18f31894ab8347381b8b05dc8924dcc491bb1cb5e2effc5",
                          "typeString": "literal_string \"Redeemeer does not hold the entire supply.\""
                        },
                        "value": "Redeemeer does not hold the entire supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_236101e21dee81e2f18f31894ab8347381b8b05dc8924dcc491bb1cb5e2effc5",
                          "typeString": "literal_string \"Redeemeer does not hold the entire supply.\""
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8069:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8069:119:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "8069:119:14"
                },
                {
                  "expression": {
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 347,
                          "name": "fracNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "8198:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                            "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                          }
                        },
                        "id": 349,
                        "indexExpression": {
                          "id": 348,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "8207:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8198:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                          "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "8198:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$44",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 351,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "8226:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$44_$",
                          "typeString": "type(enum FractionalizeNFT.State)"
                        }
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Redeemed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "8226:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$44",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "src": "8198:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$44",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "8198:42:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8269:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8269:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 362,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8289:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$572",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$572",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8281:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 360,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8281:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8281:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 364,
                        "name": "redeemerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "8296:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 355,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "8250:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1118",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 779,
                      "src": "8250:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8250:62:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "8250:62:14"
                },
                {
                  "assignments": [
                    369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 369,
                      "mutability": "mutable",
                      "name": "erc721",
                      "nameLocation": "8329:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 398,
                      "src": "8322:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1934",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 368,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 367,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1934,
                          "src": "8322:6:14"
                        },
                        "referencedDeclaration": 1934,
                        "src": "8322:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1934",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 376,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 371,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "8345:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 373,
                          "indexExpression": {
                            "id": 372,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "8354:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8345:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "8345:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 370,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "8338:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1934_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8338:41:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1934",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8322:57:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 382,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8434:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$572",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$572",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8426:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 380,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8426:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8426:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 384,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8453:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8453:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 386,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "8477:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 388,
                          "indexExpression": {
                            "id": 387,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "8486:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8477:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "8477:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 377,
                        "name": "erc721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "8389:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1934",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1497,
                      "src": "8389:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8389:128:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "8389:128:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 393,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8541:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8541:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 395,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "8553:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 392,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "8532:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8532:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "EmitStatement",
                  "src": "8527:36:14"
                }
              ]
            },
            "documentation": {
              "id": 311,
              "nodeType": "StructuredDocumentation",
              "src": "7471:364:14",
              "text": "@notice A holder of the entire ERC20 supply can call redeem in order to receive the underlying NFT from the contract. The ERC20 tokens get transferred to the contract address.\n @param fracNFTId The ID of the fractionalized NFT to redem.\n @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling redeem()."
            },
            "functionSelector": "db006a75",
            "id": 399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "7849:6:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "7864:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "7856:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7856:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7855:19:14"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7882:0:14"
            },
            "scope": 572,
            "src": "7840:730:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 486,
              "nodeType": "Block",
              "src": "8966:682:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$44",
                          "typeString": "enum FractionalizeNFT.State"
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 406,
                              "name": "fracNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "8997:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                              }
                            },
                            "id": 408,
                            "indexExpression": {
                              "id": 407,
                              "name": "fracNFTId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 402,
                              "src": "9006:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8997:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                              "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                            }
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "8997:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$44",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 410,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "9026:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$44_$",
                              "typeString": "type(enum FractionalizeNFT.State)"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "BoughtOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "9026:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$44",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        },
                        "src": "8997:44:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4672616374696f6e616c697a6564204e465420686173206e6f74206265656e20626f75676874206f75742e",
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9055:45:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6d91eba7472d4b813c8f94f076251f17b02a0abaa0ce0e02ab9b764eb0faeb0",
                          "typeString": "literal_string \"Fractionalized NFT has not been bought out.\""
                        },
                        "value": "Fractionalized NFT has not been bought out."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6d91eba7472d4b813c8f94f076251f17b02a0abaa0ce0e02ab9b764eb0faeb0",
                          "typeString": "literal_string \"Fractionalized NFT has not been bought out.\""
                        }
                      ],
                      "id": 405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8976:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8976:134:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "8976:134:14"
                },
                {
                  "assignments": [
                    418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 418,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "9126:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 486,
                      "src": "9120:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1118",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 417,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 416,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1118,
                          "src": "9120:5:14"
                        },
                        "referencedDeclaration": 1118,
                        "src": "9120:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1118",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 425,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 420,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "9140:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 422,
                          "indexExpression": {
                            "id": 421,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "9149:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9140:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "9140:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 419,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "9134:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1118_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9134:39:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1118",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9120:53:14"
                },
                {
                  "assignments": [
                    427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 427,
                      "mutability": "mutable",
                      "name": "claimerBalance",
                      "nameLocation": "9191:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 486,
                      "src": "9183:22:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 426,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9183:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 430,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9224:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9224:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 428,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "9208:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1118",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 671,
                      "src": "9208:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9208:27:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9183:52:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 435,
                          "name": "claimerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 427,
                          "src": "9253:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9270:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9253:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d657220646f6573206e6f7420686f6c6420616e7920746f6b656e732e",
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9273:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ef2c2aa2fbe0e8bc377bb41a097869566475b4d7ba3c50ff52a2b50a0a082d5",
                          "typeString": "literal_string \"Claimer does not hold any tokens.\""
                        },
                        "value": "Claimer does not hold any tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ef2c2aa2fbe0e8bc377bb41a097869566475b4d7ba3c50ff52a2b50a0a082d5",
                          "typeString": "literal_string \"Claimer does not hold any tokens.\""
                        }
                      ],
                      "id": 434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9245:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9245:64:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "9245:64:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 444,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9338:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9338:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 448,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9358:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$572",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$572",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9350:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 446,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9350:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9350:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 450,
                        "name": "claimerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "9365:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 441,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "9319:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1118",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 779,
                      "src": "9319:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9319:61:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "9319:61:14"
                },
                {
                  "assignments": [
                    454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 454,
                      "mutability": "mutable",
                      "name": "erc20Supply",
                      "nameLocation": "9398:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 486,
                      "src": "9390:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 453,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9390:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 458,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 455,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "9412:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1118",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 657,
                      "src": "9412:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9412:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9390:41:14"
                },
                {
                  "assignments": [
                    460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 460,
                      "mutability": "mutable",
                      "name": "claimAmountWei",
                      "nameLocation": "9449:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 486,
                      "src": "9441:22:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 459,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9441:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 470,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 461,
                                "name": "fracNFTs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "9467:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                                  "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                                }
                              },
                              "id": 463,
                              "indexExpression": {
                                "id": 462,
                                "name": "fracNFTId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 402,
                                "src": "9476:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9467:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                                "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                              }
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyoutPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36,
                            "src": "9467:31:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 465,
                            "name": "claimerBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 427,
                            "src": "9513:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9467:60:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 467,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9466:62:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 468,
                      "name": "erc20Supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "9531:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9466:76:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9441:101:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 477,
                        "name": "claimAmountWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "9581:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 473,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9560:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9560:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9552:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 471,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9552:8:14",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9552:19:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9552:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9552:44:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "9552:44:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 481,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9619:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9619:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 483,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "9631:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 480,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "9611:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9611:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 485,
                  "nodeType": "EmitStatement",
                  "src": "9606:35:14"
                }
              ]
            },
            "documentation": {
              "id": 400,
              "nodeType": "StructuredDocumentation",
              "src": "8576:344:14",
              "text": "@notice Allows a holder of the ERC20 tokens to claim his share of the sale proceedings (in ether) following a buyout of the fractionalized NFT.\n @param fracNFTId The ID of the fractionalized NFT to claim a payout for.\n @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling claim()."
            },
            "functionSelector": "379607f5",
            "id": 487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "8934:5:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "8948:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "8940:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8940:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8939:19:14"
            },
            "returnParameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8966:0:14"
            },
            "scope": 572,
            "src": "8925:723:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 543,
              "nodeType": "Block",
              "src": "9869:552:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 494,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10000:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "10000:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 496,
                              "name": "fracNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "10013:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                              }
                            },
                            "id": 498,
                            "indexExpression": {
                              "id": 497,
                              "name": "fracNFTId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 490,
                              "src": "10022:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10013:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                              "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                            }
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "10013:31:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10000:44:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e6465722073656e74206c657373207468616e20746865206275796f75742070726963652e",
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10058:41:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd942614136c8476e28cdebb64c2d910549cbb0b70edce8dfe326f03f4643a50",
                          "typeString": "literal_string \"Sender sent less than the buyout price.\""
                        },
                        "value": "Sender sent less than the buyout price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd942614136c8476e28cdebb64c2d910549cbb0b70edce8dfe326f03f4643a50",
                          "typeString": "literal_string \"Sender sent less than the buyout price.\""
                        }
                      ],
                      "id": 493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9979:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9979:130:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 503,
                  "nodeType": "ExpressionStatement",
                  "src": "9979:130:14"
                },
                {
                  "expression": {
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 504,
                          "name": "fracNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "10119:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                            "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                          }
                        },
                        "id": 506,
                        "indexExpression": {
                          "id": 505,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "10128:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10119:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                          "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "10119:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$44",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 508,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "10147:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$44_$",
                          "typeString": "type(enum FractionalizeNFT.State)"
                        }
                      },
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BoughtOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "10147:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$44",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "src": "10119:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$44",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "10119:43:14"
                },
                {
                  "assignments": [
                    514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 514,
                      "mutability": "mutable",
                      "name": "erc721",
                      "nameLocation": "10179:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 543,
                      "src": "10172:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1934",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 513,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 512,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1934,
                          "src": "10172:6:14"
                        },
                        "referencedDeclaration": 1934,
                        "src": "10172:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1934",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 521,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 516,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "10195:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 518,
                          "indexExpression": {
                            "id": 517,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 490,
                            "src": "10204:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10195:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "10195:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 515,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "10188:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1934_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10188:41:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1934",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10172:57:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 527,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10284:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$572",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$572",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10276:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 525,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10276:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10276:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 529,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10303:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10303:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 531,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "10327:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 533,
                          "indexExpression": {
                            "id": 532,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 490,
                            "src": "10336:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10327:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "10327:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 522,
                        "name": "erc721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "10239:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1934",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1497,
                      "src": "10239:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10239:128:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "10239:128:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 538,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10392:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10392:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 540,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "10404:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 537,
                      "name": "BoughtOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "10382:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10382:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 542,
                  "nodeType": "EmitStatement",
                  "src": "10377:37:14"
                }
              ]
            },
            "documentation": {
              "id": 488,
              "nodeType": "StructuredDocumentation",
              "src": "9654:160:14",
              "text": "@notice Allows an account to buy the NFT from the contract for the specified buyout price.\n @param fracNFTId The ID of the fractionalized NFT to buy."
            },
            "functionSelector": "07bec66f",
            "id": 544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyout",
            "nameLocation": "9828:6:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "9843:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "9835:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9835:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9834:19:14"
            },
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9869:0:14"
            },
            "scope": 572,
            "src": "9819:602:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2295
            ],
            "body": {
              "id": 570,
              "nodeType": "Block",
              "src": "10713:172:14",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 559,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10740:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10740:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 558,
                      "name": "NftReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "10728:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10728:23:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "EmitStatement",
                  "src": "10723:28:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f6e455243373231526563656976656428616464726573732c616464726573732c75696e743235362c627974657329",
                            "id": 566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10814:49:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            },
                            "value": "onERC721Received(address,address,uint256,bytes)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            }
                          ],
                          "id": 565,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10804:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10804:60:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10780:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 563,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "10780:6:14",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10780:98:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 557,
                  "id": 569,
                  "nodeType": "Return",
                  "src": "10761:117:14"
                }
              ]
            },
            "documentation": {
              "id": 545,
              "nodeType": "StructuredDocumentation",
              "src": "10427:122:14",
              "text": "@dev Required to use safeTransferFrom() from OpenZeppelin's ERC721 contract (when transferring NFTs to this contract)."
            },
            "functionSelector": "150b7a02",
            "id": 571,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "10563:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10597:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "10589:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10589:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10623:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "10615:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10615:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "nftTokenId",
                  "nameLocation": "10645:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "10637:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10637:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10678:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "10665:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10665:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10579:109:14"
            },
            "returnParameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "10705:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "10705:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10704:8:14"
            },
            "scope": 572,
            "src": "10554:331:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 573,
        "src": "479:10408:14",
        "usedErrors": []
      }
    ],
    "src": "32:10856:14"
  },
  "bytecode": "",
  "bytecodeSha1": "d24bfba503d7afd841be94009c06a468831c2262",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1500
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "FractionalizeNFT",
  "coverageMap": {
    "branches": {
      "0": {},
      "10": {},
      "13": {},
      "14": {
        "FractionalizeNFT.buyout": {
          "29": [
            10000,
            10044,
            true
          ]
        },
        "FractionalizeNFT.claim": {
          "30": [
            8997,
            9041,
            true
          ],
          "31": [
            9253,
            9271,
            true
          ]
        },
        "FractionalizeNFT.redeem": {
          "32": [
            8090,
            8120,
            true
          ]
        }
      },
      "3": {},
      "5": {},
      "7": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "10": {},
      "13": {},
      "14": {
        "FractionalizeNFT.<fallback>": {
          "0": [
            3912,
            3920
          ]
        },
        "FractionalizeNFT.<receive>": {
          "1": [
            3825,
            3861
          ]
        },
        "FractionalizeNFT.buyout": {
          "10": [
            9979,
            10109
          ],
          "11": [
            10119,
            10162
          ],
          "12": [
            10239,
            10367
          ],
          "13": [
            10377,
            10414
          ]
        },
        "FractionalizeNFT.claim": {
          "16": [
            8976,
            9110
          ],
          "17": [
            9245,
            9309
          ],
          "18": [
            9319,
            9380
          ],
          "19": [
            9552,
            9596
          ],
          "20": [
            9606,
            9641
          ]
        },
        "FractionalizeNFT.fractionalizeNft": {
          "3": [
            6691,
            7114
          ],
          "4": [
            7124,
            7160
          ],
          "5": [
            7170,
            7198
          ],
          "7": [
            7292,
            7351
          ],
          "8": [
            7361,
            7432
          ],
          "9": [
            7442,
            7458
          ]
        },
        "FractionalizeNFT.getERC20Address": {
          "23": [
            4557,
            4596
          ]
        },
        "FractionalizeNFT.getERC20Symbol": {
          "22": [
            4945,
            4983
          ]
        },
        "FractionalizeNFT.getState": {
          "21": [
            5355,
            5387
          ]
        },
        "FractionalizeNFT.onERC721Received": {
          "14": [
            10723,
            10751
          ],
          "15": [
            10761,
            10878
          ]
        },
        "FractionalizeNFT.redeem": {
          "24": [
            8069,
            8188
          ],
          "25": [
            8198,
            8240
          ],
          "26": [
            8250,
            8312
          ],
          "27": [
            8389,
            8517
          ],
          "28": [
            8527,
            8563
          ]
        }
      },
      "3": {},
      "5": {},
      "7": {},
      "9": {
        "Counters.current": {
          "2": [
            857,
            878
          ]
        },
        "Counters.increment": {
          "6": [
            978,
            997
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC20",
    "ERC20Factory",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "479:10408:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3912:8;;;479:10408;;;;;;;;;;;;;;;;3912:8;;;479:10408;;;;;;;;;;;;;;;;;;;;;3912:8;;;479:10408;;;;;;;;;;;;;;;;3912:8;;;479:10408;;;;3830:31;;3851:9;;3839:10;;3830:31;;;;;479:10408;;3912:8;;;6232:1233;;;;;;;;;;-1:-1:-1;6232:1233:14;;;;;:::i;:::-;;:::i;:::-;;;2243:25:15;;;2231:2;2216:18;6232:1233:14;;;;;;;;9819:602;;;;;;:::i;:::-;;:::i;:::-;;10554:331;;;;;;;;;;-1:-1:-1;10554:331:14;;;;;:::i;:::-;;:::i;:::-;;;3310:66:15;3298:79;;;3280:98;;3268:2;3253:18;10554:331:14;3136:248:15;8925:723:14;;;;;;;;;;-1:-1:-1;8925:723:14;;;;;:::i;:::-;;:::i;5216:178::-;;;;;;;;;;-1:-1:-1;5216:178:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2314:23::-;;;;;;;;;;-1:-1:-1;2314:23:14;;;;;:::i;:::-;;:::i;2466:27::-;;;;;;;;;;;;;;;;4792:198;;;;;;;;;;-1:-1:-1;4792:198:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4098:104::-;;;;;;;;;;-1:-1:-1;4146:7:14;864:14:9;4098:104:14;;616:53;;;;;;;;;;-1:-1:-1;616:53:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;4409:194::-;;;;;;;;;;-1:-1:-1;4409:194:14;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;6028:55:15;;;6010:74;;5998:2;5983:18;4409:194:14;5864:226:15;7840:730:14;;;;;;;;;;-1:-1:-1;7840:730:14;;;;;:::i;:::-;;:::i;6232:1233::-;6470:7;6489:11;6535:9;6558:11;6583;6608:10;6503:125;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;6489:139;;6638:17;6658:23;:13;864:14:9;;773:112;6658:23:14;6638:43;;6727:387;;;;;;;;6770:9;6727:387;;;;6805:10;6727:387;;;;6844:18;-1:-1:-1;;;;;6727:387:14;;;;;6898:5;-1:-1:-1;;;;;6727:387:14;;;;;6931:11;6727:387;;;;6967:9;6727:387;;;;7013:10;-1:-1:-1;;;;;6727:387:14;;;;;7051:11;6727:387;;;;7083:20;6727:387;;;;;;;;:::i;:::-;;;6691:8;:33;6700:23;6691:33;864:14:9;;773:112;6700:23:14;6691:33;;;;;;;;;;;;;;-1:-1:-1;6691:33:14;:423;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6691:423:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:33;;:423;;;;;;;;;;;:::i;:::-;-1:-1:-1;6691:423:14;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6691:423:14;;;;;;;;;;;-1:-1:-1;;;;;6691:423:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6691:423:14;-1:-1:-1;6691:423:14;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;7136:13:14;864:14:9;;7124:6:14;:36;;;;;;;;;;;;;;;;;;7185:13;;7170:12;:28;978:19:9;;;-1:-1:-1;7292:59:14;;-1:-1:-1;;;7292:59:14;;7313:10;7292:59;;;6939:34:15;7333:4:14;6989:18:15;;;6982:43;7041:18;;;7034:34;;;7263:18:14;;-1:-1:-1;;;;;7292:20:14;;;;;6851:18:15;;7292:59:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7404:11;7366:66;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;6028:55:15;;6010:74;;7366:66:14;7393:9;;7381:10;;7366:66;;5998:2:15;5983:18;7366:66:14;;;;;;;-1:-1:-1;7449:9:14;6232:1233;-1:-1:-1;;;;;;;;6232:1233:14:o;9819:602::-;10013:19;;;;:8;:19;;;;;:31;;;10000:9;:44;;9979:130;;;;-1:-1:-1;;;9979:130:14;;7562:2:15;9979:130:14;;;7544:21:15;7601:2;7581:18;;;7574:30;7640:34;7620:18;;;7613:62;7711:9;7691:18;;;7684:37;7738:19;;9979:130:14;;;;;;;;;10119:19;;;;:8;:19;;;;;;;;;:25;;;:43;;-1:-1:-1;;10119:43:14;10147:15;10119:43;;;;;;10195:33;;;10327:30;;;10239:128;;-1:-1:-1;;;10239:128:14;;10284:4;10239:128;;;6939:34:15;10303:10:14;6989:18:15;;;6982:43;7041:18;;;7034:34;;;;-1:-1:-1;;;;;10195:33:14;;;;10239:23;;6851:18:15;;10239:128:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10382:32:14;;10404:9;;-1:-1:-1;10392:10:14;;-1:-1:-1;10382:32:14;;;;;9869:552;9819:602;:::o;10554:331::-;10728:23;;10705:6;;10740:10;;10728:23;;10705:6;;10728:23;-1:-1:-1;10804:60:14;10554:331;;;;;;:::o;8925:723::-;9026:15;8997:19;;;;:8;:19;;;;;:25;;;;;:44;;;;;;;;:::i;:::-;;8976:134;;;;-1:-1:-1;;;8976:134:14;;7970:2:15;8976:134:14;;;7952:21:15;8009:2;7989:18;;;7982:30;8048:34;8028:18;;;8021:62;8119:13;8099:18;;;8092:41;8150:19;;8976:134:14;7768:407:15;8976:134:14;9120:11;9140:19;;;:8;:19;;;;;;:32;;;9208:27;;-1:-1:-1;;;9208:27:14;;9224:10;9208:27;;;6010:74:15;-1:-1:-1;;;;;9140:32:14;;;;9120:11;9140:32;;9208:15;;5983:18:15;;9208:27:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9183:52;;9270:1;9253:14;:18;9245:64;;;;-1:-1:-1;;;9245:64:14;;8571:2:15;9245:64:14;;;8553:21:15;8610:2;8590:18;;;8583:30;8649:34;8629:18;;;8622:62;8720:3;8700:18;;;8693:31;8741:19;;9245:64:14;8369:397:15;9245:64:14;9319:61;;-1:-1:-1;;;9319:61:14;;9338:10;9319:61;;;6939:34:15;9358:4:14;6989:18:15;;;6982:43;7041:18;;;7034:34;;;-1:-1:-1;;;;;9319:18:14;;;;;6851::15;;9319:61:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9390:19;9412:5;-1:-1:-1;;;;;9412:17:14;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9441:22;9467:19;;;:8;:19;;;;;:31;;;9390:41;;-1:-1:-1;9441:22:14;9390:41;;9467:60;;9513:14;;9467:60;:::i;:::-;9466:76;;;;:::i;:::-;9552:44;;9441:101;;-1:-1:-1;9560:10:14;;9552:44;;;;;9441:101;;9552:44;;;;9441:101;9560:10;9552:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9611:30:14;;9631:9;;9619:10;;9611:30;;;;;8966:682;;;;8925:723;:::o;5216:178::-;5334:5;5306:9;3678:23;:13;864:14:9;;773:112;3678:23:14;3666:9;:35;3645:119;;;;-1:-1:-1;;;3645:119:14;;9861:2:15;3645:119:14;;;9843:21:15;9900:2;9880:18;;;9873:30;9939:34;9919:18;;;9912:62;-1:-1:-1;;;9990:18:15;;;9983:35;10035:19;;3645:119:14;9659:401:15;3645:119:14;5362:19:::1;::::0;;;:8:::1;:19;::::0;;;;:25:::1;;::::0;::::1;;::::0;-1:-1:-1;3774:1:14::1;5216:178:::0;;;;:::o;2314:23::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2314:23:14;:::o;4792:198::-;4916:13;4888:9;3678:23;:13;864:14:9;;773:112;3678:23:14;3666:9;:35;3645:119;;;;-1:-1:-1;;;3645:119:14;;9861:2:15;3645:119:14;;;9843:21:15;9900:2;9880:18;;;9873:30;9939:34;9919:18;;;9912:62;-1:-1:-1;;;9990:18:15;;;9983:35;10035:19;;3645:119:14;9659:401:15;3645:119:14;4952:19:::1;::::0;;;:8:::1;:19;::::0;;;;:31:::1;;4945:38:::0;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4792:198:::0;;;;:::o;616:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;616:53:14;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;616:53:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;616:53:14;;;;;;-1:-1:-1;616:53:14;;;:::o;4409:194::-;4534:7;4506:9;3678:23;:13;864:14:9;;773:112;3678:23:14;3666:9;:35;3645:119;;;;-1:-1:-1;;;3645:119:14;;9861:2:15;3645:119:14;;;9843:21:15;9900:2;9880:18;;;9873:30;9939:34;9919:18;;;9912:62;-1:-1:-1;;;9990:18:15;;;9983:35;10035:19;;3645:119:14;9659:401:15;3645:119:14;-1:-1:-1;;4564:19:14::1;::::0;;;:8:::1;:19;::::0;;;;:32:::1;;::::0;-1:-1:-1;;;;;4564:32:14::1;::::0;4409:194::o;7840:730::-;7892:11;7912:19;;;:8;:19;;;;;;:32;;;7981:27;;-1:-1:-1;;;7981:27:14;;7997:10;7981:27;;;6010:74:15;-1:-1:-1;;;;;7912:32:14;;;;7892:11;7912:32;;7981:15;;5983:18:15;;7981:27:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7955:53;;8018:19;8040:5;-1:-1:-1;;;;;8040:17:14;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8018:41;;8109:11;8090:15;:30;8069:119;;;;-1:-1:-1;;;8069:119:14;;10709:2:15;8069:119:14;;;10691:21:15;10748:2;10728:18;;;10721:30;10787:34;10767:18;;;10760:62;10858:12;10838:18;;;10831:40;10888:19;;8069:119:14;10507:406:15;8069:119:14;8198:19;;;;8226:14;8198:19;;;;;;;;;:25;;:42;;-1:-1:-1;;8198:42:14;;;;;;8250:62;-1:-1:-1;;;8250:62:14;;8269:10;8250:62;;;6939:34:15;8289:4:14;6989:18:15;;;6982:43;7041:18;;;7034:34;;;-1:-1:-1;;;;;8250:18:14;;;;;6851::15;;8250:62:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8322:13:14;8345:19;;;:8;:19;;;;;;;;;:33;;;;8477:30;;;8389:128;;-1:-1:-1;;;8389:128:14;;8434:4;8389:128;;;6939:34:15;8453:10:14;6989:18:15;;;6982:43;7041:18;;;7034:34;;;;-1:-1:-1;;;;;8345:33:14;;;;8389:23;;6851:18:15;;8389:128:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8532:31:14;;8553:9;;-1:-1:-1;8541:10:14;;-1:-1:-1;8532:31:14;;;;;7882:688;;;;7840:730;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:196:15;82:20;;-1:-1:-1;;;;;131:54:15;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:184::-;-1:-1:-1;;;264:1:15;257:88;364:4;361:1;354:15;388:4;385:1;378:15;404:632;469:5;499:18;540:2;532:6;529:14;526:40;;;546:18;;:::i;:::-;621:2;615:9;589:2;675:15;;-1:-1:-1;;671:24:15;;;697:2;667:33;663:42;651:55;;;721:18;;;741:22;;;718:46;715:72;;;767:18;;:::i;:::-;807:10;803:2;796:22;836:6;827:15;;866:6;858;851:22;906:3;897:6;892:3;888:16;885:25;882:45;;;923:1;920;913:12;882:45;973:6;968:3;961:4;953:6;949:17;936:44;1028:1;1021:4;1012:6;1004;1000:19;996:30;989:41;;;;404:632;;;;;:::o;1041:222::-;1084:5;1137:3;1130:4;1122:6;1118:17;1114:27;1104:55;;1155:1;1152;1145:12;1104:55;1177:80;1253:3;1244:6;1231:20;1224:4;1216:6;1212:17;1177:80;:::i;:::-;1168:89;1041:222;-1:-1:-1;;;1041:222:15:o;1268:824::-;1392:6;1400;1408;1416;1424;1432;1485:3;1473:9;1464:7;1460:23;1456:33;1453:53;;;1502:1;1499;1492:12;1453:53;1525:29;1544:9;1525:29;:::i;:::-;1515:39;;1601:2;1590:9;1586:18;1573:32;1563:42;;1656:2;1645:9;1641:18;1628:32;1679:18;1720:2;1712:6;1709:14;1706:34;;;1736:1;1733;1726:12;1706:34;1759:50;1801:7;1792:6;1781:9;1777:22;1759:50;:::i;:::-;1749:60;;1862:2;1851:9;1847:18;1834:32;1818:48;;1891:2;1881:8;1878:16;1875:36;;;1907:1;1904;1897:12;1875:36;;1930:52;1974:7;1963:8;1952:9;1948:24;1930:52;:::i;:::-;1920:62;;;2029:3;2018:9;2014:19;2001:33;1991:43;;2081:3;2070:9;2066:19;2053:33;2043:43;;1268:824;;;;;;;;:::o;2279:180::-;2338:6;2391:2;2379:9;2370:7;2366:23;2362:32;2359:52;;;2407:1;2404;2397:12;2359:52;-1:-1:-1;2430:23:15;;2279:180;-1:-1:-1;2279:180:15:o;2464:667::-;2559:6;2567;2575;2583;2636:3;2624:9;2615:7;2611:23;2607:33;2604:53;;;2653:1;2650;2643:12;2604:53;2676:29;2695:9;2676:29;:::i;:::-;2666:39;;2724:38;2758:2;2747:9;2743:18;2724:38;:::i;:::-;2714:48;;2809:2;2798:9;2794:18;2781:32;2771:42;;2864:2;2853:9;2849:18;2836:32;2891:18;2883:6;2880:30;2877:50;;;2923:1;2920;2913:12;2877:50;2946:22;;2999:4;2991:13;;2987:27;-1:-1:-1;2977:55:15;;3028:1;3025;3018:12;2977:55;3051:74;3117:7;3112:2;3099:16;3094:2;3090;3086:11;3051:74;:::i;:::-;3041:84;;;2464:667;;;;;;;:::o;3389:184::-;-1:-1:-1;;;3438:1:15;3431:88;3538:4;3535:1;3528:15;3562:4;3559:1;3552:15;3578:290;3655:1;3648:5;3645:12;3635:200;;-1:-1:-1;;;3688:1:15;3681:88;3792:4;3789:1;3782:15;3820:4;3817:1;3810:15;3635:200;3844:18;;3578:290::o;3873:198::-;4013:2;3998:18;;4025:40;4002:9;4047:6;4025:40;:::i;:::-;3873:198;;;;:::o;4076:258::-;4148:1;4158:113;4172:6;4169:1;4166:13;4158:113;;;4248:11;;;4242:18;4229:11;;;4222:39;4194:2;4187:10;4158:113;;;4289:6;4286:1;4283:13;4280:48;;;4324:1;4315:6;4310:3;4306:16;4299:27;4280:48;;4076:258;;;:::o;4339:::-;4381:3;4419:5;4413:12;4446:6;4441:3;4434:19;4462:63;4518:6;4511:4;4506:3;4502:14;4495:4;4488:5;4484:16;4462:63;:::i;:::-;4579:2;4558:15;-1:-1:-1;;4554:29:15;4545:39;;;;4586:4;4541:50;;4339:258;-1:-1:-1;;4339:258:15:o;4602:220::-;4751:2;4740:9;4733:21;4714:4;4771:45;4812:2;4801:9;4797:18;4789:6;4771:45;:::i;4827:1032::-;5205:4;5234:3;5264:6;5253:9;5246:25;5307:6;5302:2;5291:9;5287:18;5280:34;-1:-1:-1;;;;;5423:2:15;5415:6;5411:15;5406:2;5395:9;5391:18;5384:43;5475:2;5467:6;5463:15;5458:2;5447:9;5443:18;5436:43;5516:2;5510:3;5499:9;5495:19;5488:31;5542:45;5583:2;5572:9;5568:18;5560:6;5542:45;:::i;:::-;5528:59;;5636:9;5628:6;5624:22;5618:3;5607:9;5603:19;5596:51;5664:33;5690:6;5682;5664:33;:::i;:::-;5656:41;;5746:2;5738:6;5734:15;5728:3;5717:9;5713:19;5706:44;;;5787:6;5781:3;5770:9;5766:19;5759:35;5803:50;5848:3;5837:9;5833:19;5825:6;5803:50;:::i;:::-;4827:1032;;;;;;;;;;;;:::o;6095:576::-;6348:3;6337:9;6330:22;6311:4;6375:46;6416:3;6405:9;6401:19;6393:6;6375:46;:::i;:::-;6469:9;6461:6;6457:22;6452:2;6441:9;6437:18;6430:50;6497:33;6523:6;6515;6497:33;:::i;:::-;6489:41;;;6566:6;6561:2;6550:9;6546:18;6539:34;-1:-1:-1;;;;;6613:6:15;6609:55;6604:2;6593:9;6589:18;6582:83;6095:576;;;;;;;:::o;7079:276::-;7210:3;7248:6;7242:13;7264:53;7310:6;7305:3;7298:4;7290:6;7286:17;7264:53;:::i;:::-;7333:16;;;;;7079:276;-1:-1:-1;;7079:276:15:o;8180:184::-;8250:6;8303:2;8291:9;8282:7;8278:23;8274:32;8271:52;;;8319:1;8316;8309:12;8271:52;-1:-1:-1;8342:16:15;;8180:184;-1:-1:-1;8180:184:15:o;8771:277::-;8838:6;8891:2;8879:9;8870:7;8866:23;8862:32;8859:52;;;8907:1;8904;8897:12;8859:52;8939:9;8933:16;8992:5;8985:13;8978:21;8971:5;8968:32;8958:60;;9014:1;9011;9004:12;9053:322;9093:7;9159:1;9155;9151:6;9147:14;9144:1;9141:21;9136:1;9129:9;9122:17;9118:45;9115:225;;;-1:-1:-1;;;9193:1:15;9186:88;9297:4;9294:1;9287:15;9325:4;9322:1;9315:15;9115:225;-1:-1:-1;9360:9:15;;9053:322::o;9380:274::-;9420:1;9446;9436:189;;-1:-1:-1;;;9478:1:15;9471:88;9582:4;9579:1;9572:15;9610:4;9607:1;9600:15;9436:189;-1:-1:-1;9639:9:15;;9380:274::o;10065:437::-;10144:1;10140:12;;;;10187;;;10208:61;;10262:4;10254:6;10250:17;10240:27;;10208:61;10315:2;10307:6;10304:14;10284:18;10281:38;10278:218;;;-1:-1:-1;;;10349:1:15;10342:88;10453:4;10450:1;10443:15;10481:4;10478:1;10471:15",
  "language": "Solidity",
  "natspec": {
    "author": "Web3Wannabe",
    "events": {
      "BoughtOut(address,uint256)": {
        "params": {
          "fracNFTId": "The index of the fractionalized NFT that was bought.",
          "sender": "The address that bought the NFT (i.e., the address that called buyout())."
        }
      },
      "Claimed(address,uint256)": {
        "params": {
          "fracNFTId": "The index of the fractionalized NFT that was bought.",
          "sender": "The address that the user held ERC20 tokens for (i.e., the address that called claim())."
        }
      },
      "Fractionalized(address,uint256,string,address)": {
        "params": {
          "erc20Address": "The contract address of the newly created ERC20 token.",
          "erc20Name": "The name of the newly created ERC20 token.",
          "fracNFTId": "The ID of the newly fractionalized NFT.",
          "sender": "The address that sent/fractionalized the NFT (i.e., the address that called fractionalize())."
        }
      },
      "NftReceived(address)": {
        "params": {
          "sender": "The address that sent the NFT."
        }
      },
      "Received(address,uint256)": {
        "params": {
          "sender": "The sender of the transaction/ether.",
          "value": "The amount of ether sent."
        }
      },
      "Redeemed(address,uint256)": {
        "params": {
          "fracNFTId": "The index of the fractionalized NFT that was redeemed.",
          "sender": "The address that redeemed the NFT (i.e., the address that called redeem())."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "buyout(uint256)": {
        "notice": "Allows an account to buy the NFT from the contract for the specified buyout price.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT to buy."
        }
      },
      "claim(uint256)": {
        "details": "Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling claim().",
        "notice": "Allows a holder of the ERC20 tokens to claim his share of the sale proceedings (in ether) following a buyout of the fractionalized NFT.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT to claim a payout for."
        }
      },
      "fractionalizeNft(address,uint256,string,string,uint256,uint256)": {
        "details": "Note, the NFT must be approved for transfer by the FractionalizeNFT contract.",
        "notice": "Create a fractionalized NFT: Lock the NFT in the contract; create a new ERC20 token, as specified; and transfer the total supply of the token to the sender.",
        "params": {
          "buyoutPrice": "The price (in Wei) for which the fractionalized NFT can be be bought for from the contract.",
          "erc20Name": "The name of the newly created ERC20 token.",
          "erc20Supply": "The total supply of the newly created ERC20 token.",
          "erc20Symbol": "The symbol of the newly created ERC20 token.",
          "nftContractAddress": "The address of the NFT that is to be fractionalized.",
          "nftTokenId": "The token ID of the NFT that is to be fractionalized."
        },
        "returns": {
          "_0": "The ID of the newly created fractionalized NFT."
        }
      },
      "getERC20Address(uint256)": {
        "notice": "A getter function for the contract address of a fractionalized NFT's ERC20 token.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT."
        },
        "returns": {
          "_0": "The ERC20 contract address."
        }
      },
      "getERC20Symbol(uint256)": {
        "notice": "A getter function for the symbol of a fractionalized NFT's ERC20 token.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT."
        },
        "returns": {
          "_0": "The ERC20's symobl."
        }
      },
      "getFracNftCount()": {
        "notice": "A getter function to get the current number of fractionalized NFT entries in the contract.",
        "returns": {
          "_0": "The number of fractionalized NFT entries."
        }
      },
      "getState(uint256)": {
        "notice": "A getter function for the state of a fractionalized NFT.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT."
        },
        "returns": {
          "_0": "The fractionalized NFT's state (Fractionalized, Redeemed or BoughtOut)."
        }
      },
      "idList(uint256)": {
        "notice": "List of all fractionalized NFT ids."
      },
      "idListLength()": {
        "notice": "idList length."
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Required to use safeTransferFrom() from OpenZeppelin's ERC721 contract (when transferring NFTs to this contract)."
      },
      "redeem(uint256)": {
        "details": "Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling redeem().",
        "notice": "A holder of the entire ERC20 supply can call redeem in order to receive the underlying NFT from the contract. The ERC20 tokens get transferred to the contract address.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT to redem."
        }
      }
    },
    "notice": "NFTs can be sent to the contract with a specified buyout price. The sender receives the total supply of a newly created ERC20 token.",
    "stateVariables": {
      "idList": {
        "details": "Used as a helper when iterating over fractionalized NFTs in frontend clients."
      },
      "idListLength": {
        "details": "Used as a helper when iterating over fractionalized NFTs in frontend clients."
      }
    },
    "title": "NFT Fractionalizer with Buyout Functionality",
    "version": 1
  },
  "offset": [
    479,
    10887
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0xDB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6386CD17 GT PUSH3 0x7D JUMPI DUP1 PUSH4 0xB141D781 GT PUSH3 0x54 JUMPI DUP1 PUSH4 0xB141D781 EQ PUSH3 0x29E JUMPI DUP1 PUSH4 0xD1BC6CAA EQ PUSH3 0x2DA JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH3 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6386CD17 EQ PUSH3 0x23B JUMPI DUP1 PUSH4 0x78FE17E5 EQ PUSH3 0x253 JUMPI DUP1 PUSH4 0x8478D997 EQ PUSH3 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x379607F5 GT PUSH3 0xB2 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH3 0x1BD JUMPI DUP1 PUSH4 0x44C9AF28 EQ PUSH3 0x1E2 JUMPI DUP1 PUSH4 0x6313531F EQ PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FBD1F2 EQ PUSH3 0x115 JUMPI DUP1 PUSH4 0x7BEC66F EQ PUSH3 0x14D JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH3 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH3 0x110 JUMPI PUSH1 0x40 MLOAD CALLVALUE SWAP1 CALLER SWAP1 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP1 PUSH1 0x0 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x13A PUSH3 0x134 CALLDATASIZE PUSH1 0x4 PUSH3 0x136A JUMP JUMPDEST PUSH3 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x164 PUSH3 0x15E CALLDATASIZE PUSH1 0x4 PUSH3 0x1403 JUMP JUMPDEST PUSH3 0x63D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x18B PUSH3 0x185 CALLDATASIZE PUSH1 0x4 PUSH3 0x141D JUMP JUMPDEST PUSH3 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x144 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x164 PUSH3 0x1DC CALLDATASIZE PUSH1 0x4 PUSH3 0x1403 JUMP JUMPDEST PUSH3 0x7E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x207 PUSH3 0x201 CALLDATASIZE PUSH1 0x4 PUSH3 0x1403 JUMP JUMPDEST PUSH3 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x144 SWAP2 SWAP1 PUSH3 0x14DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x13A PUSH3 0x235 CALLDATASIZE PUSH1 0x4 PUSH3 0x1403 JUMP JUMPDEST PUSH3 0xBB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x13A PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x278 PUSH3 0x272 CALLDATASIZE PUSH1 0x4 PUSH3 0x1403 JUMP JUMPDEST PUSH3 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x144 SWAP2 SWAP1 PUSH3 0x1552 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH3 0x13A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2C3 PUSH3 0x2BD CALLDATASIZE PUSH1 0x4 PUSH3 0x1403 JUMP JUMPDEST PUSH3 0xCE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x144 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1567 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2FF PUSH3 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH3 0x1403 JUMP JUMPDEST PUSH3 0xE6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x144 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x164 PUSH3 0x337 CALLDATASIZE PUSH1 0x4 PUSH3 0x1403 JUMP JUMPDEST PUSH3 0xEF9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 DUP6 CALLER PUSH1 0x40 MLOAD PUSH3 0x352 SWAP1 PUSH3 0x11DC JUMP JUMPDEST PUSH3 0x361 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x37E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH3 0x38D PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x3FC JUMPI PUSH3 0x3FC PUSH3 0x14A2 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x0 PUSH3 0x40B DUP2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH3 0x499 SWAP3 PUSH1 0x4 DUP6 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x11EA JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP1 MLOAD PUSH3 0x4B7 SWAP2 PUSH1 0x5 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x11EA JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x527 JUMPI PUSH3 0x527 PUSH3 0x14A2 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE DUP3 DUP6 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP2 ADD DUP4 SWAP1 SSTORE SWAP1 SLOAD PUSH1 0x3 SSTORE ADD SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP10 SWAP1 MSTORE DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x5D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP7 PUSH1 0x40 MLOAD PUSH3 0x5E9 SWAP2 SWAP1 PUSH3 0x1631 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 MSTORE SWAP1 DUP4 SWAP1 CALLER SWAP1 PUSH32 0xE2C8AEFC9D0A52C93C762509EEEAC2A518C41C52F791B6888C0673D07312C605 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD CALLVALUE LT ISZERO PUSH3 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E6465722073656E74206C657373207468616E20746865206275796F7574 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2070726963652E00000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x744 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x759 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 SWAP3 POP CALLER SWAP2 POP PUSH32 0xFBBD268BB69CF922E3840DC96A6702DC064BAF4B2D9594B5A66A2FE428F3F2AA SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0xCCE71FC9CFCACC4CE8153BDE254A735AE423CDC2B7852FB754F4DE746AC3018F SWAP1 DUP4 SWAP1 LOG2 POP PUSH32 0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x810 JUMPI PUSH3 0x810 PUSH3 0x14A2 JUMP JUMPDEST EQ PUSH3 0x885 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4672616374696F6E616C697A6564204E465420686173206E6F74206265656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x626F75676874206F75742E000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x6C1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x8DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x8F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x916 SWAP2 SWAP1 PUSH3 0x164F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH3 0x990 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D657220646F6573206E6F7420686F6C6420616E7920746F6B656E73 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x9DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x9F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA1A SWAP2 SWAP1 PUSH3 0x1669 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA92 SWAP2 SWAP1 PUSH3 0x164F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 PUSH3 0xAB7 SWAP1 DUP6 SWAP1 PUSH3 0x168D JUMP JUMPDEST PUSH3 0xAC3 SWAP2 SWAP1 PUSH3 0x16BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0xAF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP6 SWAP1 CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH3 0xB36 PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT PUSH3 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x27232A3997 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x6C1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0xBC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH3 0xBE1 PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT PUSH3 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x27232A3997 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x6C1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH3 0xC5D SWAP1 PUSH3 0x16DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xC8B SWAP1 PUSH3 0x16DE JUMP JUMPDEST DUP1 ISZERO PUSH3 0xCDC JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xCB0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xCDC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xCBE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 SWAP4 SWAP1 SWAP3 AND SWAP3 PUSH3 0xD2E SWAP1 PUSH3 0x16DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xD5C SWAP1 PUSH3 0x16DE JUMP JUMPDEST DUP1 ISZERO PUSH3 0xDAD JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xD81 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xDAD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xD8F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH3 0xDC4 SWAP1 PUSH3 0x16DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xDF2 SWAP1 PUSH3 0x16DE JUMP JUMPDEST DUP1 ISZERO PUSH3 0xE43 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xE17 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xE43 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xE25 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x8 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 POP PUSH1 0xFF AND DUP10 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH3 0xE7B PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT PUSH3 0xED9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x27232A3997 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x6C1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xF64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xF8A SWAP2 SWAP1 PUSH3 0x164F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xFC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xFDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1003 SWAP2 SWAP1 PUSH3 0x164F JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH3 0x107C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656465656D65657220646F6573206E6F7420686F6C642074686520656E7469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726520737570706C792E00000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x6C1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x10FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1124 SWAP2 SWAP1 PUSH3 0x1669 JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x118F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x11A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP8 SWAP3 POP CALLER SWAP2 POP PUSH32 0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD74 DUP1 PUSH3 0x1716 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x11F8 SWAP1 PUSH3 0x16DE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x121C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1267 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1237 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1267 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1267 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1267 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x124A JUMP JUMPDEST POP PUSH3 0x1275 SWAP3 SWAP2 POP PUSH3 0x1279 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1275 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x127A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x12A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH3 0x12E1 JUMPI PUSH3 0x12E1 PUSH3 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x130C JUMPI PUSH3 0x130C PUSH3 0x12AD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH3 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1363 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH3 0x12C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x1384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x138F DUP8 PUSH3 0x1290 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x13B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x13C2 DUP11 DUP4 DUP12 ADD PUSH3 0x1340 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x13D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x13E8 DUP10 DUP3 DUP11 ADD PUSH3 0x1340 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x1434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x143F DUP6 PUSH3 0x1290 JUMP JUMPDEST SWAP4 POP PUSH3 0x144F PUSH1 0x20 DUP7 ADD PUSH3 0x1290 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH3 0x1485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1496 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH3 0x12C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH3 0x14D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH3 0x14EB DUP3 DUP5 PUSH3 0x14B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x150E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x14F4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x151E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0x153E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x14F1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x1363 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1524 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP12 DUP4 MSTORE DUP11 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x40 DUP6 ADD MSTORE DUP1 DUP11 AND PUSH1 0x60 DUP6 ADD MSTORE DUP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH3 0x15A1 DUP3 DUP6 ADD DUP11 PUSH3 0x1524 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH3 0x15B7 DUP3 DUP10 PUSH3 0x1524 JUMP JUMPDEST SWAP3 POP DUP1 DUP8 AND PUSH1 0xC0 DUP6 ADD MSTORE POP POP DUP4 PUSH1 0xE0 DUP4 ADD MSTORE PUSH3 0x15D9 PUSH2 0x100 DUP4 ADD DUP5 PUSH3 0x14B8 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH3 0x15FC PUSH1 0x80 DUP4 ADD DUP8 PUSH3 0x1524 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x1610 DUP2 DUP8 PUSH3 0x1524 JUMP JUMPDEST SWAP2 POP POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x1645 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x14F1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x167C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x1363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x16B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x16D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x16F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0xBAC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD74 CODESIZE SUB DUP1 PUSH3 0xD74 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2DD JUMP JUMPDEST DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x16A JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x16A JUMP JUMPDEST POP POP POP PUSH3 0x78 DUP2 DUP4 PUSH3 0x82 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xF1 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x120 SWAP1 DUP5 SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x178 SWAP1 PUSH3 0x399 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x19C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1E7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1B7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1E7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1E7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1E7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1CA JUMP JUMPDEST POP PUSH3 0x1F5 SWAP3 SWAP2 POP PUSH3 0x1F9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1F5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x255 JUMPI PUSH3 0x255 PUSH3 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x280 JUMPI PUSH3 0x280 PUSH3 0x210 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2C1 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2A2 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x2D3 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x31A DUP9 DUP4 DUP10 ADD PUSH3 0x226 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x340 DUP8 DUP3 DUP9 ADD PUSH3 0x226 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x394 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98E DUP1 PUSH3 0x3E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x866 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x38E JUMP JUMPDEST PUSH2 0xFF PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8F7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x221 SWAP1 PUSH2 0x8F7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x243 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x251 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 CALLER DUP5 DUP5 PUSH2 0x45B JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B DUP5 DUP5 DUP5 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x347 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x45B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x285 SWAP2 DUP6 SWAP1 PUSH2 0x389 SWAP1 DUP7 SWAP1 PUSH2 0x932 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8F7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH2 0x444 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x45B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 CALLER DUP5 DUP5 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x771 SWAP1 DUP5 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7F8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7DC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x80A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x858 DUP4 PUSH2 0x820 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x884 DUP5 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP PUSH2 0x892 PUSH1 0x20 DUP6 ADD PUSH2 0x820 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8BD DUP3 PUSH2 0x820 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E0 DUP4 PUSH2 0x820 JUMP JUMPDEST SWAP2 POP PUSH2 0x8EE PUSH1 0x20 DUP5 ADD PUSH2 0x820 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x90B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x92C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x953 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 RETURNDATACOPY XOR 0xC3 SWAP7 PUSH25 0xA5BAA01084CB37942D7727F5FCF4FACFF9B937C4FE17977492 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD LT RETURN BALANCE SWAP11 LOG1 0xD8 LOG3 SWAP11 0x4B 0xAB 0xA6 PUSH14 0xCAB4A0F25F309AA78AA9D1DB39D4 0xC7 0xA8 0xAE 0xF8 CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        479,
        10887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "8": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "LT",
      "path": "14"
    },
    "9": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xDB"
    },
    "13": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "14": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "16": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "17": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "19": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "SHR",
      "path": "14"
    },
    "20": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6386CD17"
    },
    "26": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "GT",
      "path": "14"
    },
    "27": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x7D"
    },
    "31": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB141D781"
    },
    "38": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "GT",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x54"
    },
    "43": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "45": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB141D781"
    },
    "50": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "51": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x29E"
    },
    "55": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "56": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "57": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD1BC6CAA"
    },
    "62": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "63": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2DA"
    },
    "67": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "68": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "69": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDB006A75"
    },
    "74": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "75": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x318"
    },
    "79": {
      "fn": null,
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "80": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 0,
      "value": "0x0"
    },
    "82": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "DUP1",
      "path": "14"
    },
    "83": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "REVERT",
      "path": "14"
    },
    "84": {
      "offset": [
        479,
        10887
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "85": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "86": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6386CD17"
    },
    "91": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "92": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x23B"
    },
    "96": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "97": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "98": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x78FE17E5"
    },
    "103": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "104": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x253"
    },
    "108": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "109": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "110": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8478D997"
    },
    "115": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "116": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x287"
    },
    "120": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "121": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "123": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "DUP1",
      "path": "14"
    },
    "124": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "REVERT",
      "path": "14"
    },
    "125": {
      "offset": [
        479,
        10887
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "126": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "127": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x379607F5"
    },
    "132": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "GT",
      "path": "14"
    },
    "133": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xB2"
    },
    "137": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "138": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "139": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x379607F5"
    },
    "144": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "145": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1BD"
    },
    "149": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "150": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "151": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x44C9AF28"
    },
    "156": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "157": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1E2"
    },
    "161": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "162": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "163": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6313531F"
    },
    "168": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "169": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x216"
    },
    "173": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "174": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "176": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "DUP1",
      "path": "14"
    },
    "177": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "REVERT",
      "path": "14"
    },
    "178": {
      "offset": [
        479,
        10887
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "179": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "180": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6FBD1F2"
    },
    "185": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "186": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x115"
    },
    "190": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "191": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "192": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x7BEC66F"
    },
    "197": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "198": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x14D"
    },
    "202": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "203": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "204": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x150B7A02"
    },
    "209": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "EQ",
      "path": "14"
    },
    "210": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x166"
    },
    "214": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "215": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "217": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "DUP1",
      "path": "14"
    },
    "218": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "REVERT",
      "path": "14"
    },
    "219": {
      "offset": [
        479,
        10887
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "220": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "221": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x110"
    },
    "225": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "226": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3830,
        3861
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 1,
      "value": "0x40"
    },
    "228": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3830,
        3861
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "229": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3851,
        3860
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "230": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3851,
        3860
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "231": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3839,
        3849
      ],
      "op": "CALLER",
      "path": "14"
    },
    "232": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3839,
        3849
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "233": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3830,
        3861
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "266": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3830,
        3861
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "267": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3830,
        3861
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "269": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3830,
        3861
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "270": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3830,
        3861
      ],
      "op": "LOG3",
      "path": "14"
    },
    "271": {
      "offset": [
        479,
        10887
      ],
      "op": "STOP",
      "path": "14"
    },
    "272": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        479,
        10887
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "273": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "275": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "DUP1",
      "path": "14"
    },
    "276": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3912,
        3920
      ],
      "op": "REVERT",
      "path": "14"
    },
    "277": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "278": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "279": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "DUP1",
      "path": "14"
    },
    "280": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "281": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x122"
    },
    "285": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "286": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "288": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "DUP1",
      "path": "14"
    },
    "289": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "REVERT",
      "path": "14"
    },
    "290": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "291": {
      "op": "POP"
    },
    "292": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x13A"
    },
    "296": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x134"
    },
    "300": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "301": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "303": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x136A"
    },
    "307": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6232,
        7465
      ],
      "op": "JUMP",
      "path": "14"
    },
    "308": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "309": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x33D"
    },
    "313": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6232,
        7465
      ],
      "op": "JUMP",
      "path": "14"
    },
    "314": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "315": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "317": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "318": {
      "op": "SWAP1"
    },
    "319": {
      "op": "DUP2"
    },
    "320": {
      "op": "MSTORE"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "323": {
      "op": "ADD"
    },
    "324": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "325": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "327": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "328": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "DUP1",
      "path": "14"
    },
    "329": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "330": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "SUB",
      "path": "14"
    },
    "331": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "332": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "RETURN",
      "path": "14"
    },
    "333": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "334": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x164"
    },
    "338": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15E"
    },
    "342": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "343": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "345": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1403"
    },
    "349": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        9819,
        10421
      ],
      "op": "JUMP",
      "path": "14"
    },
    "350": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "351": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x63D"
    },
    "355": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        9819,
        10421
      ],
      "op": "JUMP",
      "path": "14"
    },
    "356": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "357": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "STOP",
      "path": "14"
    },
    "358": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "359": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "360": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "DUP1",
      "path": "14"
    },
    "361": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "362": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x173"
    },
    "366": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "367": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "369": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "DUP1",
      "path": "14"
    },
    "370": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "REVERT",
      "path": "14"
    },
    "371": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "372": {
      "op": "POP"
    },
    "373": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x18B"
    },
    "377": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x185"
    },
    "381": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "382": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "384": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x141D"
    },
    "388": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "i",
      "offset": [
        10554,
        10885
      ],
      "op": "JUMP",
      "path": "14"
    },
    "389": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "390": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x78E"
    },
    "394": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "i",
      "offset": [
        10554,
        10885
      ],
      "op": "JUMP",
      "path": "14"
    },
    "395": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "396": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "398": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "399": {
      "op": "PUSH32",
      "value": "0xFFFFFFFF00000000000000000000000000000000000000000000000000000000"
    },
    "432": {
      "op": "SWAP1"
    },
    "433": {
      "op": "SWAP2"
    },
    "434": {
      "op": "AND"
    },
    "435": {
      "op": "DUP2"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "439": {
      "op": "ADD"
    },
    "440": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x144"
    },
    "444": {
      "op": "JUMP"
    },
    "445": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "446": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "447": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "448": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "449": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1CA"
    },
    "453": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "454": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "456": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "457": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "REVERT",
      "path": "14"
    },
    "458": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "459": {
      "op": "POP"
    },
    "460": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x164"
    },
    "464": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1DC"
    },
    "468": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "469": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "471": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1403"
    },
    "475": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8925,
        9648
      ],
      "op": "JUMP",
      "path": "14"
    },
    "476": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "477": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x7E5"
    },
    "481": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8925,
        9648
      ],
      "op": "JUMP",
      "path": "14"
    },
    "482": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "483": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "484": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "DUP1",
      "path": "14"
    },
    "485": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "486": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1EF"
    },
    "490": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "491": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "493": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "DUP1",
      "path": "14"
    },
    "494": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "REVERT",
      "path": "14"
    },
    "495": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "496": {
      "op": "POP"
    },
    "497": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x207"
    },
    "501": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x201"
    },
    "505": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "506": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "508": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1403"
    },
    "512": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        5216,
        5394
      ],
      "op": "JUMP",
      "path": "14"
    },
    "513": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "514": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xB29"
    },
    "518": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        5216,
        5394
      ],
      "op": "JUMP",
      "path": "14"
    },
    "519": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "520": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "522": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "523": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x144"
    },
    "527": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "528": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "529": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x14DB"
    },
    "533": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        5216,
        5394
      ],
      "op": "JUMP",
      "path": "14"
    },
    "534": {
      "offset": [
        2314,
        2337
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "535": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "536": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "DUP1",
      "path": "14"
    },
    "537": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "538": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x223"
    },
    "542": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "543": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "545": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "DUP1",
      "path": "14"
    },
    "546": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "REVERT",
      "path": "14"
    },
    "547": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "548": {
      "op": "POP"
    },
    "549": {
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x13A"
    },
    "553": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x235"
    },
    "557": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "558": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "560": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1403"
    },
    "564": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        2314,
        2337
      ],
      "op": "JUMP",
      "path": "14"
    },
    "565": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "566": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xBB2"
    },
    "570": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        2314,
        2337
      ],
      "op": "JUMP",
      "path": "14"
    },
    "571": {
      "offset": [
        2466,
        2493
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "572": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "573": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "DUP1",
      "path": "14"
    },
    "574": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "575": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x248"
    },
    "579": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "580": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "582": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "DUP1",
      "path": "14"
    },
    "583": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "REVERT",
      "path": "14"
    },
    "584": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "585": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "POP",
      "path": "14"
    },
    "586": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x13A"
    },
    "590": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "592": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "593": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "DUP2",
      "path": "14"
    },
    "594": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2466,
        2493
      ],
      "op": "JUMP",
      "path": "14"
    },
    "595": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "596": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "597": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "DUP1",
      "path": "14"
    },
    "598": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "599": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x260"
    },
    "603": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "604": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "606": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "DUP1",
      "path": "14"
    },
    "607": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "REVERT",
      "path": "14"
    },
    "608": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "609": {
      "op": "POP"
    },
    "610": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x278"
    },
    "614": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x272"
    },
    "618": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "619": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "621": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1403"
    },
    "625": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4792,
        4990
      ],
      "op": "JUMP",
      "path": "14"
    },
    "626": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "627": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xBD4"
    },
    "631": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4792,
        4990
      ],
      "op": "JUMP",
      "path": "14"
    },
    "632": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "633": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "635": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "636": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x144"
    },
    "640": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "641": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "642": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1552"
    },
    "646": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4792,
        4990
      ],
      "op": "JUMP",
      "path": "14"
    },
    "647": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "648": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "649": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "DUP1",
      "path": "14"
    },
    "650": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "651": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x294"
    },
    "655": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "656": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "658": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "DUP1",
      "path": "14"
    },
    "659": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "REVERT",
      "path": "14"
    },
    "660": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4146,
        4153
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "664": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 2
    },
    "665": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x13A"
    },
    "669": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        4098,
        4202
      ],
      "op": "JUMP",
      "path": "14"
    },
    "670": {
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "671": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "672": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "673": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "674": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2AB"
    },
    "678": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "679": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "681": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "682": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "REVERT",
      "path": "14"
    },
    "683": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "684": {
      "op": "POP"
    },
    "685": {
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2C3"
    },
    "689": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2BD"
    },
    "693": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "694": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "696": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1403"
    },
    "700": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "701": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "702": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xCE9"
    },
    "706": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "707": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "708": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "710": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "711": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x144"
    },
    "715": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "716": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "717": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "718": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "719": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "720": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "721": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "722": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "723": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "724": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "725": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1567"
    },
    "729": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "730": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "731": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "732": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "DUP1",
      "path": "14"
    },
    "733": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "734": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2E7"
    },
    "738": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "739": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "741": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "DUP1",
      "path": "14"
    },
    "742": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "REVERT",
      "path": "14"
    },
    "743": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "744": {
      "op": "POP"
    },
    "745": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2FF"
    },
    "749": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2F9"
    },
    "753": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "754": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "756": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1403"
    },
    "760": {
      "fn": "FractionalizeNFT.getERC20Address",
      "jump": "i",
      "offset": [
        4409,
        4603
      ],
      "op": "JUMP",
      "path": "14"
    },
    "761": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "762": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xE6E"
    },
    "766": {
      "fn": "FractionalizeNFT.getERC20Address",
      "jump": "i",
      "offset": [
        4409,
        4603
      ],
      "op": "JUMP",
      "path": "14"
    },
    "767": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "768": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "770": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "op": "SUB"
    },
    "779": {
      "op": "SWAP1"
    },
    "780": {
      "op": "SWAP2"
    },
    "781": {
      "op": "AND"
    },
    "782": {
      "op": "DUP2"
    },
    "783": {
      "op": "MSTORE"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "786": {
      "op": "ADD"
    },
    "787": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x144"
    },
    "791": {
      "op": "JUMP"
    },
    "792": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "793": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "794": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "DUP1",
      "path": "14"
    },
    "795": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "796": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x325"
    },
    "800": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "801": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "803": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "DUP1",
      "path": "14"
    },
    "804": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "REVERT",
      "path": "14"
    },
    "805": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "806": {
      "op": "POP"
    },
    "807": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x164"
    },
    "811": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x337"
    },
    "815": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "816": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "818": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1403"
    },
    "822": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7840,
        8570
      ],
      "op": "JUMP",
      "path": "14"
    },
    "823": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "824": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xEF9"
    },
    "828": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7840,
        8570
      ],
      "op": "JUMP",
      "path": "14"
    },
    "829": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "830": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6470,
        6477
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "832": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6489,
        6500
      ],
      "op": "DUP1",
      "path": "14"
    },
    "833": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6535,
        6544
      ],
      "op": "DUP6",
      "path": "14"
    },
    "834": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6558,
        6569
      ],
      "op": "DUP6",
      "path": "14"
    },
    "835": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6583,
        6594
      ],
      "op": "DUP6",
      "path": "14"
    },
    "836": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6608,
        6618
      ],
      "op": "CALLER",
      "path": "14"
    },
    "837": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "839": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "840": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x352"
    },
    "844": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "845": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x11DC"
    },
    "849": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6503,
        6628
      ],
      "op": "JUMP",
      "path": "14"
    },
    "850": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "851": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x361"
    },
    "855": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "856": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "857": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "858": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "859": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "860": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15E7"
    },
    "864": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6503,
        6628
      ],
      "op": "JUMP",
      "path": "14"
    },
    "865": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "866": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "868": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "869": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "DUP1",
      "path": "14"
    },
    "870": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "871": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "SUB",
      "path": "14"
    },
    "872": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "873": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "875": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "CREATE",
      "path": "14"
    },
    "876": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "DUP1",
      "path": "14"
    },
    "877": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "878": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "DUP1",
      "path": "14"
    },
    "879": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "880": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x37E"
    },
    "884": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "885": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "886": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "888": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "DUP1",
      "path": "14"
    },
    "889": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "890": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "891": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "893": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "REVERT",
      "path": "14"
    },
    "894": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "895": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6503,
        6628
      ],
      "op": "POP",
      "path": "14"
    },
    "896": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6489,
        6628
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "897": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6489,
        6628
      ],
      "op": "POP",
      "path": "14"
    },
    "898": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6638,
        6655
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "900": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6658,
        6681
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x38D"
    },
    "904": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6658,
        6671
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "906": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "907": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "908": {
      "fn": "Counters.current",
      "offset": [
        773,
        885
      ],
      "op": "JUMP",
      "path": "9"
    },
    "909": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6658,
        6681
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "910": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6638,
        6681
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "911": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6638,
        6681
      ],
      "op": "POP",
      "path": "14"
    },
    "912": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 3,
      "value": "0x40"
    },
    "914": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "915": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "DUP1",
      "path": "14"
    },
    "916": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x120"
    },
    "919": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "920": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "922": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "923": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "DUP1",
      "path": "14"
    },
    "924": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6770,
        6779
      ],
      "op": "DUP3",
      "path": "14"
    },
    "925": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "DUP2",
      "path": "14"
    },
    "926": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "927": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "929": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "930": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6805,
        6815
      ],
      "op": "DUP10",
      "path": "14"
    },
    "931": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "DUP2",
      "path": "14"
    },
    "932": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "933": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "935": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "936": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6844,
        6862
      ],
      "op": "DUP11",
      "path": "14"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "SUB"
    },
    "945": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "AND",
      "path": "14"
    },
    "946": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "DUP2",
      "path": "14"
    },
    "947": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "948": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "950": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "951": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6898,
        6903
      ],
      "op": "DUP4",
      "path": "14"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "958": {
      "op": "SHL"
    },
    "959": {
      "op": "SUB"
    },
    "960": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "AND",
      "path": "14"
    },
    "961": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "DUP2",
      "path": "14"
    },
    "962": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "963": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "965": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "966": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6931,
        6942
      ],
      "op": "DUP8",
      "path": "14"
    },
    "967": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "DUP2",
      "path": "14"
    },
    "968": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "969": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "971": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "972": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6967,
        6976
      ],
      "op": "DUP9",
      "path": "14"
    },
    "973": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "DUP2",
      "path": "14"
    },
    "974": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "975": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "977": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "978": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7013,
        7023
      ],
      "op": "CALLER",
      "path": "14"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "985": {
      "op": "SHL"
    },
    "986": {
      "op": "SUB"
    },
    "987": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "AND",
      "path": "14"
    },
    "988": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "DUP2",
      "path": "14"
    },
    "989": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "990": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "992": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "993": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7051,
        7062
      ],
      "op": "DUP6",
      "path": "14"
    },
    "994": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "DUP2",
      "path": "14"
    },
    "995": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "996": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "998": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "999": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7083,
        7103
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1001": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1003": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1004": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "GT",
      "path": "14"
    },
    "1005": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1006": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x3FC"
    },
    "1010": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1011": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x3FC"
    },
    "1015": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x14A2"
    },
    "1019": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6727,
        7114
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1020": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1021": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1022": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6727,
        7114
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1023": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1025": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1027": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6700,
        6723
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x40B"
    },
    "1031": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1032": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1033": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1034": {
      "fn": "Counters.current",
      "offset": [
        773,
        885
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1035": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6700,
        6723
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1036": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1037": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1038": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1040": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1041": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1042": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "ADD",
      "path": "14"
    },
    "1043": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1044": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1045": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1046": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1047": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1049": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1050": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1051": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "ADD",
      "path": "14"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1054": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1055": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1056": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1057": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1058": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1059": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1060": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1061": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1062": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1063": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1065": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1066": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1067": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1068": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1069": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1070": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1071": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1072": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1074": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1075": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1076": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1077": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1084": {
      "op": "SHL"
    },
    "1085": {
      "op": "SUB"
    },
    "1086": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1087": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1088": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "AND",
      "path": "14"
    },
    "1089": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "1122": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1123": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1124": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "AND",
      "path": "14"
    },
    "1125": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "OR",
      "path": "14"
    },
    "1126": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1127": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1128": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1129": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "1131": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1132": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1133": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1134": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1136": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1137": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1138": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1139": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1140": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1141": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1142": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1143": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "AND",
      "path": "14"
    },
    "1144": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1145": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "AND",
      "path": "14"
    },
    "1146": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "OR",
      "path": "14"
    },
    "1147": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1148": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1149": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "1151": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1152": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1153": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1154": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1155": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1156": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1157": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        6724
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1158": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x499"
    },
    "1162": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1163": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1165": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1166": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1167": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1168": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1169": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1170": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1171": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1172": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x11EA"
    },
    "1176": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6691,
        7114
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1177": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1181": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1182": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1183": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1184": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1185": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1186": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x4B7"
    },
    "1190": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1191": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1193": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1194": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1195": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1196": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1198": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1199": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1200": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1201": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1202": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x11EA"
    },
    "1206": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6691,
        7114
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1207": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1208": {
      "op": "POP"
    },
    "1209": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC0"
    },
    "1211": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1212": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1213": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1214": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "1216": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1217": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1218": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1219": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1220": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "1253": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "AND",
      "path": "14"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1263": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1264": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "AND",
      "path": "14"
    },
    "1265": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1266": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1267": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1268": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "OR",
      "path": "14"
    },
    "1269": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1270": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1271": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "1273": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1274": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1275": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1276": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "1278": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1279": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1280": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1281": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1284": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1285": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1286": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1287": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1289": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1290": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ADD",
      "path": "14"
    },
    "1291": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1292": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1295": {
      "op": "NOT"
    },
    "1296": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "AND",
      "path": "14"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1299": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1300": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1302": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1303": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "GT",
      "path": "14"
    },
    "1304": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1305": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x527"
    },
    "1309": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1310": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x527"
    },
    "1314": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x14A2"
    },
    "1318": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6691,
        7114
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1319": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1320": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "MUL",
      "path": "14"
    },
    "1321": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "OR",
      "path": "14"
    },
    "1322": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1323": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6691,
        7114
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1324": {
      "op": "POP"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7136,
        7149
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 4,
      "value": "0x0"
    },
    "1328": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1329": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1330": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7130
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1332": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1333": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1334": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1336": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1337": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1338": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "ADD",
      "path": "14"
    },
    "1339": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1340": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1341": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1342": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1343": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1344": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "1377": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1378": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1379": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "ADD",
      "path": "14"
    },
    "1380": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1381": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1382": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7124,
        7160
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1383": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7185,
        7198
      ],
      "op": "SWAP1",
      "path": "14",
      "statement": 5
    },
    "1384": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7185,
        7198
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1385": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7170,
        7182
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1387": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7170,
        7198
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1388": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "ADD",
      "path": "9",
      "statement": 6
    },
    "1389": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1390": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1391": {
      "op": "POP"
    },
    "1392": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 7,
      "value": "0x40"
    },
    "1394": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1395": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1404": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1405": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7313,
        7323
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1406": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1408": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1409": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "ADD",
      "path": "14"
    },
    "1410": {
      "op": "MSTORE"
    },
    "1411": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7333,
        7337
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1414": {
      "op": "DUP3"
    },
    "1415": {
      "op": "ADD"
    },
    "1416": {
      "op": "MSTORE"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1419": {
      "op": "DUP2"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "DUP10"
    },
    "1422": {
      "op": "SWAP1"
    },
    "1423": {
      "op": "MSTORE"
    },
    "1424": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7263,
        7281
      ],
      "op": "DUP10",
      "path": "14"
    },
    "1425": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7263,
        7281
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1432": {
      "op": "SHL"
    },
    "1433": {
      "op": "SUB"
    },
    "1434": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7312
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1435": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7312
      ],
      "op": "AND",
      "path": "14"
    },
    "1436": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7312
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1437": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7312
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42842E0E"
    },
    "1442": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7312
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1445": {
      "op": "ADD"
    },
    "1446": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1448": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1450": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1451": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1452": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1453": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "SUB",
      "path": "14"
    },
    "1454": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1455": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1457": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1458": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1459": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1460": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1461": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1462": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1463": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x5C0"
    },
    "1467": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1468": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1470": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1471": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1472": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1473": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "POP",
      "path": "14"
    },
    "1474": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "GAS",
      "path": "14"
    },
    "1475": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "CALL",
      "path": "14"
    },
    "1476": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1477": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1478": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1479": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x5D5"
    },
    "1483": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1484": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1485": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1487": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1488": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1489": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1490": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1492": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1493": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1494": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "POP",
      "path": "14"
    },
    "1495": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "POP",
      "path": "14"
    },
    "1496": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "POP",
      "path": "14"
    },
    "1497": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7292,
        7351
      ],
      "op": "POP",
      "path": "14"
    },
    "1498": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7404,
        7415
      ],
      "op": "DUP7",
      "path": "14",
      "statement": 8
    },
    "1499": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1501": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1502": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x5E9"
    },
    "1506": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1507": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1508": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1631"
    },
    "1512": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        7366,
        7432
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1513": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1514": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1516": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1517": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1518": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1519": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1520": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "SUB",
      "path": "14"
    },
    "1521": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1522": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1529": {
      "op": "SHL"
    },
    "1530": {
      "op": "SUB"
    },
    "1531": {
      "op": "DUP6"
    },
    "1532": {
      "op": "AND"
    },
    "1533": {
      "op": "DUP3"
    },
    "1534": {
      "op": "MSTORE"
    },
    "1535": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1536": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7393,
        7402
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1537": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7393,
        7402
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1538": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7381,
        7391
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1539": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7381,
        7391
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1540": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xE2C8AEFC9D0A52C93C762509EEEAC2A518C41C52F791B6888C0673D07312C605"
    },
    "1573": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1576": {
      "op": "ADD"
    },
    "1577": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1579": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1580": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1581": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1582": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "SUB",
      "path": "14"
    },
    "1583": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1584": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7366,
        7432
      ],
      "op": "LOG4",
      "path": "14"
    },
    "1585": {
      "op": "POP"
    },
    "1586": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7449,
        7458
      ],
      "op": "SWAP9",
      "path": "14",
      "statement": 9
    },
    "1587": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6232,
        7465
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "1588": {
      "op": "POP"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "op": "POP"
    },
    "1591": {
      "op": "POP"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "op": "POP"
    },
    "1596": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "o",
      "offset": [
        6232,
        7465
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1597": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1598": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10032
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 10,
      "value": "0x0"
    },
    "1600": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10032
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1601": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10032
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1602": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10032
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1603": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10021
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1605": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10032
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1607": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10032
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1608": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10032
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1610": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10032
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1611": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10032
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1612": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10044
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "1614": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10044
      ],
      "op": "ADD",
      "path": "14"
    },
    "1615": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10013,
        10044
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1616": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10000,
        10009
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1617": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10000,
        10044
      ],
      "op": "LT",
      "path": "14"
    },
    "1618": {
      "branch": 29,
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10000,
        10044
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1619": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x6CA"
    },
    "1623": {
      "branch": 29,
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1624": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1626": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1627": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1633": {
      "op": "SHL"
    },
    "1634": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1635": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1638": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1640": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1641": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "ADD",
      "path": "14"
    },
    "1642": {
      "op": "MSTORE"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1647": {
      "op": "DUP3"
    },
    "1648": {
      "op": "ADD"
    },
    "1649": {
      "op": "MSTORE"
    },
    "1650": {
      "op": "PUSH32",
      "value": "0x53656E6465722073656E74206C657373207468616E20746865206275796F7574"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1685": {
      "op": "DUP3"
    },
    "1686": {
      "op": "ADD"
    },
    "1687": {
      "op": "MSTORE"
    },
    "1688": {
      "op": "PUSH32",
      "value": "0x2070726963652E00000000000000000000000000000000000000000000000000"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1723": {
      "op": "DUP3"
    },
    "1724": {
      "op": "ADD"
    },
    "1725": {
      "op": "MSTORE"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1728": {
      "op": "ADD"
    },
    "1729": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1730": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1732": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1733": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1734": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1735": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "SUB",
      "path": "14"
    },
    "1736": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1737": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "14"
    },
    "1738": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        10109
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1739": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 11,
      "value": "0x0"
    },
    "1741": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1742": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1743": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1744": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10127
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1746": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1748": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1749": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1750": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1751": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1753": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1754": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1755": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1756": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10138
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1757": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10144
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1759": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10144
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1760": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10144
      ],
      "op": "ADD",
      "path": "14"
    },
    "1761": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10162
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1762": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10162
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1765": {
      "op": "NOT"
    },
    "1766": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10162
      ],
      "op": "AND",
      "path": "14"
    },
    "1767": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10147,
        10162
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1769": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10162
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1770": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10162
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1771": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10162
      ],
      "op": "OR",
      "path": "14"
    },
    "1772": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10162
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1773": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10162
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1774": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10119,
        10162
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1775": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10195,
        10228
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1776": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10195,
        10228
      ],
      "op": "ADD",
      "path": "14"
    },
    "1777": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10195,
        10228
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1778": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10327,
        10357
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 12
    },
    "1779": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10327,
        10357
      ],
      "op": "ADD",
      "path": "14"
    },
    "1780": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10327,
        10357
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1781": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1782": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1783": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1790": {
      "op": "SHL"
    },
    "1791": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1792": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1793": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10284,
        10288
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "1794": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1796": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1797": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "ADD",
      "path": "14"
    },
    "1798": {
      "op": "MSTORE"
    },
    "1799": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10303,
        10313
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1802": {
      "op": "DUP3"
    },
    "1803": {
      "op": "ADD"
    },
    "1804": {
      "op": "MSTORE"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1807": {
      "op": "DUP2"
    },
    "1808": {
      "op": "ADD"
    },
    "1809": {
      "op": "SWAP3"
    },
    "1810": {
      "op": "SWAP1"
    },
    "1811": {
      "op": "SWAP3"
    },
    "1812": {
      "op": "MSTORE"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1819": {
      "op": "SHL"
    },
    "1820": {
      "op": "SUB"
    },
    "1821": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10195,
        10228
      ],
      "op": "AND",
      "path": "14"
    },
    "1822": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10195,
        10228
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1823": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10195,
        10228
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1824": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10195,
        10228
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1825": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10262
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42842E0E"
    },
    "1830": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10262
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1833": {
      "op": "ADD"
    },
    "1834": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1836": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1838": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1839": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1840": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1841": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "SUB",
      "path": "14"
    },
    "1842": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1843": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1845": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1846": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1847": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1848": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1849": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1850": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1851": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x744"
    },
    "1855": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1856": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1858": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1859": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1860": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1861": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "POP",
      "path": "14"
    },
    "1862": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "GAS",
      "path": "14"
    },
    "1863": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "CALL",
      "path": "14"
    },
    "1864": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1865": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1866": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1867": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x759"
    },
    "1871": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1872": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1873": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1875": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1876": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1877": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1878": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1880": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1881": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10239,
        10367
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1882": {
      "op": "POP"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10382,
        10414
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 13,
      "value": "0x40"
    },
    "1886": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10382,
        10414
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1887": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10404,
        10413
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1888": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10404,
        10413
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10392,
        10402
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1891": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10392,
        10402
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1892": {
      "op": "POP"
    },
    "1893": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10382,
        10414
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xFBBD268BB69CF922E3840DC96A6702DC064BAF4B2D9594B5A66A2FE428F3F2AA"
    },
    "1926": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10382,
        10414
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1927": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10382,
        10414
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1929": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10382,
        10414
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1930": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        10382,
        10414
      ],
      "op": "LOG3",
      "path": "14"
    },
    "1931": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9869,
        10421
      ],
      "op": "POP",
      "path": "14"
    },
    "1932": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9819,
        10421
      ],
      "op": "POP",
      "path": "14"
    },
    "1933": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "o",
      "offset": [
        9819,
        10421
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1934": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1935": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10728,
        10751
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 14,
      "value": "0x40"
    },
    "1937": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10728,
        10751
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1938": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10705,
        10711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1940": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10705,
        10711
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1941": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10740,
        10750
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1942": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10740,
        10750
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1943": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10728,
        10751
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xCCE71FC9CFCACC4CE8153BDE254A735AE423CDC2B7852FB754F4DE746AC3018F"
    },
    "1976": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10728,
        10751
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1977": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10705,
        10711
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1978": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10705,
        10711
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1979": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10728,
        10751
      ],
      "op": "LOG2",
      "path": "14"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10804,
        10864
      ],
      "op": "PUSH32",
      "path": "14",
      "statement": 15,
      "value": "0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F"
    },
    "2014": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2015": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2016": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "POP",
      "path": "14"
    },
    "2017": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "POP",
      "path": "14"
    },
    "2018": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "POP",
      "path": "14"
    },
    "2019": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10554,
        10885
      ],
      "op": "POP",
      "path": "14"
    },
    "2020": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "o",
      "offset": [
        10554,
        10885
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2021": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2022": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9026,
        9041
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 16,
      "value": "0x2"
    },
    "2024": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9016
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2026": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9016
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2027": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9016
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2028": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9016
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2029": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9005
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2031": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9016
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2033": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9016
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2034": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9016
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2036": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9016
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2037": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9016
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2038": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9022
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2040": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9022
      ],
      "op": "ADD",
      "path": "14"
    },
    "2041": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9022
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2042": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9022
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2044": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9022
      ],
      "op": "AND",
      "path": "14"
    },
    "2045": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9041
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2047": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9041
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2048": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9041
      ],
      "op": "GT",
      "path": "14"
    },
    "2049": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9041
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2050": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9041
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x810"
    },
    "2054": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9041
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2055": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9041
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x810"
    },
    "2059": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9041
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x14A2"
    },
    "2063": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8997,
        9041
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2064": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9041
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2065": {
      "branch": 30,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8997,
        9041
      ],
      "op": "EQ",
      "path": "14"
    },
    "2066": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8976,
        9110
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x885"
    },
    "2070": {
      "branch": 30,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8976,
        9110
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2071": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8976,
        9110
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2073": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8976,
        9110
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2074": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2080": {
      "op": "SHL"
    },
    "2081": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8976,
        9110
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2082": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8976,
        9110
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2085": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8976,
        9110
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2087": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8976,
        9110
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2088": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8976,
        9110
      ],
      "op": "ADD",
      "path": "14"
    },
    "2089": {
      "op": "MSTORE"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2094": {
      "op": "DUP3"
    },
    "2095": {
      "op": "ADD"
    },
    "2096": {
      "op": "MSTORE"
    },
    "2097": {
      "op": "PUSH32",
      "value": "0x4672616374696F6E616C697A6564204E465420686173206E6F74206265656E20"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2132": {
      "op": "DUP3"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "op": "MSTORE"
    },
    "2135": {
      "op": "PUSH32",
      "value": "0x626F75676874206F75742E000000000000000000000000000000000000000000"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2170": {
      "op": "DUP3"
    },
    "2171": {
      "op": "ADD"
    },
    "2172": {
      "op": "MSTORE"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2175": {
      "op": "ADD"
    },
    "2176": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8976,
        9110
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x6C1"
    },
    "2180": {
      "op": "JUMP"
    },
    "2181": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8976,
        9110
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2182": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9120,
        9131
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2184": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9159
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2185": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9159
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2186": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9159
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2187": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9148
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2189": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9159
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2191": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9159
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2192": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9159
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2194": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9159
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2195": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9159
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2196": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9159
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2197": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9172
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "2199": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9172
      ],
      "op": "ADD",
      "path": "14"
    },
    "2200": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9172
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2201": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2202": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2203": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2210": {
      "op": "SHL"
    },
    "2211": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2212": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2213": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9224,
        9234
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2214": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2216": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2217": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "ADD",
      "path": "14"
    },
    "2218": {
      "op": "MSTORE"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "op": "SUB"
    },
    "2227": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9172
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2228": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9172
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2229": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9172
      ],
      "op": "AND",
      "path": "14"
    },
    "2230": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9172
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2231": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9120,
        9131
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2232": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9172
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2233": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9140,
        9172
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2234": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9223
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "2239": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9223
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2242": {
      "op": "ADD"
    },
    "2243": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2245": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2247": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2248": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2249": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2250": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "SUB",
      "path": "14"
    },
    "2251": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2252": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2253": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2254": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2255": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2256": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2257": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2258": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x8DB"
    },
    "2262": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2263": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2265": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2266": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2267": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2268": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2269": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "GAS",
      "path": "14"
    },
    "2270": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "2271": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2272": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2273": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2274": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x8F0"
    },
    "2278": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2279": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2280": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2282": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2283": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2284": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2285": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2287": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2288": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2289": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2290": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2291": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2292": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2293": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2295": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2296": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2297": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2299": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "NOT",
      "path": "14"
    },
    "2300": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2302": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2303": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "ADD",
      "path": "14"
    },
    "2304": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "AND",
      "path": "14"
    },
    "2305": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2306": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "ADD",
      "path": "14"
    },
    "2307": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2308": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2310": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2311": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2312": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2313": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "ADD",
      "path": "14"
    },
    "2314": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2315": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x916"
    },
    "2319": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2320": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2321": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x164F"
    },
    "2325": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        9208,
        9235
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2326": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9208,
        9235
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2327": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9183,
        9235
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2328": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9183,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2329": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9270,
        9271
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 17,
      "value": "0x0"
    },
    "2331": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9253,
        9267
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2332": {
      "branch": 31,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9253,
        9271
      ],
      "op": "GT",
      "path": "14"
    },
    "2333": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9245,
        9309
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x990"
    },
    "2337": {
      "branch": 31,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9245,
        9309
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2338": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9245,
        9309
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2340": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9245,
        9309
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2341": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2347": {
      "op": "SHL"
    },
    "2348": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9245,
        9309
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2349": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9245,
        9309
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2352": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9245,
        9309
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2354": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9245,
        9309
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2355": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9245,
        9309
      ],
      "op": "ADD",
      "path": "14"
    },
    "2356": {
      "op": "MSTORE"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2361": {
      "op": "DUP3"
    },
    "2362": {
      "op": "ADD"
    },
    "2363": {
      "op": "MSTORE"
    },
    "2364": {
      "op": "PUSH32",
      "value": "0x436C61696D657220646F6573206E6F7420686F6C6420616E7920746F6B656E73"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2399": {
      "op": "DUP3"
    },
    "2400": {
      "op": "ADD"
    },
    "2401": {
      "op": "MSTORE"
    },
    "2402": {
      "op": "PUSH32",
      "value": "0x2E00000000000000000000000000000000000000000000000000000000000000"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2437": {
      "op": "DUP3"
    },
    "2438": {
      "op": "ADD"
    },
    "2439": {
      "op": "MSTORE"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2442": {
      "op": "ADD"
    },
    "2443": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9245,
        9309
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x6C1"
    },
    "2447": {
      "op": "JUMP"
    },
    "2448": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9245,
        9309
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2449": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 18,
      "value": "0x40"
    },
    "2451": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2452": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2459": {
      "op": "SHL"
    },
    "2460": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2461": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2462": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9338,
        9348
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2463": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2465": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2466": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "ADD",
      "path": "14"
    },
    "2467": {
      "op": "MSTORE"
    },
    "2468": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9358,
        9362
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2471": {
      "op": "DUP3"
    },
    "2472": {
      "op": "ADD"
    },
    "2473": {
      "op": "MSTORE"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2476": {
      "op": "DUP2"
    },
    "2477": {
      "op": "ADD"
    },
    "2478": {
      "op": "DUP3"
    },
    "2479": {
      "op": "SWAP1"
    },
    "2480": {
      "op": "MSTORE"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2487": {
      "op": "SHL"
    },
    "2488": {
      "op": "SUB"
    },
    "2489": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9337
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2490": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9337
      ],
      "op": "AND",
      "path": "14"
    },
    "2491": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9337
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2492": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9337
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "2497": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9337
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2500": {
      "op": "ADD"
    },
    "2501": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2503": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2505": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2506": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2507": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2508": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "SUB",
      "path": "14"
    },
    "2509": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2510": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2512": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2513": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2514": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2515": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2516": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2517": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2518": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x9DF"
    },
    "2522": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2523": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2525": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2526": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2527": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2528": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "POP",
      "path": "14"
    },
    "2529": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "GAS",
      "path": "14"
    },
    "2530": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "CALL",
      "path": "14"
    },
    "2531": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2532": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2533": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2534": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x9F4"
    },
    "2538": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2539": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2540": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2542": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2543": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2544": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2545": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2547": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2548": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2549": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "POP",
      "path": "14"
    },
    "2550": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "POP",
      "path": "14"
    },
    "2551": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "POP",
      "path": "14"
    },
    "2552": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "POP",
      "path": "14"
    },
    "2553": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2555": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2556": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2557": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2559": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "NOT",
      "path": "14"
    },
    "2560": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2562": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2563": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "ADD",
      "path": "14"
    },
    "2564": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "AND",
      "path": "14"
    },
    "2565": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2566": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "ADD",
      "path": "14"
    },
    "2567": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2568": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2570": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2571": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "POP",
      "path": "14"
    },
    "2572": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2573": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "ADD",
      "path": "14"
    },
    "2574": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2575": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xA1A"
    },
    "2579": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2580": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2581": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1669"
    },
    "2585": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        9319,
        9380
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2586": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2587": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9319,
        9380
      ],
      "op": "POP",
      "path": "14"
    },
    "2588": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9390,
        9409
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2590": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9417
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2597": {
      "op": "SHL"
    },
    "2598": {
      "op": "SUB"
    },
    "2599": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9429
      ],
      "op": "AND",
      "path": "14"
    },
    "2600": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9429
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "2605": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2607": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2608": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2609": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "2614": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "AND",
      "path": "14"
    },
    "2615": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "2617": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "SHL",
      "path": "14"
    },
    "2618": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2619": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2620": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2622": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "ADD",
      "path": "14"
    },
    "2623": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2625": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2627": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2628": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2629": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2630": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "SUB",
      "path": "14"
    },
    "2631": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2632": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2633": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2634": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2635": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2636": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2637": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2638": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xA57"
    },
    "2642": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2643": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2645": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2646": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2647": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2648": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "POP",
      "path": "14"
    },
    "2649": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "GAS",
      "path": "14"
    },
    "2650": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "2651": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2652": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2653": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2654": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xA6C"
    },
    "2658": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2659": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2660": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2662": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2663": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2664": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2665": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2667": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2668": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2669": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "POP",
      "path": "14"
    },
    "2670": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "POP",
      "path": "14"
    },
    "2671": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "POP",
      "path": "14"
    },
    "2672": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "POP",
      "path": "14"
    },
    "2673": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2675": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2676": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2677": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2679": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "NOT",
      "path": "14"
    },
    "2680": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2682": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2683": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "ADD",
      "path": "14"
    },
    "2684": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "AND",
      "path": "14"
    },
    "2685": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2686": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "ADD",
      "path": "14"
    },
    "2687": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2688": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2690": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2691": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "POP",
      "path": "14"
    },
    "2692": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2693": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "ADD",
      "path": "14"
    },
    "2694": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2695": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xA92"
    },
    "2699": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2700": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2701": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x164F"
    },
    "2705": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        9412,
        9431
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2706": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9412,
        9431
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2707": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9441,
        9463
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2709": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9486
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2710": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9486
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2711": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9486
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2712": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9475
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2714": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9486
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2716": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9486
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2717": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9486
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2719": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9486
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2720": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9486
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2721": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9498
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "2723": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9498
      ],
      "op": "ADD",
      "path": "14"
    },
    "2724": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9498
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2725": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9390,
        9431
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2726": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9390,
        9431
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2727": {
      "op": "POP"
    },
    "2728": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9441,
        9463
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2729": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9390,
        9431
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2730": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9390,
        9431
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2731": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9527
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xAB7"
    },
    "2735": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9527
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2736": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9513,
        9527
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2737": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9513,
        9527
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2738": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9527
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x168D"
    },
    "2742": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        9467,
        9527
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2743": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9467,
        9527
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2744": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9466,
        9542
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xAC3"
    },
    "2748": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9466,
        9542
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2749": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9466,
        9542
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2750": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9466,
        9542
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x16BB"
    },
    "2754": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        9466,
        9542
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2755": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9466,
        9542
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2756": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 19,
      "value": "0x40"
    },
    "2758": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2759": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9441,
        9542
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2760": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9441,
        9542
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2761": {
      "op": "POP"
    },
    "2762": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9560,
        9570
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2763": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9560,
        9570
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2764": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2765": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2766": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8FC"
    },
    "2769": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "MUL",
      "path": "14"
    },
    "2770": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2771": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9441,
        9542
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2772": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9441,
        9542
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2773": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2775": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2776": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2777": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2778": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9441,
        9542
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2779": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9560,
        9570
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2780": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2781": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "CALL",
      "path": "14"
    },
    "2782": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2783": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "POP",
      "path": "14"
    },
    "2784": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "POP",
      "path": "14"
    },
    "2785": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "POP",
      "path": "14"
    },
    "2786": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "POP",
      "path": "14"
    },
    "2787": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2788": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2789": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2790": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xAF4"
    },
    "2794": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2795": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2796": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2798": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2799": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2800": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2801": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2803": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2804": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9552,
        9596
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2805": {
      "op": "POP"
    },
    "2806": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9611,
        9641
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 20,
      "value": "0x40"
    },
    "2808": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9611,
        9641
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2809": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9631,
        9640
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2810": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9631,
        9640
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2811": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9619,
        9629
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2812": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9619,
        9629
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2813": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9611,
        9641
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
    },
    "2846": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9611,
        9641
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2847": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9611,
        9641
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2849": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9611,
        9641
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2850": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9611,
        9641
      ],
      "op": "LOG3",
      "path": "14"
    },
    "2851": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8966,
        9648
      ],
      "op": "POP",
      "path": "14"
    },
    "2852": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8966,
        9648
      ],
      "op": "POP",
      "path": "14"
    },
    "2853": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8966,
        9648
      ],
      "op": "POP",
      "path": "14"
    },
    "2854": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8966,
        9648
      ],
      "op": "POP",
      "path": "14"
    },
    "2855": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        9648
      ],
      "op": "POP",
      "path": "14"
    },
    "2856": {
      "fn": "FractionalizeNFT.claim",
      "jump": "o",
      "offset": [
        8925,
        9648
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2857": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2858": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5334,
        5339
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2860": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5306,
        5315
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2861": {
      "offset": [
        3678,
        3701
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xB36"
    },
    "2865": {
      "offset": [
        3678,
        3691
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2867": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2868": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2869": {
      "fn": "Counters.current",
      "offset": [
        773,
        885
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2870": {
      "offset": [
        3678,
        3701
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2871": {
      "offset": [
        3666,
        3675
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2872": {
      "offset": [
        3666,
        3701
      ],
      "op": "LT",
      "path": "14"
    },
    "2873": {
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xB94"
    },
    "2877": {
      "offset": [
        3645,
        3764
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2878": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2880": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2881": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2887": {
      "op": "SHL"
    },
    "2888": {
      "offset": [
        3645,
        3764
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2889": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2892": {
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2894": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2895": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "ADD",
      "path": "14"
    },
    "2896": {
      "op": "MSTORE"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2901": {
      "op": "DUP3"
    },
    "2902": {
      "op": "ADD"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "op": "PUSH32",
      "value": "0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2939": {
      "op": "DUP3"
    },
    "2940": {
      "op": "ADD"
    },
    "2941": {
      "op": "MSTORE"
    },
    "2942": {
      "op": "PUSH5",
      "value": "0x27232A3997"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2950": {
      "op": "SHL"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2953": {
      "op": "DUP3"
    },
    "2954": {
      "op": "ADD"
    },
    "2955": {
      "op": "MSTORE"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2958": {
      "op": "ADD"
    },
    "2959": {
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x6C1"
    },
    "2963": {
      "op": "JUMP"
    },
    "2964": {
      "offset": [
        3645,
        3764
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2965": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5381
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 21,
      "value": "0x0"
    },
    "2967": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5381
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2968": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5381
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2969": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5381
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2970": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5370
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2972": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5381
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2974": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5381
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2975": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5381
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2977": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5381
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2978": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5381
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2979": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5387
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2981": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5387
      ],
      "op": "ADD",
      "path": "14"
    },
    "2982": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5387
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2983": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5387
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2985": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5387
      ],
      "op": "AND",
      "path": "14"
    },
    "2986": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5362,
        5387
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2987": {
      "op": "POP"
    },
    "2988": {
      "offset": [
        3774,
        3775
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2989": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "POP",
      "path": "14"
    },
    "2990": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2991": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2992": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5216,
        5394
      ],
      "op": "POP",
      "path": "14"
    },
    "2993": {
      "fn": "FractionalizeNFT.getState",
      "jump": "o",
      "offset": [
        5216,
        5394
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2994": {
      "offset": [
        2314,
        2337
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2995": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2997": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2998": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2999": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3000": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3001": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "LT",
      "path": "14"
    },
    "3002": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xBC3"
    },
    "3006": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3007": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3009": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3010": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3011": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3012": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3014": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3015": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3016": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3017": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3019": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3020": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3021": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3022": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "ADD",
      "path": "14"
    },
    "3023": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3024": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        2314,
        2337
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3025": {
      "op": "POP"
    },
    "3026": {
      "offset": [
        2314,
        2337
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3027": {
      "fn": "FractionalizeNFT.getState",
      "jump": "o",
      "offset": [
        2314,
        2337
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3028": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3029": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4916,
        4929
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "3031": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4888,
        4897
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3032": {
      "offset": [
        3678,
        3701
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xBE1"
    },
    "3036": {
      "offset": [
        3678,
        3691
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3038": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3039": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3040": {
      "fn": "Counters.current",
      "offset": [
        773,
        885
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3041": {
      "offset": [
        3678,
        3701
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3042": {
      "offset": [
        3666,
        3675
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3043": {
      "offset": [
        3666,
        3701
      ],
      "op": "LT",
      "path": "14"
    },
    "3044": {
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC3F"
    },
    "3048": {
      "offset": [
        3645,
        3764
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3049": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3051": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3052": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3058": {
      "op": "SHL"
    },
    "3059": {
      "offset": [
        3645,
        3764
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3060": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3063": {
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3065": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3066": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "ADD",
      "path": "14"
    },
    "3067": {
      "op": "MSTORE"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3072": {
      "op": "DUP3"
    },
    "3073": {
      "op": "ADD"
    },
    "3074": {
      "op": "MSTORE"
    },
    "3075": {
      "op": "PUSH32",
      "value": "0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3110": {
      "op": "DUP3"
    },
    "3111": {
      "op": "ADD"
    },
    "3112": {
      "op": "MSTORE"
    },
    "3113": {
      "op": "PUSH5",
      "value": "0x27232A3997"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "3121": {
      "op": "SHL"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3124": {
      "op": "DUP3"
    },
    "3125": {
      "op": "ADD"
    },
    "3126": {
      "op": "MSTORE"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3129": {
      "op": "ADD"
    },
    "3130": {
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x6C1"
    },
    "3134": {
      "op": "JUMP"
    },
    "3135": {
      "offset": [
        3645,
        3764
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3136": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4971
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 22,
      "value": "0x0"
    },
    "3138": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4971
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3139": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4971
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3140": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4971
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3141": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4960
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3143": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4971
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3145": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4971
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3146": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4971
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3148": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4971
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3149": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4971
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3150": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3152": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4952,
        4983
      ],
      "op": "ADD",
      "path": "14"
    },
    "3153": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3154": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3155": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC5D"
    },
    "3159": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3160": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x16DE"
    },
    "3164": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4945,
        4983
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3165": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3166": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3167": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3169": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "ADD",
      "path": "14"
    },
    "3170": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3172": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3173": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3174": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DIV",
      "path": "14"
    },
    "3175": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "MUL",
      "path": "14"
    },
    "3176": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3178": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "ADD",
      "path": "14"
    },
    "3179": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3181": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3182": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3183": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3184": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "ADD",
      "path": "14"
    },
    "3185": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3187": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3188": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3189": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3190": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3191": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3192": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3193": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3194": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3195": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3197": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "ADD",
      "path": "14"
    },
    "3198": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3199": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3200": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3201": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC8B"
    },
    "3205": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3206": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x16DE"
    },
    "3210": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4945,
        4983
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3211": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3212": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3213": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3214": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xCDC"
    },
    "3218": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3219": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3220": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3222": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "LT",
      "path": "14"
    },
    "3223": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xCB0"
    },
    "3227": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3228": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "3231": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3232": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3233": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3234": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DIV",
      "path": "14"
    },
    "3235": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "MUL",
      "path": "14"
    },
    "3236": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3237": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3238": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3239": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3241": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "ADD",
      "path": "14"
    },
    "3242": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3243": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xCDC"
    },
    "3247": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3248": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3249": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3250": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "ADD",
      "path": "14"
    },
    "3251": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3252": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3253": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3255": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3256": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3258": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3260": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3261": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3262": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3263": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3264": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3265": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3266": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3267": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3268": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3270": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "ADD",
      "path": "14"
    },
    "3271": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3272": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3274": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "ADD",
      "path": "14"
    },
    "3275": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3276": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3277": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "GT",
      "path": "14"
    },
    "3278": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xCBE"
    },
    "3282": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3283": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3284": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3285": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SUB",
      "path": "14"
    },
    "3286": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3288": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "AND",
      "path": "14"
    },
    "3289": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3290": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "ADD",
      "path": "14"
    },
    "3291": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3292": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3293": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "POP",
      "path": "14"
    },
    "3294": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "POP",
      "path": "14"
    },
    "3295": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "POP",
      "path": "14"
    },
    "3296": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "POP",
      "path": "14"
    },
    "3297": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "POP",
      "path": "14"
    },
    "3298": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3299": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4945,
        4983
      ],
      "op": "POP",
      "path": "14"
    },
    "3300": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "POP",
      "path": "14"
    },
    "3301": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3302": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3303": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4792,
        4990
      ],
      "op": "POP",
      "path": "14"
    },
    "3304": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "o",
      "offset": [
        4792,
        4990
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3305": {
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3306": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3308": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3310": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3311": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3312": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3313": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3315": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3316": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3317": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3318": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3320": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3321": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3322": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3323": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3324": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3325": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3326": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3327": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3328": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3329": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "3331": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3332": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3333": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3334": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3336": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3337": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3338": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3339": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3341": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3342": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3343": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3344": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3345": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3346": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3353": {
      "op": "SHL"
    },
    "3354": {
      "op": "SUB"
    },
    "3355": {
      "offset": [
        616,
        669
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3356": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3357": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3358": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3359": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3360": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3361": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3362": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3363": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3364": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xD2E"
    },
    "3368": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3369": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x16DE"
    },
    "3373": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3374": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3375": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3376": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3378": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3379": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3381": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3382": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3383": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DIV",
      "path": "14"
    },
    "3384": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MUL",
      "path": "14"
    },
    "3385": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3387": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3388": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3390": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3391": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3392": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3393": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3394": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3396": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3397": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3398": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3399": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3400": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3401": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3402": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3403": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3404": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3406": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3407": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3408": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3409": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3410": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xD5C"
    },
    "3414": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3415": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x16DE"
    },
    "3419": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3420": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3421": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3422": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3423": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xDAD"
    },
    "3427": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3428": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3429": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3431": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "LT",
      "path": "14"
    },
    "3432": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xD81"
    },
    "3436": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3437": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "3440": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3441": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3442": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3443": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DIV",
      "path": "14"
    },
    "3444": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MUL",
      "path": "14"
    },
    "3445": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3446": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3447": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3448": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3450": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3451": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3452": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xDAD"
    },
    "3456": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3457": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3458": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3459": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3460": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3461": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3462": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3464": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3465": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3467": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3469": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3470": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3471": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3472": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3473": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3474": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3475": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3476": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3477": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3479": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3480": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3481": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3483": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3484": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3485": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3486": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "GT",
      "path": "14"
    },
    "3487": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xD8F"
    },
    "3491": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3492": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3493": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3494": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SUB",
      "path": "14"
    },
    "3495": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3497": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3498": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3499": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3500": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3501": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3502": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "POP",
      "path": "14"
    },
    "3503": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "POP",
      "path": "14"
    },
    "3504": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "POP",
      "path": "14"
    },
    "3505": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "POP",
      "path": "14"
    },
    "3506": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "POP",
      "path": "14"
    },
    "3507": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3508": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3509": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "3511": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3512": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3513": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3514": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xDC4"
    },
    "3518": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3519": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x16DE"
    },
    "3523": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3524": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3525": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3526": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3528": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3529": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3531": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3532": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3533": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DIV",
      "path": "14"
    },
    "3534": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MUL",
      "path": "14"
    },
    "3535": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3537": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3538": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3540": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3541": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3542": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3543": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3544": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3546": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3547": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3548": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3549": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3550": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3551": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3552": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3553": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3554": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3556": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3557": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3558": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3559": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3560": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xDF2"
    },
    "3564": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3565": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x16DE"
    },
    "3569": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3570": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3571": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3572": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3573": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xE43"
    },
    "3577": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3578": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3579": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3581": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "LT",
      "path": "14"
    },
    "3582": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xE17"
    },
    "3586": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3587": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "3590": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3591": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3592": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3593": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DIV",
      "path": "14"
    },
    "3594": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MUL",
      "path": "14"
    },
    "3595": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3596": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3597": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3598": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3600": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3601": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3602": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xE43"
    },
    "3606": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3607": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3608": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3609": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3610": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3611": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3612": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3614": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3615": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3617": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3619": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3620": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3621": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3622": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3623": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3624": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3625": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3626": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3627": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3629": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3630": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3631": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3633": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3634": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3635": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3636": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "GT",
      "path": "14"
    },
    "3637": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xE25"
    },
    "3641": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3642": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3643": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3644": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SUB",
      "path": "14"
    },
    "3645": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3647": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3648": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3649": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3650": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3651": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "op": "POP"
    },
    "3656": {
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "3658": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3659": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3660": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3661": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3663": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3664": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3665": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3666": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3668": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3669": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3670": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3671": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3672": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3673": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3680": {
      "op": "SHL"
    },
    "3681": {
      "op": "SUB"
    },
    "3682": {
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3683": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3684": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3685": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3686": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3687": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3688": {
      "op": "POP"
    },
    "3689": {
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3691": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3692": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3693": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "o",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3694": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4409,
        4603
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3695": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4534,
        4541
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3697": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4506,
        4515
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3698": {
      "offset": [
        3678,
        3701
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xE7B"
    },
    "3702": {
      "offset": [
        3678,
        3691
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3704": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3705": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3706": {
      "fn": "Counters.current",
      "offset": [
        773,
        885
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3707": {
      "offset": [
        3678,
        3701
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3708": {
      "offset": [
        3666,
        3675
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3709": {
      "offset": [
        3666,
        3701
      ],
      "op": "LT",
      "path": "14"
    },
    "3710": {
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xED9"
    },
    "3714": {
      "offset": [
        3645,
        3764
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3715": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3717": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3718": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3724": {
      "op": "SHL"
    },
    "3725": {
      "offset": [
        3645,
        3764
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3726": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3729": {
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3731": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3732": {
      "fn": "Counters.current",
      "offset": [
        3645,
        3764
      ],
      "op": "ADD",
      "path": "14"
    },
    "3733": {
      "op": "MSTORE"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3738": {
      "op": "DUP3"
    },
    "3739": {
      "op": "ADD"
    },
    "3740": {
      "op": "MSTORE"
    },
    "3741": {
      "op": "PUSH32",
      "value": "0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3776": {
      "op": "DUP3"
    },
    "3777": {
      "op": "ADD"
    },
    "3778": {
      "op": "MSTORE"
    },
    "3779": {
      "op": "PUSH5",
      "value": "0x27232A3997"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "3787": {
      "op": "SHL"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3790": {
      "op": "DUP3"
    },
    "3791": {
      "op": "ADD"
    },
    "3792": {
      "op": "MSTORE"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3795": {
      "op": "ADD"
    },
    "3796": {
      "offset": [
        3645,
        3764
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x6C1"
    },
    "3800": {
      "op": "JUMP"
    },
    "3801": {
      "offset": [
        3645,
        3764
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3802": {
      "op": "POP"
    },
    "3803": {
      "op": "POP"
    },
    "3804": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4583
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 23,
      "value": "0x0"
    },
    "3806": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4583
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3807": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4583
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3808": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4583
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3809": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3811": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4583
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3813": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4583
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3814": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4583
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3816": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4583
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3817": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4583
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3818": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4596
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3820": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4596
      ],
      "op": "ADD",
      "path": "14"
    },
    "3821": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4596
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3828": {
      "op": "SHL"
    },
    "3829": {
      "op": "SUB"
    },
    "3830": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4596
      ],
      "op": "AND",
      "path": "14"
    },
    "3831": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4564,
        4596
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3832": {
      "fn": "FractionalizeNFT.getERC20Address",
      "jump": "o",
      "offset": [
        4409,
        4603
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3833": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3834": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7892,
        7903
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3836": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7931
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3837": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7931
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3838": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7931
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3839": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3841": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7931
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3843": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7931
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3844": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7931
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3846": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7931
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3847": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7931
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3848": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7931
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3849": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7944
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3851": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7944
      ],
      "op": "ADD",
      "path": "14"
    },
    "3852": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7944
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3853": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3854": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3855": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3862": {
      "op": "SHL"
    },
    "3863": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3864": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3865": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7997,
        8007
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3866": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3868": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3869": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "ADD",
      "path": "14"
    },
    "3870": {
      "op": "MSTORE"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3877": {
      "op": "SHL"
    },
    "3878": {
      "op": "SUB"
    },
    "3879": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7944
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3880": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7944
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3881": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7944
      ],
      "op": "AND",
      "path": "14"
    },
    "3882": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7944
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3883": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7892,
        7903
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3884": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7944
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3885": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7912,
        7944
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3886": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        7996
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "3891": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        7996
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3897": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3899": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3900": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3901": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3902": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "SUB",
      "path": "14"
    },
    "3903": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3904": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3905": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3906": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3907": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3908": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3909": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3910": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xF4F"
    },
    "3914": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3915": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3917": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3918": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3919": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3920": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "POP",
      "path": "14"
    },
    "3921": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "GAS",
      "path": "14"
    },
    "3922": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3923": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3924": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3925": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3926": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xF64"
    },
    "3930": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3931": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3932": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3934": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3935": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "3936": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3937": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3939": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3940": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3941": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "POP",
      "path": "14"
    },
    "3942": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "POP",
      "path": "14"
    },
    "3943": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "POP",
      "path": "14"
    },
    "3944": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "POP",
      "path": "14"
    },
    "3945": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3947": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3948": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3949": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3951": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "NOT",
      "path": "14"
    },
    "3952": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3954": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3955": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "ADD",
      "path": "14"
    },
    "3956": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "AND",
      "path": "14"
    },
    "3957": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3958": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "ADD",
      "path": "14"
    },
    "3959": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3960": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3962": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3963": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "POP",
      "path": "14"
    },
    "3964": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3965": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "ADD",
      "path": "14"
    },
    "3966": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3967": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xF8A"
    },
    "3971": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3972": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3973": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x164F"
    },
    "3977": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7981,
        8008
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3978": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7981,
        8008
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3979": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7955,
        8008
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3980": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7955,
        8008
      ],
      "op": "POP",
      "path": "14"
    },
    "3981": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8018,
        8037
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3983": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8045
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3990": {
      "op": "SHL"
    },
    "3991": {
      "op": "SUB"
    },
    "3992": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8057
      ],
      "op": "AND",
      "path": "14"
    },
    "3993": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "3998": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4000": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4001": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4002": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "4007": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "AND",
      "path": "14"
    },
    "4008": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "4010": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "SHL",
      "path": "14"
    },
    "4011": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4012": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4013": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4015": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "ADD",
      "path": "14"
    },
    "4016": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4018": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4020": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4021": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4022": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4023": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "SUB",
      "path": "14"
    },
    "4024": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4025": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4026": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4027": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "4028": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4029": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4030": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4031": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xFC8"
    },
    "4035": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4036": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4038": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4039": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4040": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4041": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "POP",
      "path": "14"
    },
    "4042": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "GAS",
      "path": "14"
    },
    "4043": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4044": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4045": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4046": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4047": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xFDD"
    },
    "4051": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4052": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4053": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4055": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4056": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4057": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4058": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4060": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4061": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4062": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "POP",
      "path": "14"
    },
    "4063": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "POP",
      "path": "14"
    },
    "4064": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "POP",
      "path": "14"
    },
    "4065": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "POP",
      "path": "14"
    },
    "4066": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4068": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4069": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4070": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4072": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "NOT",
      "path": "14"
    },
    "4073": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4075": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4076": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "ADD",
      "path": "14"
    },
    "4077": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "AND",
      "path": "14"
    },
    "4078": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4079": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "ADD",
      "path": "14"
    },
    "4080": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4081": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4083": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4084": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "POP",
      "path": "14"
    },
    "4085": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4086": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "ADD",
      "path": "14"
    },
    "4087": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4088": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1003"
    },
    "4092": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4093": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4094": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x164F"
    },
    "4098": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        8040,
        8059
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4099": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8059
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4100": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8018,
        8059
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4101": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8018,
        8059
      ],
      "op": "POP",
      "path": "14"
    },
    "4102": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8109,
        8120
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 24
    },
    "4103": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8090,
        8105
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4104": {
      "branch": 32,
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8090,
        8120
      ],
      "op": "EQ",
      "path": "14"
    },
    "4105": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8069,
        8188
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x107C"
    },
    "4109": {
      "branch": 32,
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8069,
        8188
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4110": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8069,
        8188
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4112": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8069,
        8188
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4113": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4119": {
      "op": "SHL"
    },
    "4120": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8069,
        8188
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4121": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8069,
        8188
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4124": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8069,
        8188
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4126": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8069,
        8188
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4127": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8069,
        8188
      ],
      "op": "ADD",
      "path": "14"
    },
    "4128": {
      "op": "MSTORE"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4133": {
      "op": "DUP3"
    },
    "4134": {
      "op": "ADD"
    },
    "4135": {
      "op": "MSTORE"
    },
    "4136": {
      "op": "PUSH32",
      "value": "0x52656465656D65657220646F6573206E6F7420686F6C642074686520656E7469"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4171": {
      "op": "DUP3"
    },
    "4172": {
      "op": "ADD"
    },
    "4173": {
      "op": "MSTORE"
    },
    "4174": {
      "op": "PUSH32",
      "value": "0x726520737570706C792E00000000000000000000000000000000000000000000"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4209": {
      "op": "DUP3"
    },
    "4210": {
      "op": "ADD"
    },
    "4211": {
      "op": "MSTORE"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4214": {
      "op": "ADD"
    },
    "4215": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8069,
        8188
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x6C1"
    },
    "4219": {
      "op": "JUMP"
    },
    "4220": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8069,
        8188
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4221": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 25,
      "value": "0x0"
    },
    "4223": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4224": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4225": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4226": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8226,
        8240
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "4228": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4230": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4231": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4232": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4233": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4235": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4236": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4237": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4238": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8217
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4239": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "4241": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8223
      ],
      "op": "ADD",
      "path": "14"
    },
    "4242": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8240
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4243": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8240
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4246": {
      "op": "NOT"
    },
    "4247": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8240
      ],
      "op": "AND",
      "path": "14"
    },
    "4248": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8240
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4249": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8240
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4250": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8240
      ],
      "op": "OR",
      "path": "14"
    },
    "4251": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8240
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4252": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8198,
        8240
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "4253": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 26
    },
    "4254": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4261": {
      "op": "SHL"
    },
    "4262": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4263": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4264": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8269,
        8279
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4265": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4267": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4268": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "ADD",
      "path": "14"
    },
    "4269": {
      "op": "MSTORE"
    },
    "4270": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8289,
        8293
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4273": {
      "op": "DUP3"
    },
    "4274": {
      "op": "ADD"
    },
    "4275": {
      "op": "MSTORE"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4278": {
      "op": "DUP2"
    },
    "4279": {
      "op": "ADD"
    },
    "4280": {
      "op": "DUP4"
    },
    "4281": {
      "op": "SWAP1"
    },
    "4282": {
      "op": "MSTORE"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4289": {
      "op": "SHL"
    },
    "4290": {
      "op": "SUB"
    },
    "4291": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8268
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4292": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8268
      ],
      "op": "AND",
      "path": "14"
    },
    "4293": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8268
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4294": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8268
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "4299": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8268
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4302": {
      "op": "ADD"
    },
    "4303": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4305": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4307": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4308": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4309": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4310": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "SUB",
      "path": "14"
    },
    "4311": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4312": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4314": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4315": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4316": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "4317": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4318": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4319": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4320": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x10E9"
    },
    "4324": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4325": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4327": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4328": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4329": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4330": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "POP",
      "path": "14"
    },
    "4331": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "GAS",
      "path": "14"
    },
    "4332": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "CALL",
      "path": "14"
    },
    "4333": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4334": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4335": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4336": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x10FE"
    },
    "4340": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4341": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4342": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4344": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4345": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4346": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4347": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4349": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4350": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4351": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "POP",
      "path": "14"
    },
    "4352": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "POP",
      "path": "14"
    },
    "4353": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "POP",
      "path": "14"
    },
    "4354": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "POP",
      "path": "14"
    },
    "4355": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4357": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4358": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4359": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4361": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "NOT",
      "path": "14"
    },
    "4362": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4364": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4365": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "ADD",
      "path": "14"
    },
    "4366": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "AND",
      "path": "14"
    },
    "4367": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4368": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "ADD",
      "path": "14"
    },
    "4369": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4370": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4372": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4373": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "POP",
      "path": "14"
    },
    "4374": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4375": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "ADD",
      "path": "14"
    },
    "4376": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4377": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1124"
    },
    "4381": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4382": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4383": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1669"
    },
    "4387": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        8250,
        8312
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4388": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8250,
        8312
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4389": {
      "op": "POP"
    },
    "4390": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8322,
        8335
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4392": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4393": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4394": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4395": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8353
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "4397": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4399": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4400": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4401": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4402": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4404": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4405": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4406": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4407": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8364
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4408": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8378
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "4410": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8378
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4411": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8378
      ],
      "op": "ADD",
      "path": "14"
    },
    "4412": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8378
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4413": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8477,
        8507
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 27
    },
    "4414": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8477,
        8507
      ],
      "op": "ADD",
      "path": "14"
    },
    "4415": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8477,
        8507
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4416": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4417": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4418": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4425": {
      "op": "SHL"
    },
    "4426": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4427": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4428": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8434,
        8438
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "4429": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4431": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4432": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "ADD",
      "path": "14"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8453,
        8463
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4437": {
      "op": "DUP3"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "op": "MSTORE"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4442": {
      "op": "DUP2"
    },
    "4443": {
      "op": "ADD"
    },
    "4444": {
      "op": "SWAP3"
    },
    "4445": {
      "op": "SWAP1"
    },
    "4446": {
      "op": "SWAP3"
    },
    "4447": {
      "op": "MSTORE"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4454": {
      "op": "SHL"
    },
    "4455": {
      "op": "SUB"
    },
    "4456": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8378
      ],
      "op": "AND",
      "path": "14"
    },
    "4457": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8378
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4458": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8378
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4459": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8345,
        8378
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4460": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8412
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42842E0E"
    },
    "4465": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8412
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4468": {
      "op": "ADD"
    },
    "4469": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4471": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4473": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4474": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4475": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4476": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "SUB",
      "path": "14"
    },
    "4477": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4478": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4480": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4481": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4482": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "4483": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4484": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4485": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4486": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x118F"
    },
    "4490": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4491": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4493": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4494": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4495": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4496": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "POP",
      "path": "14"
    },
    "4497": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "GAS",
      "path": "14"
    },
    "4498": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "CALL",
      "path": "14"
    },
    "4499": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4500": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4501": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4502": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x11A4"
    },
    "4506": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4507": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4508": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4510": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4511": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4512": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4513": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4515": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4516": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8389,
        8517
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4517": {
      "op": "POP"
    },
    "4518": {
      "op": "POP"
    },
    "4519": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8532,
        8563
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 28,
      "value": "0x40"
    },
    "4521": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8532,
        8563
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4522": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8553,
        8562
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4523": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8553,
        8562
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4524": {
      "op": "POP"
    },
    "4525": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8541,
        8551
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4526": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8541,
        8551
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4527": {
      "op": "POP"
    },
    "4528": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8532,
        8563
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369"
    },
    "4561": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8532,
        8563
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4562": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8532,
        8563
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4564": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8532,
        8563
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4565": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8532,
        8563
      ],
      "op": "LOG3",
      "path": "14"
    },
    "4566": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7882,
        8570
      ],
      "op": "POP",
      "path": "14"
    },
    "4567": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7882,
        8570
      ],
      "op": "POP",
      "path": "14"
    },
    "4568": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7882,
        8570
      ],
      "op": "POP",
      "path": "14"
    },
    "4569": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7882,
        8570
      ],
      "op": "POP",
      "path": "14"
    },
    "4570": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7840,
        8570
      ],
      "op": "POP",
      "path": "14"
    },
    "4571": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "o",
      "offset": [
        7840,
        8570
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4572": {
      "op": "JUMPDEST"
    },
    "4573": {
      "op": "PUSH2",
      "value": "0xD74"
    },
    "4576": {
      "op": "DUP1"
    },
    "4577": {
      "op": "PUSH3",
      "value": "0x1716"
    },
    "4581": {
      "op": "DUP4"
    },
    "4582": {
      "op": "CODECOPY"
    },
    "4583": {
      "op": "ADD"
    },
    "4584": {
      "op": "SWAP1"
    },
    "4585": {
      "jump": "o",
      "op": "JUMP"
    },
    "4586": {
      "op": "JUMPDEST"
    },
    "4587": {
      "op": "DUP3"
    },
    "4588": {
      "op": "DUP1"
    },
    "4589": {
      "op": "SLOAD"
    },
    "4590": {
      "op": "PUSH3",
      "value": "0x11F8"
    },
    "4594": {
      "op": "SWAP1"
    },
    "4595": {
      "op": "PUSH3",
      "value": "0x16DE"
    },
    "4599": {
      "jump": "i",
      "op": "JUMP"
    },
    "4600": {
      "op": "JUMPDEST"
    },
    "4601": {
      "op": "SWAP1"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4604": {
      "op": "MSTORE"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4609": {
      "op": "KECCAK256"
    },
    "4610": {
      "op": "SWAP1"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4613": {
      "op": "ADD"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4616": {
      "op": "SWAP1"
    },
    "4617": {
      "op": "DIV"
    },
    "4618": {
      "op": "DUP2"
    },
    "4619": {
      "op": "ADD"
    },
    "4620": {
      "op": "SWAP3"
    },
    "4621": {
      "op": "DUP3"
    },
    "4622": {
      "op": "PUSH3",
      "value": "0x121C"
    },
    "4626": {
      "op": "JUMPI"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4629": {
      "op": "DUP6"
    },
    "4630": {
      "op": "SSTORE"
    },
    "4631": {
      "op": "PUSH3",
      "value": "0x1267"
    },
    "4635": {
      "op": "JUMP"
    },
    "4636": {
      "op": "JUMPDEST"
    },
    "4637": {
      "op": "DUP3"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4640": {
      "op": "LT"
    },
    "4641": {
      "op": "PUSH3",
      "value": "0x1237"
    },
    "4645": {
      "op": "JUMPI"
    },
    "4646": {
      "op": "DUP1"
    },
    "4647": {
      "op": "MLOAD"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4650": {
      "op": "NOT"
    },
    "4651": {
      "op": "AND"
    },
    "4652": {
      "op": "DUP4"
    },
    "4653": {
      "op": "DUP1"
    },
    "4654": {
      "op": "ADD"
    },
    "4655": {
      "op": "OR"
    },
    "4656": {
      "op": "DUP6"
    },
    "4657": {
      "op": "SSTORE"
    },
    "4658": {
      "op": "PUSH3",
      "value": "0x1267"
    },
    "4662": {
      "op": "JUMP"
    },
    "4663": {
      "op": "JUMPDEST"
    },
    "4664": {
      "op": "DUP3"
    },
    "4665": {
      "op": "DUP1"
    },
    "4666": {
      "op": "ADD"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4669": {
      "op": "ADD"
    },
    "4670": {
      "op": "DUP6"
    },
    "4671": {
      "op": "SSTORE"
    },
    "4672": {
      "op": "DUP3"
    },
    "4673": {
      "op": "ISZERO"
    },
    "4674": {
      "op": "PUSH3",
      "value": "0x1267"
    },
    "4678": {
      "op": "JUMPI"
    },
    "4679": {
      "op": "SWAP2"
    },
    "4680": {
      "op": "DUP3"
    },
    "4681": {
      "op": "ADD"
    },
    "4682": {
      "op": "JUMPDEST"
    },
    "4683": {
      "op": "DUP3"
    },
    "4684": {
      "op": "DUP2"
    },
    "4685": {
      "op": "GT"
    },
    "4686": {
      "op": "ISZERO"
    },
    "4687": {
      "op": "PUSH3",
      "value": "0x1267"
    },
    "4691": {
      "op": "JUMPI"
    },
    "4692": {
      "op": "DUP3"
    },
    "4693": {
      "op": "MLOAD"
    },
    "4694": {
      "op": "DUP3"
    },
    "4695": {
      "op": "SSTORE"
    },
    "4696": {
      "op": "SWAP2"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4699": {
      "op": "ADD"
    },
    "4700": {
      "op": "SWAP2"
    },
    "4701": {
      "op": "SWAP1"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4704": {
      "op": "ADD"
    },
    "4705": {
      "op": "SWAP1"
    },
    "4706": {
      "op": "PUSH3",
      "value": "0x124A"
    },
    "4710": {
      "op": "JUMP"
    },
    "4711": {
      "op": "JUMPDEST"
    },
    "4712": {
      "op": "POP"
    },
    "4713": {
      "op": "PUSH3",
      "value": "0x1275"
    },
    "4717": {
      "op": "SWAP3"
    },
    "4718": {
      "op": "SWAP2"
    },
    "4719": {
      "op": "POP"
    },
    "4720": {
      "op": "PUSH3",
      "value": "0x1279"
    },
    "4724": {
      "jump": "i",
      "op": "JUMP"
    },
    "4725": {
      "op": "JUMPDEST"
    },
    "4726": {
      "op": "POP"
    },
    "4727": {
      "op": "SWAP1"
    },
    "4728": {
      "jump": "o",
      "op": "JUMP"
    },
    "4729": {
      "op": "JUMPDEST"
    },
    "4730": {
      "op": "JUMPDEST"
    },
    "4731": {
      "op": "DUP1"
    },
    "4732": {
      "op": "DUP3"
    },
    "4733": {
      "op": "GT"
    },
    "4734": {
      "op": "ISZERO"
    },
    "4735": {
      "op": "PUSH3",
      "value": "0x1275"
    },
    "4739": {
      "op": "JUMPI"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4742": {
      "op": "DUP2"
    },
    "4743": {
      "op": "SSTORE"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4746": {
      "op": "ADD"
    },
    "4747": {
      "op": "PUSH3",
      "value": "0x127A"
    },
    "4751": {
      "op": "JUMP"
    },
    "4752": {
      "op": "JUMPDEST"
    },
    "4753": {
      "op": "DUP1"
    },
    "4754": {
      "op": "CALLDATALOAD"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4761": {
      "op": "SHL"
    },
    "4762": {
      "op": "SUB"
    },
    "4763": {
      "op": "DUP2"
    },
    "4764": {
      "op": "AND"
    },
    "4765": {
      "op": "DUP2"
    },
    "4766": {
      "op": "EQ"
    },
    "4767": {
      "op": "PUSH3",
      "value": "0x12A8"
    },
    "4771": {
      "op": "JUMPI"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4774": {
      "op": "DUP1"
    },
    "4775": {
      "op": "REVERT"
    },
    "4776": {
      "op": "JUMPDEST"
    },
    "4777": {
      "op": "SWAP2"
    },
    "4778": {
      "op": "SWAP1"
    },
    "4779": {
      "op": "POP"
    },
    "4780": {
      "jump": "o",
      "op": "JUMP"
    },
    "4781": {
      "op": "JUMPDEST"
    },
    "4782": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4789": {
      "op": "SHL"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4792": {
      "op": "MSTORE"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4797": {
      "op": "MSTORE"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4802": {
      "op": "REVERT"
    },
    "4803": {
      "op": "JUMPDEST"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4806": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4815": {
      "op": "DUP1"
    },
    "4816": {
      "op": "DUP5"
    },
    "4817": {
      "op": "GT"
    },
    "4818": {
      "op": "ISZERO"
    },
    "4819": {
      "op": "PUSH3",
      "value": "0x12E1"
    },
    "4823": {
      "op": "JUMPI"
    },
    "4824": {
      "op": "PUSH3",
      "value": "0x12E1"
    },
    "4828": {
      "op": "PUSH3",
      "value": "0x12AD"
    },
    "4832": {
      "jump": "i",
      "op": "JUMP"
    },
    "4833": {
      "op": "JUMPDEST"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4836": {
      "op": "MLOAD"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4839": {
      "op": "DUP6"
    },
    "4840": {
      "op": "ADD"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4843": {
      "op": "NOT"
    },
    "4844": {
      "op": "SWAP1"
    },
    "4845": {
      "op": "DUP2"
    },
    "4846": {
      "op": "AND"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4849": {
      "op": "ADD"
    },
    "4850": {
      "op": "AND"
    },
    "4851": {
      "op": "DUP2"
    },
    "4852": {
      "op": "ADD"
    },
    "4853": {
      "op": "SWAP1"
    },
    "4854": {
      "op": "DUP3"
    },
    "4855": {
      "op": "DUP3"
    },
    "4856": {
      "op": "GT"
    },
    "4857": {
      "op": "DUP2"
    },
    "4858": {
      "op": "DUP4"
    },
    "4859": {
      "op": "LT"
    },
    "4860": {
      "op": "OR"
    },
    "4861": {
      "op": "ISZERO"
    },
    "4862": {
      "op": "PUSH3",
      "value": "0x130C"
    },
    "4866": {
      "op": "JUMPI"
    },
    "4867": {
      "op": "PUSH3",
      "value": "0x130C"
    },
    "4871": {
      "op": "PUSH3",
      "value": "0x12AD"
    },
    "4875": {
      "jump": "i",
      "op": "JUMP"
    },
    "4876": {
      "op": "JUMPDEST"
    },
    "4877": {
      "op": "DUP2"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4880": {
      "op": "MSTORE"
    },
    "4881": {
      "op": "DUP1"
    },
    "4882": {
      "op": "SWAP4"
    },
    "4883": {
      "op": "POP"
    },
    "4884": {
      "op": "DUP6"
    },
    "4885": {
      "op": "DUP2"
    },
    "4886": {
      "op": "MSTORE"
    },
    "4887": {
      "op": "DUP7"
    },
    "4888": {
      "op": "DUP7"
    },
    "4889": {
      "op": "DUP7"
    },
    "4890": {
      "op": "ADD"
    },
    "4891": {
      "op": "GT"
    },
    "4892": {
      "op": "ISZERO"
    },
    "4893": {
      "op": "PUSH3",
      "value": "0x1326"
    },
    "4897": {
      "op": "JUMPI"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4900": {
      "op": "DUP1"
    },
    "4901": {
      "op": "REVERT"
    },
    "4902": {
      "op": "JUMPDEST"
    },
    "4903": {
      "op": "DUP6"
    },
    "4904": {
      "op": "DUP6"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4907": {
      "op": "DUP4"
    },
    "4908": {
      "op": "ADD"
    },
    "4909": {
      "op": "CALLDATACOPY"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4914": {
      "op": "DUP8"
    },
    "4915": {
      "op": "DUP4"
    },
    "4916": {
      "op": "ADD"
    },
    "4917": {
      "op": "ADD"
    },
    "4918": {
      "op": "MSTORE"
    },
    "4919": {
      "op": "POP"
    },
    "4920": {
      "op": "POP"
    },
    "4921": {
      "op": "POP"
    },
    "4922": {
      "op": "SWAP4"
    },
    "4923": {
      "op": "SWAP3"
    },
    "4924": {
      "op": "POP"
    },
    "4925": {
      "op": "POP"
    },
    "4926": {
      "op": "POP"
    },
    "4927": {
      "jump": "o",
      "op": "JUMP"
    },
    "4928": {
      "op": "JUMPDEST"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4931": {
      "op": "DUP3"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4934": {
      "op": "DUP4"
    },
    "4935": {
      "op": "ADD"
    },
    "4936": {
      "op": "SLT"
    },
    "4937": {
      "op": "PUSH3",
      "value": "0x1352"
    },
    "4941": {
      "op": "JUMPI"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4944": {
      "op": "DUP1"
    },
    "4945": {
      "op": "REVERT"
    },
    "4946": {
      "op": "JUMPDEST"
    },
    "4947": {
      "op": "PUSH3",
      "value": "0x1363"
    },
    "4951": {
      "op": "DUP4"
    },
    "4952": {
      "op": "DUP4"
    },
    "4953": {
      "op": "CALLDATALOAD"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4956": {
      "op": "DUP6"
    },
    "4957": {
      "op": "ADD"
    },
    "4958": {
      "op": "PUSH3",
      "value": "0x12C3"
    },
    "4962": {
      "jump": "i",
      "op": "JUMP"
    },
    "4963": {
      "op": "JUMPDEST"
    },
    "4964": {
      "op": "SWAP4"
    },
    "4965": {
      "op": "SWAP3"
    },
    "4966": {
      "op": "POP"
    },
    "4967": {
      "op": "POP"
    },
    "4968": {
      "op": "POP"
    },
    "4969": {
      "jump": "o",
      "op": "JUMP"
    },
    "4970": {
      "op": "JUMPDEST"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4973": {
      "op": "DUP1"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4976": {
      "op": "DUP1"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4979": {
      "op": "DUP1"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4982": {
      "op": "DUP8"
    },
    "4983": {
      "op": "DUP10"
    },
    "4984": {
      "op": "SUB"
    },
    "4985": {
      "op": "SLT"
    },
    "4986": {
      "op": "ISZERO"
    },
    "4987": {
      "op": "PUSH3",
      "value": "0x1384"
    },
    "4991": {
      "op": "JUMPI"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4994": {
      "op": "DUP1"
    },
    "4995": {
      "op": "REVERT"
    },
    "4996": {
      "op": "JUMPDEST"
    },
    "4997": {
      "op": "PUSH3",
      "value": "0x138F"
    },
    "5001": {
      "op": "DUP8"
    },
    "5002": {
      "op": "PUSH3",
      "value": "0x1290"
    },
    "5006": {
      "jump": "i",
      "op": "JUMP"
    },
    "5007": {
      "op": "JUMPDEST"
    },
    "5008": {
      "op": "SWAP6"
    },
    "5009": {
      "op": "POP"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5012": {
      "op": "DUP8"
    },
    "5013": {
      "op": "ADD"
    },
    "5014": {
      "op": "CALLDATALOAD"
    },
    "5015": {
      "op": "SWAP5"
    },
    "5016": {
      "op": "POP"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5019": {
      "op": "DUP8"
    },
    "5020": {
      "op": "ADD"
    },
    "5021": {
      "op": "CALLDATALOAD"
    },
    "5022": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5031": {
      "op": "DUP1"
    },
    "5032": {
      "op": "DUP3"
    },
    "5033": {
      "op": "GT"
    },
    "5034": {
      "op": "ISZERO"
    },
    "5035": {
      "op": "PUSH3",
      "value": "0x13B4"
    },
    "5039": {
      "op": "JUMPI"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5042": {
      "op": "DUP1"
    },
    "5043": {
      "op": "REVERT"
    },
    "5044": {
      "op": "JUMPDEST"
    },
    "5045": {
      "op": "PUSH3",
      "value": "0x13C2"
    },
    "5049": {
      "op": "DUP11"
    },
    "5050": {
      "op": "DUP4"
    },
    "5051": {
      "op": "DUP12"
    },
    "5052": {
      "op": "ADD"
    },
    "5053": {
      "op": "PUSH3",
      "value": "0x1340"
    },
    "5057": {
      "jump": "i",
      "op": "JUMP"
    },
    "5058": {
      "op": "JUMPDEST"
    },
    "5059": {
      "op": "SWAP6"
    },
    "5060": {
      "op": "POP"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5063": {
      "op": "DUP10"
    },
    "5064": {
      "op": "ADD"
    },
    "5065": {
      "op": "CALLDATALOAD"
    },
    "5066": {
      "op": "SWAP2"
    },
    "5067": {
      "op": "POP"
    },
    "5068": {
      "op": "DUP1"
    },
    "5069": {
      "op": "DUP3"
    },
    "5070": {
      "op": "GT"
    },
    "5071": {
      "op": "ISZERO"
    },
    "5072": {
      "op": "PUSH3",
      "value": "0x13D9"
    },
    "5076": {
      "op": "JUMPI"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5079": {
      "op": "DUP1"
    },
    "5080": {
      "op": "REVERT"
    },
    "5081": {
      "op": "JUMPDEST"
    },
    "5082": {
      "op": "POP"
    },
    "5083": {
      "op": "PUSH3",
      "value": "0x13E8"
    },
    "5087": {
      "op": "DUP10"
    },
    "5088": {
      "op": "DUP3"
    },
    "5089": {
      "op": "DUP11"
    },
    "5090": {
      "op": "ADD"
    },
    "5091": {
      "op": "PUSH3",
      "value": "0x1340"
    },
    "5095": {
      "jump": "i",
      "op": "JUMP"
    },
    "5096": {
      "op": "JUMPDEST"
    },
    "5097": {
      "op": "SWAP4"
    },
    "5098": {
      "op": "POP"
    },
    "5099": {
      "op": "POP"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5102": {
      "op": "DUP8"
    },
    "5103": {
      "op": "ADD"
    },
    "5104": {
      "op": "CALLDATALOAD"
    },
    "5105": {
      "op": "SWAP2"
    },
    "5106": {
      "op": "POP"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5109": {
      "op": "DUP8"
    },
    "5110": {
      "op": "ADD"
    },
    "5111": {
      "op": "CALLDATALOAD"
    },
    "5112": {
      "op": "SWAP1"
    },
    "5113": {
      "op": "POP"
    },
    "5114": {
      "op": "SWAP3"
    },
    "5115": {
      "op": "SWAP6"
    },
    "5116": {
      "op": "POP"
    },
    "5117": {
      "op": "SWAP3"
    },
    "5118": {
      "op": "SWAP6"
    },
    "5119": {
      "op": "POP"
    },
    "5120": {
      "op": "SWAP3"
    },
    "5121": {
      "op": "SWAP6"
    },
    "5122": {
      "jump": "o",
      "op": "JUMP"
    },
    "5123": {
      "op": "JUMPDEST"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5128": {
      "op": "DUP3"
    },
    "5129": {
      "op": "DUP5"
    },
    "5130": {
      "op": "SUB"
    },
    "5131": {
      "op": "SLT"
    },
    "5132": {
      "op": "ISZERO"
    },
    "5133": {
      "op": "PUSH3",
      "value": "0x1416"
    },
    "5137": {
      "op": "JUMPI"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5140": {
      "op": "DUP1"
    },
    "5141": {
      "op": "REVERT"
    },
    "5142": {
      "op": "JUMPDEST"
    },
    "5143": {
      "op": "POP"
    },
    "5144": {
      "op": "CALLDATALOAD"
    },
    "5145": {
      "op": "SWAP2"
    },
    "5146": {
      "op": "SWAP1"
    },
    "5147": {
      "op": "POP"
    },
    "5148": {
      "jump": "o",
      "op": "JUMP"
    },
    "5149": {
      "op": "JUMPDEST"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5152": {
      "op": "DUP1"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5155": {
      "op": "DUP1"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5158": {
      "op": "DUP6"
    },
    "5159": {
      "op": "DUP8"
    },
    "5160": {
      "op": "SUB"
    },
    "5161": {
      "op": "SLT"
    },
    "5162": {
      "op": "ISZERO"
    },
    "5163": {
      "op": "PUSH3",
      "value": "0x1434"
    },
    "5167": {
      "op": "JUMPI"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5170": {
      "op": "DUP1"
    },
    "5171": {
      "op": "REVERT"
    },
    "5172": {
      "op": "JUMPDEST"
    },
    "5173": {
      "op": "PUSH3",
      "value": "0x143F"
    },
    "5177": {
      "op": "DUP6"
    },
    "5178": {
      "op": "PUSH3",
      "value": "0x1290"
    },
    "5182": {
      "jump": "i",
      "op": "JUMP"
    },
    "5183": {
      "op": "JUMPDEST"
    },
    "5184": {
      "op": "SWAP4"
    },
    "5185": {
      "op": "POP"
    },
    "5186": {
      "op": "PUSH3",
      "value": "0x144F"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5192": {
      "op": "DUP7"
    },
    "5193": {
      "op": "ADD"
    },
    "5194": {
      "op": "PUSH3",
      "value": "0x1290"
    },
    "5198": {
      "jump": "i",
      "op": "JUMP"
    },
    "5199": {
      "op": "JUMPDEST"
    },
    "5200": {
      "op": "SWAP3"
    },
    "5201": {
      "op": "POP"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5204": {
      "op": "DUP6"
    },
    "5205": {
      "op": "ADD"
    },
    "5206": {
      "op": "CALLDATALOAD"
    },
    "5207": {
      "op": "SWAP2"
    },
    "5208": {
      "op": "POP"
    },
    "5209": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5211": {
      "op": "DUP6"
    },
    "5212": {
      "op": "ADD"
    },
    "5213": {
      "op": "CALLDATALOAD"
    },
    "5214": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5223": {
      "op": "DUP2"
    },
    "5224": {
      "op": "GT"
    },
    "5225": {
      "op": "ISZERO"
    },
    "5226": {
      "op": "PUSH3",
      "value": "0x1473"
    },
    "5230": {
      "op": "JUMPI"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5233": {
      "op": "DUP1"
    },
    "5234": {
      "op": "REVERT"
    },
    "5235": {
      "op": "JUMPDEST"
    },
    "5236": {
      "op": "DUP6"
    },
    "5237": {
      "op": "ADD"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5240": {
      "op": "DUP2"
    },
    "5241": {
      "op": "ADD"
    },
    "5242": {
      "op": "DUP8"
    },
    "5243": {
      "op": "SGT"
    },
    "5244": {
      "op": "PUSH3",
      "value": "0x1485"
    },
    "5248": {
      "op": "JUMPI"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5251": {
      "op": "DUP1"
    },
    "5252": {
      "op": "REVERT"
    },
    "5253": {
      "op": "JUMPDEST"
    },
    "5254": {
      "op": "PUSH3",
      "value": "0x1496"
    },
    "5258": {
      "op": "DUP8"
    },
    "5259": {
      "op": "DUP3"
    },
    "5260": {
      "op": "CALLDATALOAD"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5263": {
      "op": "DUP5"
    },
    "5264": {
      "op": "ADD"
    },
    "5265": {
      "op": "PUSH3",
      "value": "0x12C3"
    },
    "5269": {
      "jump": "i",
      "op": "JUMP"
    },
    "5270": {
      "op": "JUMPDEST"
    },
    "5271": {
      "op": "SWAP2"
    },
    "5272": {
      "op": "POP"
    },
    "5273": {
      "op": "POP"
    },
    "5274": {
      "op": "SWAP3"
    },
    "5275": {
      "op": "SWAP6"
    },
    "5276": {
      "op": "SWAP2"
    },
    "5277": {
      "op": "SWAP5"
    },
    "5278": {
      "op": "POP"
    },
    "5279": {
      "op": "SWAP3"
    },
    "5280": {
      "op": "POP"
    },
    "5281": {
      "jump": "o",
      "op": "JUMP"
    },
    "5282": {
      "op": "JUMPDEST"
    },
    "5283": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5290": {
      "op": "SHL"
    },
    "5291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5293": {
      "op": "MSTORE"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5298": {
      "op": "MSTORE"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5303": {
      "op": "REVERT"
    },
    "5304": {
      "op": "JUMPDEST"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5307": {
      "op": "DUP2"
    },
    "5308": {
      "op": "LT"
    },
    "5309": {
      "op": "PUSH3",
      "value": "0x14D7"
    },
    "5313": {
      "op": "JUMPI"
    },
    "5314": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5321": {
      "op": "SHL"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5324": {
      "op": "MSTORE"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5329": {
      "op": "MSTORE"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5334": {
      "op": "REVERT"
    },
    "5335": {
      "op": "JUMPDEST"
    },
    "5336": {
      "op": "SWAP1"
    },
    "5337": {
      "op": "MSTORE"
    },
    "5338": {
      "jump": "o",
      "op": "JUMP"
    },
    "5339": {
      "op": "JUMPDEST"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5342": {
      "op": "DUP2"
    },
    "5343": {
      "op": "ADD"
    },
    "5344": {
      "op": "PUSH3",
      "value": "0x14EB"
    },
    "5348": {
      "op": "DUP3"
    },
    "5349": {
      "op": "DUP5"
    },
    "5350": {
      "op": "PUSH3",
      "value": "0x14B8"
    },
    "5354": {
      "jump": "i",
      "op": "JUMP"
    },
    "5355": {
      "op": "JUMPDEST"
    },
    "5356": {
      "op": "SWAP3"
    },
    "5357": {
      "op": "SWAP2"
    },
    "5358": {
      "op": "POP"
    },
    "5359": {
      "op": "POP"
    },
    "5360": {
      "jump": "o",
      "op": "JUMP"
    },
    "5361": {
      "op": "JUMPDEST"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5364": {
      "op": "JUMPDEST"
    },
    "5365": {
      "op": "DUP4"
    },
    "5366": {
      "op": "DUP2"
    },
    "5367": {
      "op": "LT"
    },
    "5368": {
      "op": "ISZERO"
    },
    "5369": {
      "op": "PUSH3",
      "value": "0x150E"
    },
    "5373": {
      "op": "JUMPI"
    },
    "5374": {
      "op": "DUP2"
    },
    "5375": {
      "op": "DUP2"
    },
    "5376": {
      "op": "ADD"
    },
    "5377": {
      "op": "MLOAD"
    },
    "5378": {
      "op": "DUP4"
    },
    "5379": {
      "op": "DUP3"
    },
    "5380": {
      "op": "ADD"
    },
    "5381": {
      "op": "MSTORE"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5384": {
      "op": "ADD"
    },
    "5385": {
      "op": "PUSH3",
      "value": "0x14F4"
    },
    "5389": {
      "op": "JUMP"
    },
    "5390": {
      "op": "JUMPDEST"
    },
    "5391": {
      "op": "DUP4"
    },
    "5392": {
      "op": "DUP2"
    },
    "5393": {
      "op": "GT"
    },
    "5394": {
      "op": "ISZERO"
    },
    "5395": {
      "op": "PUSH3",
      "value": "0x151E"
    },
    "5399": {
      "op": "JUMPI"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5402": {
      "op": "DUP5"
    },
    "5403": {
      "op": "DUP5"
    },
    "5404": {
      "op": "ADD"
    },
    "5405": {
      "op": "MSTORE"
    },
    "5406": {
      "op": "JUMPDEST"
    },
    "5407": {
      "op": "POP"
    },
    "5408": {
      "op": "POP"
    },
    "5409": {
      "op": "POP"
    },
    "5410": {
      "op": "POP"
    },
    "5411": {
      "jump": "o",
      "op": "JUMP"
    },
    "5412": {
      "op": "JUMPDEST"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5415": {
      "op": "DUP2"
    },
    "5416": {
      "op": "MLOAD"
    },
    "5417": {
      "op": "DUP1"
    },
    "5418": {
      "op": "DUP5"
    },
    "5419": {
      "op": "MSTORE"
    },
    "5420": {
      "op": "PUSH3",
      "value": "0x153E"
    },
    "5424": {
      "op": "DUP2"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5427": {
      "op": "DUP7"
    },
    "5428": {
      "op": "ADD"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5431": {
      "op": "DUP7"
    },
    "5432": {
      "op": "ADD"
    },
    "5433": {
      "op": "PUSH3",
      "value": "0x14F1"
    },
    "5437": {
      "jump": "i",
      "op": "JUMP"
    },
    "5438": {
      "op": "JUMPDEST"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5441": {
      "op": "ADD"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5444": {
      "op": "NOT"
    },
    "5445": {
      "op": "AND"
    },
    "5446": {
      "op": "SWAP3"
    },
    "5447": {
      "op": "SWAP1"
    },
    "5448": {
      "op": "SWAP3"
    },
    "5449": {
      "op": "ADD"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5452": {
      "op": "ADD"
    },
    "5453": {
      "op": "SWAP3"
    },
    "5454": {
      "op": "SWAP2"
    },
    "5455": {
      "op": "POP"
    },
    "5456": {
      "op": "POP"
    },
    "5457": {
      "jump": "o",
      "op": "JUMP"
    },
    "5458": {
      "op": "JUMPDEST"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5461": {
      "op": "DUP2"
    },
    "5462": {
      "op": "MSTORE"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5465": {
      "op": "PUSH3",
      "value": "0x1363"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5471": {
      "op": "DUP4"
    },
    "5472": {
      "op": "ADD"
    },
    "5473": {
      "op": "DUP5"
    },
    "5474": {
      "op": "PUSH3",
      "value": "0x1524"
    },
    "5478": {
      "jump": "i",
      "op": "JUMP"
    },
    "5479": {
      "op": "JUMPDEST"
    },
    "5480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5482": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5485": {
      "op": "DUP12"
    },
    "5486": {
      "op": "DUP4"
    },
    "5487": {
      "op": "MSTORE"
    },
    "5488": {
      "op": "DUP11"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5491": {
      "op": "DUP5"
    },
    "5492": {
      "op": "ADD"
    },
    "5493": {
      "op": "MSTORE"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5500": {
      "op": "SHL"
    },
    "5501": {
      "op": "SUB"
    },
    "5502": {
      "op": "DUP1"
    },
    "5503": {
      "op": "DUP12"
    },
    "5504": {
      "op": "AND"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5507": {
      "op": "DUP6"
    },
    "5508": {
      "op": "ADD"
    },
    "5509": {
      "op": "MSTORE"
    },
    "5510": {
      "op": "DUP1"
    },
    "5511": {
      "op": "DUP11"
    },
    "5512": {
      "op": "AND"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5515": {
      "op": "DUP6"
    },
    "5516": {
      "op": "ADD"
    },
    "5517": {
      "op": "MSTORE"
    },
    "5518": {
      "op": "DUP2"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5521": {
      "op": "DUP6"
    },
    "5522": {
      "op": "ADD"
    },
    "5523": {
      "op": "MSTORE"
    },
    "5524": {
      "op": "PUSH3",
      "value": "0x15A1"
    },
    "5528": {
      "op": "DUP3"
    },
    "5529": {
      "op": "DUP6"
    },
    "5530": {
      "op": "ADD"
    },
    "5531": {
      "op": "DUP11"
    },
    "5532": {
      "op": "PUSH3",
      "value": "0x1524"
    },
    "5536": {
      "jump": "i",
      "op": "JUMP"
    },
    "5537": {
      "op": "JUMPDEST"
    },
    "5538": {
      "op": "SWAP2"
    },
    "5539": {
      "op": "POP"
    },
    "5540": {
      "op": "DUP4"
    },
    "5541": {
      "op": "DUP3"
    },
    "5542": {
      "op": "SUB"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5545": {
      "op": "DUP6"
    },
    "5546": {
      "op": "ADD"
    },
    "5547": {
      "op": "MSTORE"
    },
    "5548": {
      "op": "PUSH3",
      "value": "0x15B7"
    },
    "5552": {
      "op": "DUP3"
    },
    "5553": {
      "op": "DUP10"
    },
    "5554": {
      "op": "PUSH3",
      "value": "0x1524"
    },
    "5558": {
      "jump": "i",
      "op": "JUMP"
    },
    "5559": {
      "op": "JUMPDEST"
    },
    "5560": {
      "op": "SWAP3"
    },
    "5561": {
      "op": "POP"
    },
    "5562": {
      "op": "DUP1"
    },
    "5563": {
      "op": "DUP8"
    },
    "5564": {
      "op": "AND"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5567": {
      "op": "DUP6"
    },
    "5568": {
      "op": "ADD"
    },
    "5569": {
      "op": "MSTORE"
    },
    "5570": {
      "op": "POP"
    },
    "5571": {
      "op": "POP"
    },
    "5572": {
      "op": "DUP4"
    },
    "5573": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5575": {
      "op": "DUP4"
    },
    "5576": {
      "op": "ADD"
    },
    "5577": {
      "op": "MSTORE"
    },
    "5578": {
      "op": "PUSH3",
      "value": "0x15D9"
    },
    "5582": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5585": {
      "op": "DUP4"
    },
    "5586": {
      "op": "ADD"
    },
    "5587": {
      "op": "DUP5"
    },
    "5588": {
      "op": "PUSH3",
      "value": "0x14B8"
    },
    "5592": {
      "jump": "i",
      "op": "JUMP"
    },
    "5593": {
      "op": "JUMPDEST"
    },
    "5594": {
      "op": "SWAP11"
    },
    "5595": {
      "op": "SWAP10"
    },
    "5596": {
      "op": "POP"
    },
    "5597": {
      "op": "POP"
    },
    "5598": {
      "op": "POP"
    },
    "5599": {
      "op": "POP"
    },
    "5600": {
      "op": "POP"
    },
    "5601": {
      "op": "POP"
    },
    "5602": {
      "op": "POP"
    },
    "5603": {
      "op": "POP"
    },
    "5604": {
      "op": "POP"
    },
    "5605": {
      "op": "POP"
    },
    "5606": {
      "jump": "o",
      "op": "JUMP"
    },
    "5607": {
      "op": "JUMPDEST"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5610": {
      "op": "DUP2"
    },
    "5611": {
      "op": "MSTORE"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5614": {
      "op": "PUSH3",
      "value": "0x15FC"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5620": {
      "op": "DUP4"
    },
    "5621": {
      "op": "ADD"
    },
    "5622": {
      "op": "DUP8"
    },
    "5623": {
      "op": "PUSH3",
      "value": "0x1524"
    },
    "5627": {
      "jump": "i",
      "op": "JUMP"
    },
    "5628": {
      "op": "JUMPDEST"
    },
    "5629": {
      "op": "DUP3"
    },
    "5630": {
      "op": "DUP2"
    },
    "5631": {
      "op": "SUB"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5634": {
      "op": "DUP5"
    },
    "5635": {
      "op": "ADD"
    },
    "5636": {
      "op": "MSTORE"
    },
    "5637": {
      "op": "PUSH3",
      "value": "0x1610"
    },
    "5641": {
      "op": "DUP2"
    },
    "5642": {
      "op": "DUP8"
    },
    "5643": {
      "op": "PUSH3",
      "value": "0x1524"
    },
    "5647": {
      "jump": "i",
      "op": "JUMP"
    },
    "5648": {
      "op": "JUMPDEST"
    },
    "5649": {
      "op": "SWAP2"
    },
    "5650": {
      "op": "POP"
    },
    "5651": {
      "op": "POP"
    },
    "5652": {
      "op": "DUP4"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5655": {
      "op": "DUP4"
    },
    "5656": {
      "op": "ADD"
    },
    "5657": {
      "op": "MSTORE"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5664": {
      "op": "SHL"
    },
    "5665": {
      "op": "SUB"
    },
    "5666": {
      "op": "DUP4"
    },
    "5667": {
      "op": "AND"
    },
    "5668": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5670": {
      "op": "DUP4"
    },
    "5671": {
      "op": "ADD"
    },
    "5672": {
      "op": "MSTORE"
    },
    "5673": {
      "op": "SWAP6"
    },
    "5674": {
      "op": "SWAP5"
    },
    "5675": {
      "op": "POP"
    },
    "5676": {
      "op": "POP"
    },
    "5677": {
      "op": "POP"
    },
    "5678": {
      "op": "POP"
    },
    "5679": {
      "op": "POP"
    },
    "5680": {
      "jump": "o",
      "op": "JUMP"
    },
    "5681": {
      "op": "JUMPDEST"
    },
    "5682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5684": {
      "op": "DUP3"
    },
    "5685": {
      "op": "MLOAD"
    },
    "5686": {
      "op": "PUSH3",
      "value": "0x1645"
    },
    "5690": {
      "op": "DUP2"
    },
    "5691": {
      "op": "DUP5"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5694": {
      "op": "DUP8"
    },
    "5695": {
      "op": "ADD"
    },
    "5696": {
      "op": "PUSH3",
      "value": "0x14F1"
    },
    "5700": {
      "jump": "i",
      "op": "JUMP"
    },
    "5701": {
      "op": "JUMPDEST"
    },
    "5702": {
      "op": "SWAP2"
    },
    "5703": {
      "op": "SWAP1"
    },
    "5704": {
      "op": "SWAP2"
    },
    "5705": {
      "op": "ADD"
    },
    "5706": {
      "op": "SWAP3"
    },
    "5707": {
      "op": "SWAP2"
    },
    "5708": {
      "op": "POP"
    },
    "5709": {
      "op": "POP"
    },
    "5710": {
      "jump": "o",
      "op": "JUMP"
    },
    "5711": {
      "op": "JUMPDEST"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5716": {
      "op": "DUP3"
    },
    "5717": {
      "op": "DUP5"
    },
    "5718": {
      "op": "SUB"
    },
    "5719": {
      "op": "SLT"
    },
    "5720": {
      "op": "ISZERO"
    },
    "5721": {
      "op": "PUSH3",
      "value": "0x1662"
    },
    "5725": {
      "op": "JUMPI"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5728": {
      "op": "DUP1"
    },
    "5729": {
      "op": "REVERT"
    },
    "5730": {
      "op": "JUMPDEST"
    },
    "5731": {
      "op": "POP"
    },
    "5732": {
      "op": "MLOAD"
    },
    "5733": {
      "op": "SWAP2"
    },
    "5734": {
      "op": "SWAP1"
    },
    "5735": {
      "op": "POP"
    },
    "5736": {
      "jump": "o",
      "op": "JUMP"
    },
    "5737": {
      "op": "JUMPDEST"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5742": {
      "op": "DUP3"
    },
    "5743": {
      "op": "DUP5"
    },
    "5744": {
      "op": "SUB"
    },
    "5745": {
      "op": "SLT"
    },
    "5746": {
      "op": "ISZERO"
    },
    "5747": {
      "op": "PUSH3",
      "value": "0x167C"
    },
    "5751": {
      "op": "JUMPI"
    },
    "5752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5754": {
      "op": "DUP1"
    },
    "5755": {
      "op": "REVERT"
    },
    "5756": {
      "op": "JUMPDEST"
    },
    "5757": {
      "op": "DUP2"
    },
    "5758": {
      "op": "MLOAD"
    },
    "5759": {
      "op": "DUP1"
    },
    "5760": {
      "op": "ISZERO"
    },
    "5761": {
      "op": "ISZERO"
    },
    "5762": {
      "op": "DUP2"
    },
    "5763": {
      "op": "EQ"
    },
    "5764": {
      "op": "PUSH3",
      "value": "0x1363"
    },
    "5768": {
      "op": "JUMPI"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5771": {
      "op": "DUP1"
    },
    "5772": {
      "op": "REVERT"
    },
    "5773": {
      "op": "JUMPDEST"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5776": {
      "op": "DUP2"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5779": {
      "op": "NOT"
    },
    "5780": {
      "op": "DIV"
    },
    "5781": {
      "op": "DUP4"
    },
    "5782": {
      "op": "GT"
    },
    "5783": {
      "op": "DUP3"
    },
    "5784": {
      "op": "ISZERO"
    },
    "5785": {
      "op": "ISZERO"
    },
    "5786": {
      "op": "AND"
    },
    "5787": {
      "op": "ISZERO"
    },
    "5788": {
      "op": "PUSH3",
      "value": "0x16B6"
    },
    "5792": {
      "op": "JUMPI"
    },
    "5793": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5800": {
      "op": "SHL"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5803": {
      "op": "MSTORE"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5808": {
      "op": "MSTORE"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5813": {
      "op": "REVERT"
    },
    "5814": {
      "op": "JUMPDEST"
    },
    "5815": {
      "op": "POP"
    },
    "5816": {
      "op": "MUL"
    },
    "5817": {
      "op": "SWAP1"
    },
    "5818": {
      "jump": "o",
      "op": "JUMP"
    },
    "5819": {
      "op": "JUMPDEST"
    },
    "5820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5822": {
      "op": "DUP3"
    },
    "5823": {
      "op": "PUSH3",
      "value": "0x16D9"
    },
    "5827": {
      "op": "JUMPI"
    },
    "5828": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5835": {
      "op": "SHL"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5838": {
      "op": "MSTORE"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5843": {
      "op": "MSTORE"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5848": {
      "op": "REVERT"
    },
    "5849": {
      "op": "JUMPDEST"
    },
    "5850": {
      "op": "POP"
    },
    "5851": {
      "op": "DIV"
    },
    "5852": {
      "op": "SWAP1"
    },
    "5853": {
      "jump": "o",
      "op": "JUMP"
    },
    "5854": {
      "op": "JUMPDEST"
    },
    "5855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5857": {
      "op": "DUP2"
    },
    "5858": {
      "op": "DUP2"
    },
    "5859": {
      "op": "SHR"
    },
    "5860": {
      "op": "SWAP1"
    },
    "5861": {
      "op": "DUP3"
    },
    "5862": {
      "op": "AND"
    },
    "5863": {
      "op": "DUP1"
    },
    "5864": {
      "op": "PUSH3",
      "value": "0x16F3"
    },
    "5868": {
      "op": "JUMPI"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5871": {
      "op": "DUP3"
    },
    "5872": {
      "op": "AND"
    },
    "5873": {
      "op": "SWAP2"
    },
    "5874": {
      "op": "POP"
    },
    "5875": {
      "op": "JUMPDEST"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5878": {
      "op": "DUP3"
    },
    "5879": {
      "op": "LT"
    },
    "5880": {
      "op": "DUP2"
    },
    "5881": {
      "op": "EQ"
    },
    "5882": {
      "op": "ISZERO"
    },
    "5883": {
      "op": "PUSH3",
      "value": "0xBAC"
    },
    "5887": {
      "op": "JUMPI"
    },
    "5888": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5895": {
      "op": "SHL"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5898": {
      "op": "MSTORE"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5903": {
      "op": "MSTORE"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5908": {
      "op": "REVERT"
    }
  },
  "sha1": "2844b9e6693e7987f9ef2bb3e94874cbc989bed2",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\nimport \"./ERC20Factory.sol\";\n\n/// @title NFT Fractionalizer with Buyout Functionality\n/// @author Web3Wannabe\n/// @notice NFTs can be sent to the contract with a specified buyout price. The sender receives the total supply of a newly created ERC20 token.\ncontract FractionalizeNFT is IERC721Receiver {\n    using Counters for Counters.Counter;\n    Counters.Counter private _fracNFTCount;\n\n    mapping(uint256 => FractionalizedNFT) public fracNFTs; // A mapping of all fractionalized NFTs.\n\n    struct FractionalizedNFT {\n        uint256 fracNFTId;\n        uint256 nftTokenId;\n        address erc721Address;\n        address erc20Address;\n        string erc20Symbol;\n        string erc20Name;\n        address payable originalOwner;\n        uint256 buyoutPrice;\n        State state;\n    }\n\n    enum State {\n        Fractionalized,\n        Redeemed,\n        BoughtOut\n    }\n\n    constructor() {}\n\n    /// @notice Emitted when ether is sent to the contract.\n    /// @param sender The sender of the transaction/ether.\n    /// @param value The amount of ether sent.\n    event Received(address indexed sender, uint256 indexed value);\n\n    /// @notice Emitted when an NFT is transferred to the FractionalizeNFT contract.\n    /// @param sender The address that sent the NFT.\n    event NftReceived(address indexed sender);\n\n    /// @notice Emitted when a user successfully fractionalizes an NFT and receives the total supply of the newly created ERC20 token.\n    /// @param sender The address that sent/fractionalized the NFT (i.e., the address that called fractionalize()).\n    /// @param fracNFTId The ID of the newly fractionalized NFT.\n    /// @param erc20Name The name of the newly created ERC20 token.\n    /// @param erc20Address The contract address of the newly created ERC20 token.\n    event Fractionalized(\n        address indexed sender,\n        uint256 indexed fracNFTId,\n        string indexed erc20Name,\n        address erc20Address\n    );\n\n    /// @notice List of all fractionalized NFT ids.\n    /// @dev Used as a helper when iterating over fractionalized NFTs in frontend clients.\n    uint256[] public idList;\n\n    /// @notice idList length.\n    /// @dev Used as a helper when iterating over fractionalized NFTs in frontend clients.\n    uint256 public idListLength;\n\n    /// @notice Emitted when a user successfully redeems an NFT in exchange for the total ERC20 supply.\n    /// @param sender The address that redeemed the NFT (i.e., the address that called redeem()).\n    /// @param fracNFTId The index of the fractionalized NFT that was redeemed.\n    event Redeemed(address indexed sender, uint256 indexed fracNFTId);\n\n    /// @notice Emitted when a user successfully claims a payout following the buyout of an NFT from the FractionalizeNFT contract.\n    /// @param sender The address that the user held ERC20 tokens for (i.e., the address that called claim()).\n    /// @param fracNFTId The index of the fractionalized NFT that was bought.\n    event Claimed(address indexed sender, uint256 indexed fracNFTId);\n\n    /// @notice Emitted when a user successfully buys an NFT from the FractionalizeNFT contract.\n    /// @param sender The address that bought the NFT (i.e., the address that called buyout()).\n    /// @param fracNFTId The index of the fractionalized NFT that was bought.\n    event BoughtOut(address indexed sender, uint256 indexed fracNFTId);\n\n    modifier isLegalFracNftId(uint256 fracNFTId) {\n        require(\n            fracNFTId < _fracNFTCount.current(),\n            \"fracNFTId does not exist in fracNFTs.\"\n        );\n        _;\n    }\n\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    fallback() external payable {\n        revert();\n    }\n\n    /// @notice A getter function to get the current number of fractionalized NFT entries in the contract.\n    /// @return The number of fractionalized NFT entries.\n    function getFracNftCount() public view returns (uint256) {\n        return _fracNFTCount.current();\n    }\n\n    /// @notice A getter function for the contract address of a fractionalized NFT's ERC20 token.\n    /// @param fracNFTId The ID of the fractionalized NFT.\n    /// @return The ERC20 contract address.\n    function getERC20Address(uint256 fracNFTId)\n        public\n        view\n        isLegalFracNftId(fracNFTId)\n        returns (address)\n    {\n        return fracNFTs[fracNFTId].erc20Address;\n    }\n\n    /// @notice A getter function for the symbol of a fractionalized NFT's ERC20 token.\n    /// @param fracNFTId The ID of the fractionalized NFT.\n    /// @return The ERC20's symobl.\n    function getERC20Symbol(uint256 fracNFTId)\n        public\n        view\n        isLegalFracNftId(fracNFTId)\n        returns (string memory)\n    {\n        return fracNFTs[fracNFTId].erc20Symbol;\n    }\n\n    /// @notice A getter function for the state of a fractionalized NFT.\n    /// @param fracNFTId The ID of the fractionalized NFT.\n    /// @return The fractionalized NFT's state (Fractionalized, Redeemed or BoughtOut).\n    function getState(uint256 fracNFTId)\n        public\n        view\n        isLegalFracNftId(fracNFTId)\n        returns (State)\n    {\n        return fracNFTs[fracNFTId].state;\n    }\n\n    /// @notice Create a fractionalized NFT: Lock the NFT in the contract; create a new ERC20 token, as specified; and transfer the total supply of the token to the sender.\n    /// @param nftContractAddress The address of the NFT that is to be fractionalized.\n    /// @param nftTokenId The token ID of the NFT that is to be fractionalized.\n    /// @param erc20Name The name of the newly created ERC20 token.\n    /// @param erc20Symbol The symbol of the newly created ERC20 token.\n    /// @param erc20Supply The total supply of the newly created ERC20 token.\n    /// @param buyoutPrice The price (in Wei) for which the fractionalized NFT can be be bought for from the contract.\n    /// @dev Note, the NFT must be approved for transfer by the FractionalizeNFT contract.\n    /// @return The ID of the newly created fractionalized NFT.\n    function fractionalizeNft(\n        address nftContractAddress,\n        uint256 nftTokenId,\n        string memory erc20Name,\n        string memory erc20Symbol,\n        uint256 erc20Supply,\n        uint256 buyoutPrice\n    ) public returns (uint256) {\n        ERC20 erc20 = (new ERC20Factory)(\n            erc20Name,\n            erc20Symbol,\n            erc20Supply,\n            msg.sender\n        );\n        uint256 fracNFTId = _fracNFTCount.current();\n        fracNFTs[_fracNFTCount.current()] = FractionalizedNFT({\n            fracNFTId: fracNFTId,\n            nftTokenId: nftTokenId,\n            erc721Address: nftContractAddress,\n            erc20Address: address(erc20),\n            erc20Symbol: erc20Symbol,\n            erc20Name: erc20Name,\n            originalOwner: payable(msg.sender),\n            buyoutPrice: buyoutPrice,\n            state: State.Fractionalized\n        });\n        idList.push(_fracNFTCount.current());\n        idListLength = idList.length;\n        _fracNFTCount.increment();\n        ERC721 nft = ERC721(nftContractAddress);\n        nft.safeTransferFrom(msg.sender, address(this), nftTokenId);\n        emit Fractionalized(msg.sender, fracNFTId, erc20Symbol, address(erc20));\n        return fracNFTId;\n    }\n\n    /// @notice A holder of the entire ERC20 supply can call redeem in order to receive the underlying NFT from the contract. The ERC20 tokens get transferred to the contract address.\n    /// @param fracNFTId The ID of the fractionalized NFT to redem.\n    /// @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling redeem().\n    function redeem(uint256 fracNFTId) public {\n        ERC20 erc20 = ERC20(fracNFTs[fracNFTId].erc20Address);\n        uint256 redeemerBalance = erc20.balanceOf(msg.sender);\n        uint256 erc20Supply = erc20.totalSupply();\n        require(\n            redeemerBalance == erc20Supply,\n            \"Redeemeer does not hold the entire supply.\"\n        );\n        fracNFTs[fracNFTId].state = State.Redeemed;\n        erc20.transferFrom(msg.sender, address(this), redeemerBalance);\n        ERC721 erc721 = ERC721(fracNFTs[fracNFTId].erc721Address);\n        erc721.safeTransferFrom(\n            address(this),\n            msg.sender,\n            fracNFTs[fracNFTId].nftTokenId\n        );\n        emit Redeemed(msg.sender, fracNFTId);\n    }\n\n    /// @notice Allows a holder of the ERC20 tokens to claim his share of the sale proceedings (in ether) following a buyout of the fractionalized NFT.\n    /// @param fracNFTId The ID of the fractionalized NFT to claim a payout for.\n    /// @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling claim().\n    function claim(uint256 fracNFTId) public {\n        require(\n            fracNFTs[fracNFTId].state == State.BoughtOut,\n            \"Fractionalized NFT has not been bought out.\"\n        );\n        ERC20 erc20 = ERC20(fracNFTs[fracNFTId].erc20Address);\n        uint256 claimerBalance = erc20.balanceOf(msg.sender);\n        require(claimerBalance > 0, \"Claimer does not hold any tokens.\");\n        erc20.transferFrom(msg.sender, address(this), claimerBalance);\n        uint256 erc20Supply = erc20.totalSupply();\n        uint256 claimAmountWei = (fracNFTs[fracNFTId].buyoutPrice *\n            claimerBalance) / erc20Supply;\n        payable(msg.sender).transfer(claimAmountWei);\n        emit Claimed(msg.sender, fracNFTId);\n    }\n\n    /// @notice Allows an account to buy the NFT from the contract for the specified buyout price.\n    /// @param fracNFTId The ID of the fractionalized NFT to buy.\n    function buyout(uint256 fracNFTId) public payable {\n        // A buyer can buy the NFT as specified by the buyout price by sending ETH to the contract.\n        require(\n            msg.value >= fracNFTs[fracNFTId].buyoutPrice,\n            \"Sender sent less than the buyout price.\"\n        );\n        fracNFTs[fracNFTId].state = State.BoughtOut;\n        ERC721 erc721 = ERC721(fracNFTs[fracNFTId].erc721Address);\n        erc721.safeTransferFrom(\n            address(this),\n            msg.sender,\n            fracNFTs[fracNFTId].nftTokenId\n        );\n        emit BoughtOut(msg.sender, fracNFTId);\n    }\n\n    /// @dev Required to use safeTransferFrom() from OpenZeppelin's ERC721 contract (when transferring NFTs to this contract).\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 nftTokenId,\n        bytes memory data\n    ) public returns (bytes4) {\n        emit NftReceived(msg.sender);\n        return\n            bytes4(\n                keccak256(\"onERC721Received(address,address,uint256,bytes)\")\n            );\n    }\n}\n",
  "sourceMap": "479:10408:14:-:0;;;1098:16;;;;;;;;;;479:10408;;;;;;",
  "sourcePath": "contracts/FractionalizeNFT.sol",
  "type": "contract"
}