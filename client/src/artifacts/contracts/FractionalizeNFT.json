{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "BoughtOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        }
      ],
      "name": "Fractionalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "NftReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "buyout",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fracNFTs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "erc721Address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "erc20Symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "originalOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "buyoutPrice",
          "type": "uint256"
        },
        {
          "internalType": "enum FractionalizeNFT.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "erc20Name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "erc20Symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "erc20Supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "buyoutPrice",
          "type": "uint256"
        }
      ],
      "name": "fractionalizeNft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getERC20Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getERC20Symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFracNftCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "enum FractionalizeNFT.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fracNFTId",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "1": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "10": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol",
    "11": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "12": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "13": "contracts/ERC20Factory.sol",
    "14": "contracts/FractionalizeNFT.sol",
    "2": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
    "4": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721.sol",
    "5": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
    "6": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "7": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
    "8": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "9": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Counters.sol"
  },
  "ast": {
    "absolutePath": "contracts/FractionalizeNFT.sol",
    "exportedSymbols": {
      "Address": [
        2600
      ],
      "Context": [
        2142
      ],
      "Counters": [
        1988
      ],
      "ERC165": [
        2827
      ],
      "ERC20": [
        1098
      ],
      "ERC20Factory": [
        2017
      ],
      "ERC721": [
        1914
      ],
      "FractionalizeNFT": [
        552
      ],
      "IERC165": [
        2839
      ],
      "IERC20": [
        2095
      ],
      "IERC20Metadata": [
        2120
      ],
      "IERC721": [
        2258
      ],
      "IERC721Metadata": [
        2303
      ],
      "IERC721Receiver": [
        2276
      ],
      "Strings": [
        2803
      ]
    },
    "id": 553,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:14"
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 1989,
        "src": "56:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 1099,
        "src": "109:55:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 1915,
        "src": "165:57:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC20Factory.sol",
        "file": "./ERC20Factory.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 2018,
        "src": "224:28:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2276,
              "src": "508:15:14"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "508:15:14"
          }
        ],
        "canonicalName": "FractionalizeNFT",
        "contractDependencies": [
          2017
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "254:225:14",
          "text": "@title NFT Fractionalizer with Buyout Functionality\n @author Web3Wannabe\n @notice NFTs can be sent to the contract with a specified buyout price. The sender receives the total supply of a newly created ERC20 token."
        },
        "fullyImplemented": true,
        "id": 552,
        "linearizedBaseContracts": [
          552,
          2276
        ],
        "name": "FractionalizeNFT",
        "nameLocation": "488:16:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12,
            "libraryName": {
              "id": 9,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1988,
              "src": "536:8:14"
            },
            "nodeType": "UsingForDirective",
            "src": "530:36:14",
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1920,
                "src": "549:16:14"
              },
              "referencedDeclaration": 1920,
              "src": "549:16:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1920_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "_fracNFTCount",
            "nameLocation": "596:13:14",
            "nodeType": "VariableDeclaration",
            "scope": 552,
            "src": "571:38:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1920_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 14,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1920,
                "src": "571:16:14"
              },
              "referencedDeclaration": 1920,
              "src": "571:16:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1920_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "b141d781",
            "id": 20,
            "mutability": "mutable",
            "name": "fracNFTs",
            "nameLocation": "661:8:14",
            "nodeType": "VariableDeclaration",
            "scope": 552,
            "src": "616:53:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 16,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "624:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "616:37:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT)"
              },
              "valueType": {
                "id": 18,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 17,
                  "name": "FractionalizedNFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "635:17:14"
                },
                "referencedDeclaration": 40,
                "src": "635:17:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage_ptr",
                  "typeString": "struct FractionalizeNFT.FractionalizedNFT"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalizeNFT.FractionalizedNFT",
            "id": 40,
            "members": [
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "fracNFTId",
                "nameLocation": "760:9:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "752:17:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "752:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "nftTokenId",
                "nameLocation": "787:10:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "779:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "779:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "erc721Address",
                "nameLocation": "815:13:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "807:21:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "807:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "erc20Address",
                "nameLocation": "846:12:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "838:20:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "838:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "erc20Symbol",
                "nameLocation": "875:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "868:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 29,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "868:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "erc20Name",
                "nameLocation": "903:9:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "896:16:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 31,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "896:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "originalOwner",
                "nameLocation": "938:13:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "922:29:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 33,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "922:15:14",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "buyoutPrice",
                "nameLocation": "969:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "961:19:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "961:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "996:5:14",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "990:11:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$44",
                  "typeString": "enum FractionalizeNFT.State"
                },
                "typeName": {
                  "id": 38,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 37,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 44,
                    "src": "990:5:14"
                  },
                  "referencedDeclaration": 44,
                  "src": "990:5:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$44",
                    "typeString": "enum FractionalizeNFT.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FractionalizedNFT",
            "nameLocation": "724:17:14",
            "nodeType": "StructDefinition",
            "scope": 552,
            "src": "717:291:14",
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalizeNFT.State",
            "id": 44,
            "members": [
              {
                "id": 41,
                "name": "Fractionalized",
                "nameLocation": "1035:14:14",
                "nodeType": "EnumValue",
                "src": "1035:14:14"
              },
              {
                "id": 42,
                "name": "Redeemed",
                "nameLocation": "1059:8:14",
                "nodeType": "EnumValue",
                "src": "1059:8:14"
              },
              {
                "id": 43,
                "name": "BoughtOut",
                "nameLocation": "1077:9:14",
                "nodeType": "EnumValue",
                "src": "1077:9:14"
              }
            ],
            "name": "State",
            "nameLocation": "1019:5:14",
            "nodeType": "EnumDefinition",
            "src": "1014:78:14"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "1112:2:14",
              "statements": []
            },
            "id": 48,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1109:2:14"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1112:0:14"
            },
            "scope": 552,
            "src": "1098:16:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 49,
              "nodeType": "StructuredDocumentation",
              "src": "1120:161:14",
              "text": "@notice Emitted when ether is sent to the contract.\n @param sender The sender of the transaction/ether.\n @param value The amount of ether sent."
            },
            "id": 55,
            "name": "Received",
            "nameLocation": "1292:8:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1317:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1301:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1341:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1325:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1300:47:14"
            },
            "src": "1286:62:14"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 56,
              "nodeType": "StructuredDocumentation",
              "src": "1354:133:14",
              "text": "@notice Emitted when an NFT is transferred to the FractionalizeNFT contract.\n @param sender The address that sent the NFT."
            },
            "id": 60,
            "name": "NftReceived",
            "nameLocation": "1498:11:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1526:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1510:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1509:24:14"
            },
            "src": "1492:42:14"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "1540:462:14",
              "text": "@notice Emitted when a user successfully fractionalizes an NFT and receives the total supply of the newly created ERC20 token.\n @param sender The address that sent/fractionalized the NFT (i.e., the address that called fractionalize()).\n @param fracNFTId The ID of the newly fractionalized NFT.\n @param erc20Name The name of the newly created ERC20 token.\n @param erc20Address The contract address of the newly created ERC20 token."
            },
            "id": 71,
            "name": "Fractionalized",
            "nameLocation": "2013:14:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2053:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2037:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "2085:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2069:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2069:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "erc20Name",
                  "nameLocation": "2119:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2104:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2104:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nameLocation": "2146:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2138:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2027:137:14"
            },
            "src": "2007:158:14"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 72,
              "nodeType": "StructuredDocumentation",
              "src": "2171:277:14",
              "text": "@notice Emitted when a user successfully redeems an NFT in exchange for the total ERC20 supply.\n @param sender The address that redeemed the NFT (i.e., the address that called redeem()).\n @param fracNFTId The index of the fractionalized NFT that was redeemed."
            },
            "id": 78,
            "name": "Redeemed",
            "nameLocation": "2459:8:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2484:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "2468:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2468:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "2508:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "2492:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2492:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2467:51:14"
            },
            "src": "2453:66:14"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "2525:316:14",
              "text": "@notice Emitted when a user successfully claims a payout following the buyout of an NFT from the FractionalizeNFT contract.\n @param sender The address that the user held ERC20 tokens for (i.e., the address that called claim()).\n @param fracNFTId The index of the fractionalized NFT that was bought."
            },
            "id": 85,
            "name": "Claimed",
            "nameLocation": "2852:7:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2876:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "2860:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "2900:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "2884:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2859:51:14"
            },
            "src": "2846:65:14"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 86,
              "nodeType": "StructuredDocumentation",
              "src": "2917:266:14",
              "text": "@notice Emitted when a user successfully buys an NFT from the FractionalizeNFT contract.\n @param sender The address that bought the NFT (i.e., the address that called buyout()).\n @param fracNFTId The index of the fractionalized NFT that was bought."
            },
            "id": 92,
            "name": "BoughtOut",
            "nameLocation": "3194:9:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3220:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "3204:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3204:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "3244:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "3228:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3228:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3203:51:14"
            },
            "src": "3188:67:14"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "3306:147:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "3337:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 98,
                              "name": "_fracNFTCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "3349:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1920_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1932,
                            "src": "3349:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1920_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1920_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3349:23:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3337:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "667261634e4654496420646f6573206e6f7420657869737420696e20667261634e4654732e",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3386:39:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c4ea8c7fd302bde934fd8062fe75054823c4b55bac4d3745962af161338336d",
                          "typeString": "literal_string \"fracNFTId does not exist in fracNFTs.\""
                        },
                        "value": "fracNFTId does not exist in fracNFTs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c4ea8c7fd302bde934fd8062fe75054823c4b55bac4d3745962af161338336d",
                          "typeString": "literal_string \"fracNFTId does not exist in fracNFTs.\""
                        }
                      ],
                      "id": 96,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3316:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:119:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:119:14"
                },
                {
                  "id": 105,
                  "nodeType": "PlaceholderStatement",
                  "src": "3445:1:14"
                }
              ]
            },
            "id": 107,
            "name": "isLegalFracNftId",
            "nameLocation": "3270:16:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "3295:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "3287:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3287:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3286:19:14"
            },
            "src": "3261:192:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "3486:53:14",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3510:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3510:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3522:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3522:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 110,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "3501:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "EmitStatement",
                  "src": "3496:36:14"
                }
              ]
            },
            "id": 118,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3466:2:14"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3486:0:14"
            },
            "scope": 552,
            "src": "3459:80:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "3573:25:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 121,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "3583:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3583:8:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "3583:8:14"
                }
              ]
            },
            "id": 125,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3553:2:14"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3573:0:14"
            },
            "scope": 552,
            "src": "3545:53:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "3826:47:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 131,
                        "name": "_fracNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "3843:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1920_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1932,
                      "src": "3843:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1920_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1920_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3843:23:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 134,
                  "nodeType": "Return",
                  "src": "3836:30:14"
                }
              ]
            },
            "documentation": {
              "id": 126,
              "nodeType": "StructuredDocumentation",
              "src": "3604:160:14",
              "text": "@notice A getter function to get the current number of fractionalized NFT entries in the contract.\n @return The number of fractionalized NFT entries."
            },
            "functionSelector": "8478d997",
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFracNftCount",
            "nameLocation": "3778:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3793:2:14"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "3817:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3816:9:14"
            },
            "scope": 552,
            "src": "3769:104:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "4218:56:14",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 147,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "4235:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 149,
                      "indexExpression": {
                        "id": 148,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "4244:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4235:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc20Address",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28,
                    "src": "4235:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 146,
                  "id": 151,
                  "nodeType": "Return",
                  "src": "4228:39:14"
                }
              ]
            },
            "documentation": {
              "id": 137,
              "nodeType": "StructuredDocumentation",
              "src": "3879:196:14",
              "text": "@notice A getter function for the contract address of a fractionalized NFT's ERC20 token.\n @param fracNFTId The ID of the fractionalized NFT.\n @return The ERC20 contract address."
            },
            "functionSelector": "d1bc6caa",
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 142,
                    "name": "fracNFTId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 139,
                    "src": "4177:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 143,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 141,
                  "name": "isLegalFracNftId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "4160:16:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4160:27:14"
              }
            ],
            "name": "getERC20Address",
            "nameLocation": "4089:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "4113:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "4105:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4105:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4104:19:14"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "4205:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4205:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4204:9:14"
            },
            "scope": 552,
            "src": "4080:194:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "4606:55:14",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 164,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "4623:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 166,
                      "indexExpression": {
                        "id": 165,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "4632:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4623:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc20Symbol",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 30,
                    "src": "4623:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 163,
                  "id": 168,
                  "nodeType": "Return",
                  "src": "4616:38:14"
                }
              ]
            },
            "documentation": {
              "id": 154,
              "nodeType": "StructuredDocumentation",
              "src": "4280:178:14",
              "text": "@notice A getter function for the symbol of a fractionalized NFT's ERC20 token.\n @param fracNFTId The ID of the fractionalized NFT.\n @return The ERC20's symobl."
            },
            "functionSelector": "78fe17e5",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 159,
                    "name": "fracNFTId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 156,
                    "src": "4559:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 160,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 158,
                  "name": "isLegalFracNftId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "4542:16:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4542:27:14"
              }
            ],
            "name": "getERC20Symbol",
            "nameLocation": "4472:14:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "4495:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "4487:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4487:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4486:19:14"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "4587:13:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4587:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4586:15:14"
            },
            "scope": 552,
            "src": "4463:198:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "5016:49:14",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 182,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "5033:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 184,
                      "indexExpression": {
                        "id": 183,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "5042:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5033:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 39,
                    "src": "5033:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$44",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "functionReturnParameters": 181,
                  "id": 186,
                  "nodeType": "Return",
                  "src": "5026:32:14"
                }
              ]
            },
            "documentation": {
              "id": 171,
              "nodeType": "StructuredDocumentation",
              "src": "4667:215:14",
              "text": "@notice A getter function for the state of a fractionalized NFT.\n @param fracNFTId The ID of the fractionalized NFT.\n @return The fractionalized NFT's state (Fractionalized, Redeemed or BoughtOut)."
            },
            "functionSelector": "44c9af28",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 176,
                    "name": "fracNFTId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 173,
                    "src": "4977:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 177,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 175,
                  "name": "isLegalFracNftId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "4960:16:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4960:27:14"
              }
            ],
            "name": "getState",
            "nameLocation": "4896:8:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "4913:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "4905:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4905:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4904:19:14"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "5005:5:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$44",
                    "typeString": "enum FractionalizeNFT.State"
                  },
                  "typeName": {
                    "id": 179,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 178,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44,
                      "src": "5005:5:14"
                    },
                    "referencedDeclaration": 44,
                    "src": "5005:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$44",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5004:7:14"
            },
            "scope": 552,
            "src": "4887:178:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "6150:902:14",
              "statements": [
                {
                  "assignments": [
                    208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 208,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "6166:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "6160:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1098",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 207,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 206,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "6160:5:14"
                        },
                        "referencedDeclaration": 1098,
                        "src": "6160:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1098",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 219,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 213,
                        "name": "erc20Name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "6206:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 214,
                        "name": "erc20Symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "6229:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 215,
                        "name": "erc20Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "6254:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6279:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6279:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "components": [
                        {
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "6175:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Factory_$2017_$",
                            "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Factory)"
                          },
                          "typeName": {
                            "id": 210,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 209,
                              "name": "ERC20Factory",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2017,
                              "src": "6179:12:14"
                            },
                            "referencedDeclaration": 2017,
                            "src": "6179:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Factory_$2017",
                              "typeString": "contract ERC20Factory"
                            }
                          }
                        }
                      ],
                      "id": 212,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6174:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Factory_$2017_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Factory)"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6174:125:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Factory_$2017",
                      "typeString": "contract ERC20Factory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6160:139:14"
                },
                {
                  "assignments": [
                    221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "fracNFTId",
                      "nameLocation": "6317:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "6309:17:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6309:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 222,
                        "name": "_fracNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "6329:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1920_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1932,
                      "src": "6329:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1920_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1920_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6329:23:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6309:43:14"
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 226,
                        "name": "fracNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "6362:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                          "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                        }
                      },
                      "id": 230,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 227,
                            "name": "_fracNFTCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "6371:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1920_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1932,
                          "src": "6371:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1920_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1920_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6371:23:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6362:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 232,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "6441:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 233,
                          "name": "nftTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "6476:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 234,
                          "name": "nftContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "6515:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 237,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "6569:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1098",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$1098",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6561:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 235,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6561:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6561:14:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 239,
                          "name": "erc20Symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 197,
                          "src": "6602:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 240,
                          "name": "erc20Name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "6638:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 243,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6684:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6684:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6676:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 241,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6676:8:14",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6676:19:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 246,
                          "name": "buyoutPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "6722:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 247,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "6754:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$44_$",
                              "typeString": "type(enum FractionalizeNFT.State)"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Fractionalized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "6754:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$44",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$44",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        ],
                        "id": 231,
                        "name": "FractionalizedNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "6398:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FractionalizedNFT_$40_storage_ptr_$",
                          "typeString": "type(struct FractionalizeNFT.FractionalizedNFT storage pointer)"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "fracNFTId",
                        "nftTokenId",
                        "erc721Address",
                        "erc20Address",
                        "erc20Symbol",
                        "erc20Name",
                        "originalOwner",
                        "buyoutPrice",
                        "state"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6398:387:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FractionalizedNFT_$40_memory_ptr",
                        "typeString": "struct FractionalizeNFT.FractionalizedNFT memory"
                      }
                    },
                    "src": "6362:423:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                      "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "6362:423:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 252,
                        "name": "_fracNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "6795:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1920_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1946,
                      "src": "6795:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1920_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1920_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6795:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "6795:25:14"
                },
                {
                  "assignments": [
                    259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 259,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "6837:3:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "6830:10:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1914",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 258,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 257,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1914,
                          "src": "6830:6:14"
                        },
                        "referencedDeclaration": 1914,
                        "src": "6830:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1914",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 263,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 261,
                        "name": "nftContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "6850:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 260,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "6843:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1914_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6843:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1914",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6830:39:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 267,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6900:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6900:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 271,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6920:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$552",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$552",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6912:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6912:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6912:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 273,
                        "name": "nftTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "6927:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 264,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "6879:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1914",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1477,
                      "src": "6879:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6879:59:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "6879:59:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 277,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6968:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6968:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 279,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "6980:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 280,
                        "name": "erc20Symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "6991:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 283,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 208,
                            "src": "7012:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1098",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1098",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7004:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7004:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7004:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 276,
                      "name": "Fractionalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "6953:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,string memory,address)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6953:66:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "EmitStatement",
                  "src": "6948:71:14"
                },
                {
                  "expression": {
                    "id": 287,
                    "name": "fracNFTId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 221,
                    "src": "7036:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 205,
                  "id": 288,
                  "nodeType": "Return",
                  "src": "7029:16:14"
                }
              ]
            },
            "documentation": {
              "id": 189,
              "nodeType": "StructuredDocumentation",
              "src": "5071:827:14",
              "text": "@notice Create a fractionalized NFT: Lock the NFT in the contract; create a new ERC20 token, as specified; and transfer the total supply of the token to the sender.\n @param nftContractAddress The address of the NFT that is to be fractionalized.\n @param nftTokenId The token ID of the NFT that is to be fractionalized.\n @param erc20Name The name of the newly created ERC20 token.\n @param erc20Symbol The symbol of the newly created ERC20 token.\n @param erc20Supply The total supply of the newly created ERC20 token.\n @param buyoutPrice The price (in Wei) for which the fractionalized NFT can be be bought for from the contract.\n @dev Note, the NFT must be approved for transfer by the FractionalizeNFT contract.\n @return The ID of the newly created fractionalized NFT."
            },
            "functionSelector": "06fbd1f2",
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fractionalizeNft",
            "nameLocation": "5912:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "nftContractAddress",
                  "nameLocation": "5946:18:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "5938:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5938:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "nftTokenId",
                  "nameLocation": "5982:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "5974:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5974:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "erc20Name",
                  "nameLocation": "6016:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "6002:23:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6002:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "erc20Symbol",
                  "nameLocation": "6049:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "6035:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6035:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "erc20Supply",
                  "nameLocation": "6078:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "6070:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6070:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "buyoutPrice",
                  "nameLocation": "6107:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "6099:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6099:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5928:196:14"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "6141:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6141:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6140:9:14"
            },
            "scope": 552,
            "src": "5903:1149:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "7469:688:14",
              "statements": [
                {
                  "assignments": [
                    298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 298,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "7485:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "7479:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1098",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 297,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 296,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "7479:5:14"
                        },
                        "referencedDeclaration": 1098,
                        "src": "7479:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1098",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 305,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 300,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "7499:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 302,
                          "indexExpression": {
                            "id": 301,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 293,
                            "src": "7508:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7499:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "7499:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 299,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1098,
                      "src": "7493:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1098_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7493:39:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1098",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7479:53:14"
                },
                {
                  "assignments": [
                    307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 307,
                      "mutability": "mutable",
                      "name": "redeemerBalance",
                      "nameLocation": "7550:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "7542:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 306,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7542:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 313,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7584:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7584:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 308,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "7568:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1098",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 651,
                      "src": "7568:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7568:27:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7542:53:14"
                },
                {
                  "assignments": [
                    315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 315,
                      "mutability": "mutable",
                      "name": "erc20Supply",
                      "nameLocation": "7613:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "7605:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 314,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7605:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 319,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 316,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "7627:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1098",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 637,
                      "src": "7627:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7627:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7605:41:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 321,
                          "name": "redeemerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "7677:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 322,
                          "name": "erc20Supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "7696:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7677:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656465656d65657220646f6573206e6f7420686f6c642074686520656e7469726520737570706c792e",
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7721:44:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_236101e21dee81e2f18f31894ab8347381b8b05dc8924dcc491bb1cb5e2effc5",
                          "typeString": "literal_string \"Redeemeer does not hold the entire supply.\""
                        },
                        "value": "Redeemeer does not hold the entire supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_236101e21dee81e2f18f31894ab8347381b8b05dc8924dcc491bb1cb5e2effc5",
                          "typeString": "literal_string \"Redeemeer does not hold the entire supply.\""
                        }
                      ],
                      "id": 320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7656:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7656:119:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "7656:119:14"
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 327,
                          "name": "fracNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "7785:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                            "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                          }
                        },
                        "id": 329,
                        "indexExpression": {
                          "id": 328,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "7794:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7785:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                          "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                        }
                      },
                      "id": 330,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "7785:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$44",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 331,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "7813:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$44_$",
                          "typeString": "type(enum FractionalizeNFT.State)"
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Redeemed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "7813:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$44",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "src": "7785:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$44",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "7785:42:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 338,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7856:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7856:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 342,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7876:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$552",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$552",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7868:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 340,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7868:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7868:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 344,
                        "name": "redeemerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "7883:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 335,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "7837:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1098",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 759,
                      "src": "7837:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7837:62:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "7837:62:14"
                },
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "mutability": "mutable",
                      "name": "erc721",
                      "nameLocation": "7916:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "7909:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1914",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 348,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 347,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1914,
                          "src": "7909:6:14"
                        },
                        "referencedDeclaration": 1914,
                        "src": "7909:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1914",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 356,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 351,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "7932:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 353,
                          "indexExpression": {
                            "id": 352,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 293,
                            "src": "7941:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7932:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "7932:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 350,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "7925:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1914_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7925:41:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1914",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7909:57:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 362,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8021:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$552",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$552",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8013:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 360,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8013:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8013:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 364,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8040:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8040:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 366,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "8064:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 368,
                          "indexExpression": {
                            "id": 367,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 293,
                            "src": "8073:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8064:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "8064:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 357,
                        "name": "erc721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "7976:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1914",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1477,
                      "src": "7976:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7976:128:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "7976:128:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 373,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8128:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8128:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 375,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "8140:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 372,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "8119:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8119:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "EmitStatement",
                  "src": "8114:36:14"
                }
              ]
            },
            "documentation": {
              "id": 291,
              "nodeType": "StructuredDocumentation",
              "src": "7058:364:14",
              "text": "@notice A holder of the entire ERC20 supply can call redeem in order to receive the underlying NFT from the contract. The ERC20 tokens get transferred to the contract address.\n @param fracNFTId The ID of the fractionalized NFT to redem.\n @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling redeem()."
            },
            "functionSelector": "db006a75",
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "7436:6:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "7451:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "7443:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7443:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7442:19:14"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7469:0:14"
            },
            "scope": 552,
            "src": "7427:730:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "8553:682:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$44",
                          "typeString": "enum FractionalizeNFT.State"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 386,
                              "name": "fracNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "8584:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                              }
                            },
                            "id": 388,
                            "indexExpression": {
                              "id": 387,
                              "name": "fracNFTId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "8593:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8584:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                              "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "8584:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$44",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 390,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "8613:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$44_$",
                              "typeString": "type(enum FractionalizeNFT.State)"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "BoughtOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "8613:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$44",
                            "typeString": "enum FractionalizeNFT.State"
                          }
                        },
                        "src": "8584:44:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4672616374696f6e616c697a6564204e465420686173206e6f74206265656e20626f75676874206f75742e",
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8642:45:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6d91eba7472d4b813c8f94f076251f17b02a0abaa0ce0e02ab9b764eb0faeb0",
                          "typeString": "literal_string \"Fractionalized NFT has not been bought out.\""
                        },
                        "value": "Fractionalized NFT has not been bought out."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6d91eba7472d4b813c8f94f076251f17b02a0abaa0ce0e02ab9b764eb0faeb0",
                          "typeString": "literal_string \"Fractionalized NFT has not been bought out.\""
                        }
                      ],
                      "id": 385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8563:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8563:134:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "8563:134:14"
                },
                {
                  "assignments": [
                    398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 398,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "8713:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 466,
                      "src": "8707:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1098",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 397,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 396,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "8707:5:14"
                        },
                        "referencedDeclaration": 1098,
                        "src": "8707:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1098",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 400,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "8727:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 402,
                          "indexExpression": {
                            "id": 401,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "8736:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8727:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "8727:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 399,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1098,
                      "src": "8721:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1098_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8721:39:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1098",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8707:53:14"
                },
                {
                  "assignments": [
                    407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 407,
                      "mutability": "mutable",
                      "name": "claimerBalance",
                      "nameLocation": "8778:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 466,
                      "src": "8770:22:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 406,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8770:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 413,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 410,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8811:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8811:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 408,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "8795:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1098",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 651,
                      "src": "8795:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8795:27:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8770:52:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 415,
                          "name": "claimerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "8840:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8857:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8840:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d657220646f6573206e6f7420686f6c6420616e7920746f6b656e732e",
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8860:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ef2c2aa2fbe0e8bc377bb41a097869566475b4d7ba3c50ff52a2b50a0a082d5",
                          "typeString": "literal_string \"Claimer does not hold any tokens.\""
                        },
                        "value": "Claimer does not hold any tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ef2c2aa2fbe0e8bc377bb41a097869566475b4d7ba3c50ff52a2b50a0a082d5",
                          "typeString": "literal_string \"Claimer does not hold any tokens.\""
                        }
                      ],
                      "id": 414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8832:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8832:64:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "8832:64:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 424,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8925:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8925:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 428,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8945:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$552",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$552",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8937:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 426,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8937:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8937:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 430,
                        "name": "claimerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "8952:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 421,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "8906:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1098",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 759,
                      "src": "8906:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8906:61:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "8906:61:14"
                },
                {
                  "assignments": [
                    434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 434,
                      "mutability": "mutable",
                      "name": "erc20Supply",
                      "nameLocation": "8985:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 466,
                      "src": "8977:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 433,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8977:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 438,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 435,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "8999:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1098",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 637,
                      "src": "8999:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8999:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8977:41:14"
                },
                {
                  "assignments": [
                    440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 440,
                      "mutability": "mutable",
                      "name": "claimAmountWei",
                      "nameLocation": "9036:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 466,
                      "src": "9028:22:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9028:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 450,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 441,
                                "name": "fracNFTs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "9054:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                                  "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                                }
                              },
                              "id": 443,
                              "indexExpression": {
                                "id": 442,
                                "name": "fracNFTId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 382,
                                "src": "9063:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9054:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                                "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                              }
                            },
                            "id": 444,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyoutPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36,
                            "src": "9054:31:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 445,
                            "name": "claimerBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "9100:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9054:60:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 447,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9053:62:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 448,
                      "name": "erc20Supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "9118:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9053:76:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9028:101:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 457,
                        "name": "claimAmountWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "9168:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 453,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9147:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9147:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9139:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 451,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9139:8:14",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9139:19:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9139:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9139:44:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "9139:44:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 461,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9206:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9206:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 463,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "9218:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 460,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "9198:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9198:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 465,
                  "nodeType": "EmitStatement",
                  "src": "9193:35:14"
                }
              ]
            },
            "documentation": {
              "id": 380,
              "nodeType": "StructuredDocumentation",
              "src": "8163:344:14",
              "text": "@notice Allows a holder of the ERC20 tokens to claim his share of the sale proceedings (in ether) following a buyout of the fractionalized NFT.\n @param fracNFTId The ID of the fractionalized NFT to claim a payout for.\n @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling claim()."
            },
            "functionSelector": "379607f5",
            "id": 467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "8521:5:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "8535:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "8527:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8527:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8526:19:14"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8553:0:14"
            },
            "scope": 552,
            "src": "8512:723:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 523,
              "nodeType": "Block",
              "src": "9456:552:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 474,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9587:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9587:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 476,
                              "name": "fracNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "9600:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                                "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                              }
                            },
                            "id": 478,
                            "indexExpression": {
                              "id": 477,
                              "name": "fracNFTId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 470,
                              "src": "9609:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9600:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                              "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "9600:31:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9587:44:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e6465722073656e74206c657373207468616e20746865206275796f75742070726963652e",
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9645:41:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd942614136c8476e28cdebb64c2d910549cbb0b70edce8dfe326f03f4643a50",
                          "typeString": "literal_string \"Sender sent less than the buyout price.\""
                        },
                        "value": "Sender sent less than the buyout price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd942614136c8476e28cdebb64c2d910549cbb0b70edce8dfe326f03f4643a50",
                          "typeString": "literal_string \"Sender sent less than the buyout price.\""
                        }
                      ],
                      "id": 473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9566:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9566:130:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "9566:130:14"
                },
                {
                  "expression": {
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 484,
                          "name": "fracNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "9706:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                            "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                          }
                        },
                        "id": 486,
                        "indexExpression": {
                          "id": 485,
                          "name": "fracNFTId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 470,
                          "src": "9715:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9706:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                          "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "9706:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$44",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 488,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "9734:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$44_$",
                          "typeString": "type(enum FractionalizeNFT.State)"
                        }
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BoughtOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "9734:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$44",
                        "typeString": "enum FractionalizeNFT.State"
                      }
                    },
                    "src": "9706:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$44",
                      "typeString": "enum FractionalizeNFT.State"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "9706:43:14"
                },
                {
                  "assignments": [
                    494
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 494,
                      "mutability": "mutable",
                      "name": "erc721",
                      "nameLocation": "9766:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 523,
                      "src": "9759:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1914",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 493,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 492,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1914,
                          "src": "9759:6:14"
                        },
                        "referencedDeclaration": 1914,
                        "src": "9759:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1914",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 501,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 496,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "9782:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 498,
                          "indexExpression": {
                            "id": 497,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 470,
                            "src": "9791:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9782:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "9782:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 495,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "9775:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1914_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9775:41:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1914",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9759:57:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 507,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9871:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$552",
                              "typeString": "contract FractionalizeNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalizeNFT_$552",
                              "typeString": "contract FractionalizeNFT"
                            }
                          ],
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9863:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 505,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9863:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9863:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 509,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9890:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9890:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 511,
                            "name": "fracNFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "9914:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FractionalizedNFT_$40_storage_$",
                              "typeString": "mapping(uint256 => struct FractionalizeNFT.FractionalizedNFT storage ref)"
                            }
                          },
                          "id": 513,
                          "indexExpression": {
                            "id": 512,
                            "name": "fracNFTId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 470,
                            "src": "9923:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9914:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FractionalizedNFT_$40_storage",
                            "typeString": "struct FractionalizeNFT.FractionalizedNFT storage ref"
                          }
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "9914:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 502,
                        "name": "erc721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "9826:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1914",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1477,
                      "src": "9826:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9826:128:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "9826:128:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 518,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9979:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9979:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 520,
                        "name": "fracNFTId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "9991:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 517,
                      "name": "BoughtOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "9969:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9969:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "EmitStatement",
                  "src": "9964:37:14"
                }
              ]
            },
            "documentation": {
              "id": 468,
              "nodeType": "StructuredDocumentation",
              "src": "9241:160:14",
              "text": "@notice Allows an account to buy the NFT from the contract for the specified buyout price.\n @param fracNFTId The ID of the fractionalized NFT to buy."
            },
            "functionSelector": "07bec66f",
            "id": 524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyout",
            "nameLocation": "9415:6:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "fracNFTId",
                  "nameLocation": "9430:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 524,
                  "src": "9422:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9422:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9421:19:14"
            },
            "returnParameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9456:0:14"
            },
            "scope": 552,
            "src": "9406:602:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2275
            ],
            "body": {
              "id": 550,
              "nodeType": "Block",
              "src": "10300:172:14",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 539,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10327:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10327:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 538,
                      "name": "NftReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "10315:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10315:23:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 542,
                  "nodeType": "EmitStatement",
                  "src": "10310:28:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f6e455243373231526563656976656428616464726573732c616464726573732c75696e743235362c627974657329",
                            "id": 546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10401:49:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            },
                            "value": "onERC721Received(address,address,uint256,bytes)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            }
                          ],
                          "id": 545,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10391:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10391:60:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10367:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 543,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "10367:6:14",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10367:98:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 537,
                  "id": 549,
                  "nodeType": "Return",
                  "src": "10348:117:14"
                }
              ]
            },
            "documentation": {
              "id": 525,
              "nodeType": "StructuredDocumentation",
              "src": "10014:122:14",
              "text": "@dev Required to use safeTransferFrom() from OpenZeppelin's ERC721 contract (when transferring NFTs to this contract)."
            },
            "functionSelector": "150b7a02",
            "id": 551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "10150:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10184:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "10176:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10176:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10210:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "10202:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10202:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "nftTokenId",
                  "nameLocation": "10232:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "10224:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10224:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10265:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "10252:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10252:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10166:109:14"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "10292:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "10292:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10291:8:14"
            },
            "scope": 552,
            "src": "10141:331:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 553,
        "src": "479:9995:14",
        "usedErrors": []
      }
    ],
    "src": "32:10443:14"
  },
  "bytecode": "",
  "bytecodeSha1": "b02a51bf6a8196f2c7bf72487bade31a3d21ae2b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1500
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "FractionalizeNFT",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "FractionalizeNFT.buyout": {
          "28": [
            9587,
            9631,
            true
          ]
        },
        "FractionalizeNFT.claim": {
          "29": [
            8584,
            8628,
            true
          ],
          "30": [
            8840,
            8858,
            true
          ]
        },
        "FractionalizeNFT.redeem": {
          "31": [
            7677,
            7707,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "FractionalizeNFT.<fallback>": {
          "0": [
            3583,
            3591
          ]
        },
        "FractionalizeNFT.<receive>": {
          "1": [
            3496,
            3532
          ]
        },
        "FractionalizeNFT.buyout": {
          "9": [
            9566,
            9696
          ],
          "10": [
            9706,
            9749
          ],
          "11": [
            9826,
            9954
          ],
          "12": [
            9964,
            10001
          ]
        },
        "FractionalizeNFT.claim": {
          "15": [
            8563,
            8697
          ],
          "16": [
            8832,
            8896
          ],
          "17": [
            8906,
            8967
          ],
          "18": [
            9139,
            9183
          ],
          "19": [
            9193,
            9228
          ]
        },
        "FractionalizeNFT.fractionalizeNft": {
          "3": [
            6362,
            6785
          ],
          "4": [
            6795,
            6820
          ],
          "6": [
            6879,
            6938
          ],
          "7": [
            6948,
            7019
          ],
          "8": [
            7029,
            7045
          ]
        },
        "FractionalizeNFT.getERC20Address": {
          "22": [
            4228,
            4267
          ]
        },
        "FractionalizeNFT.getERC20Symbol": {
          "21": [
            4616,
            4654
          ]
        },
        "FractionalizeNFT.getState": {
          "20": [
            5026,
            5058
          ]
        },
        "FractionalizeNFT.onERC721Received": {
          "13": [
            10310,
            10338
          ],
          "14": [
            10348,
            10465
          ]
        },
        "FractionalizeNFT.redeem": {
          "23": [
            7656,
            7775
          ],
          "24": [
            7785,
            7827
          ],
          "25": [
            7837,
            7899
          ],
          "26": [
            7976,
            8104
          ],
          "27": [
            8114,
            8150
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "Counters.current": {
          "2": [
            857,
            878
          ]
        },
        "Counters.increment": {
          "5": [
            978,
            997
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC20",
    "ERC20Factory",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "479:9995:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3583:8;;;479:9995;;;;;;;;;;;3583:8;;;479:9995;;;;;;;;;;;;;;;;;;;;;3583:8;;;479:9995;;;;;;;;;;;3583:8;;;479:9995;;;;3501:31;;3522:9;;3510:10;;3501:31;;;;;479:9995;;3583:8;;;5903:1149;;;;;;;;;;-1:-1:-1;5903:1149:14;;;;;:::i;:::-;;:::i;:::-;;;2243:25:15;;;2231:2;2216:18;5903:1149:14;;;;;;;;9406:602;;;;;;:::i;:::-;;:::i;:::-;;10141:331;;;;;;;;;;-1:-1:-1;10141:331:14;;;;;:::i;:::-;;:::i;:::-;;;3310:66:15;3298:79;;;3280:98;;3268:2;3253:18;10141:331:14;3136:248:15;8512:723:14;;;;;;;;;;-1:-1:-1;8512:723:14;;;;;:::i;:::-;;:::i;4887:178::-;;;;;;;;;;-1:-1:-1;4887:178:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4463:198::-;;;;;;;;;;-1:-1:-1;4463:198:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3769:104::-;;;;;;;;;;-1:-1:-1;3817:7:14;864:14:9;3769:104:14;;616:53;;;;;;;;;;-1:-1:-1;616:53:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;4080:194::-;;;;;;;;;;-1:-1:-1;4080:194:14;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;6028:55:15;;;6010:74;;5998:2;5983:18;4080:194:14;5864:226:15;7427:730:14;;;;;;;;;;-1:-1:-1;7427:730:14;;;;;:::i;:::-;;:::i;5903:1149::-;6141:7;6160:11;6206:9;6229:11;6254;6279:10;6174:125;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;6160:139;;6309:17;6329:23;:13;864:14:9;;773:112;6329:23:14;6309:43;;6398:387;;;;;;;;6441:9;6398:387;;;;6476:10;6398:387;;;;6515:18;-1:-1:-1;;;;;6398:387:14;;;;;6569:5;-1:-1:-1;;;;;6398:387:14;;;;;6602:11;6398:387;;;;6638:9;6398:387;;;;6684:10;-1:-1:-1;;;;;6398:387:14;;;;;6722:11;6398:387;;;;6754:20;6398:387;;;;;;;;:::i;:::-;;;6362:8;:33;6371:23;6362:33;864:14:9;;773:112;6371:23:14;6362:33;;;;;;;;;;;;;;-1:-1:-1;6362:33:14;:423;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6362:423:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:33;;:423;;;;;;;;;;;:::i;:::-;-1:-1:-1;6362:423:14;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6362:423:14;;;;;;;;;;;-1:-1:-1;;;;;6362:423:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6362:423:14;-1:-1:-1;6362:423:14;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;6795:13:14;978:19:9;;996:1;978:19;;;-1:-1:-1;6879:59:14;;-1:-1:-1;;;6879:59:14;;6900:10;6879:59;;;6939:34:15;6920:4:14;6989:18:15;;;6982:43;7041:18;;;7034:34;;;6850:18:14;;-1:-1:-1;;;;;6879:20:14;;;;;6851:18:15;;6879:59:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6991:11;6953:66;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;6028:55:15;;6010:74;;6953:66:14;6980:9;;6968:10;;6953:66;;5998:2:15;5983:18;6953:66:14;;;;;;;-1:-1:-1;7036:9:14;5903:1149;-1:-1:-1;;;;;;;;5903:1149:14:o;9406:602::-;9600:19;;;;:8;:19;;;;;:31;;;9587:9;:44;;9566:130;;;;-1:-1:-1;;;9566:130:14;;7562:2:15;9566:130:14;;;7544:21:15;7601:2;7581:18;;;7574:30;7640:34;7620:18;;;7613:62;7711:9;7691:18;;;7684:37;7738:19;;9566:130:14;;;;;;;;;9706:19;;;;:8;:19;;;;;;;;;:25;;;:43;;-1:-1:-1;;9706:43:14;9734:15;9706:43;;;;;;9782:33;;;9914:30;;;9826:128;;-1:-1:-1;;;9826:128:14;;9871:4;9826:128;;;6939:34:15;9890:10:14;6989:18:15;;;6982:43;7041:18;;;7034:34;;;;-1:-1:-1;;;;;9782:33:14;;;;9826:23;;6851:18:15;;9826:128:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9969:32:14;;9991:9;;-1:-1:-1;9979:10:14;;-1:-1:-1;9969:32:14;;;;;9456:552;9406:602;:::o;10141:331::-;10315:23;;10292:6;;10327:10;;10315:23;;10292:6;;10315:23;-1:-1:-1;10391:60:14;10141:331;;;;;;:::o;8512:723::-;8613:15;8584:19;;;;:8;:19;;;;;:25;;;;;:44;;;;;;;;:::i;:::-;;8563:134;;;;-1:-1:-1;;;8563:134:14;;7970:2:15;8563:134:14;;;7952:21:15;8009:2;7989:18;;;7982:30;8048:34;8028:18;;;8021:62;8119:13;8099:18;;;8092:41;8150:19;;8563:134:14;7768:407:15;8563:134:14;8707:11;8727:19;;;:8;:19;;;;;;:32;;;8795:27;;-1:-1:-1;;;8795:27:14;;8811:10;8795:27;;;6010:74:15;-1:-1:-1;;;;;8727:32:14;;;;8707:11;8727:32;;8795:15;;5983:18:15;;8795:27:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8770:52;;8857:1;8840:14;:18;8832:64;;;;-1:-1:-1;;;8832:64:14;;8571:2:15;8832:64:14;;;8553:21:15;8610:2;8590:18;;;8583:30;8649:34;8629:18;;;8622:62;8720:3;8700:18;;;8693:31;8741:19;;8832:64:14;8369:397:15;8832:64:14;8906:61;;-1:-1:-1;;;8906:61:14;;8925:10;8906:61;;;6939:34:15;8945:4:14;6989:18:15;;;6982:43;7041:18;;;7034:34;;;-1:-1:-1;;;;;8906:18:14;;;;;6851::15;;8906:61:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8977:19;8999:5;-1:-1:-1;;;;;8999:17:14;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9028:22;9054:19;;;:8;:19;;;;;:31;;;8977:41;;-1:-1:-1;9028:22:14;8977:41;;9054:60;;9100:14;;9054:60;:::i;:::-;9053:76;;;;:::i;:::-;9139:44;;9028:101;;-1:-1:-1;9147:10:14;;9139:44;;;;;9028:101;;9139:44;;;;9028:101;9147:10;9139:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9198:30:14;;9218:9;;9206:10;;9198:30;;;;;8553:682;;;;8512:723;:::o;4887:178::-;5005:5;4977:9;3349:23;:13;864:14:9;;773:112;3349:23:14;3337:9;:35;3316:119;;;;-1:-1:-1;;;3316:119:14;;9861:2:15;3316:119:14;;;9843:21:15;9900:2;9880:18;;;9873:30;9939:34;9919:18;;;9912:62;-1:-1:-1;;;9990:18:15;;;9983:35;10035:19;;3316:119:14;9659:401:15;3316:119:14;5033:19:::1;::::0;;;:8:::1;:19;::::0;;;;:25:::1;;::::0;::::1;;::::0;-1:-1:-1;3445:1:14::1;4887:178:::0;;;;:::o;4463:198::-;4587:13;4559:9;3349:23;:13;864:14:9;;773:112;3349:23:14;3337:9;:35;3316:119;;;;-1:-1:-1;;;3316:119:14;;9861:2:15;3316:119:14;;;9843:21:15;9900:2;9880:18;;;9873:30;9939:34;9919:18;;;9912:62;-1:-1:-1;;;9990:18:15;;;9983:35;10035:19;;3316:119:14;9659:401:15;3316:119:14;4623:19:::1;::::0;;;:8:::1;:19;::::0;;;;:31:::1;;4616:38:::0;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4463:198:::0;;;;:::o;616:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;616:53:14;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;616:53:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;616:53:14;;;;;;-1:-1:-1;616:53:14;;;:::o;4080:194::-;4205:7;4177:9;3349:23;:13;864:14:9;;773:112;3349:23:14;3337:9;:35;3316:119;;;;-1:-1:-1;;;3316:119:14;;9861:2:15;3316:119:14;;;9843:21:15;9900:2;9880:18;;;9873:30;9939:34;9919:18;;;9912:62;-1:-1:-1;;;9990:18:15;;;9983:35;10035:19;;3316:119:14;9659:401:15;3316:119:14;-1:-1:-1;;4235:19:14::1;::::0;;;:8:::1;:19;::::0;;;;:32:::1;;::::0;-1:-1:-1;;;;;4235:32:14::1;::::0;4080:194::o;7427:730::-;7479:11;7499:19;;;:8;:19;;;;;;:32;;;7568:27;;-1:-1:-1;;;7568:27:14;;7584:10;7568:27;;;6010:74:15;-1:-1:-1;;;;;7499:32:14;;;;7479:11;7499:32;;7568:15;;5983:18:15;;7568:27:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7542:53;;7605:19;7627:5;-1:-1:-1;;;;;7627:17:14;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7605:41;;7696:11;7677:15;:30;7656:119;;;;-1:-1:-1;;;7656:119:14;;10709:2:15;7656:119:14;;;10691:21:15;10748:2;10728:18;;;10721:30;10787:34;10767:18;;;10760:62;10858:12;10838:18;;;10831:40;10888:19;;7656:119:14;10507:406:15;7656:119:14;7785:19;;;;7813:14;7785:19;;;;;;;;;:25;;:42;;-1:-1:-1;;7785:42:14;;;;;;7837:62;-1:-1:-1;;;7837:62:14;;7856:10;7837:62;;;6939:34:15;7876:4:14;6989:18:15;;;6982:43;7041:18;;;7034:34;;;-1:-1:-1;;;;;7837:18:14;;;;;6851::15;;7837:62:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7909:13:14;7932:19;;;:8;:19;;;;;;;;;:33;;;;8064:30;;;7976:128;;-1:-1:-1;;;7976:128:14;;8021:4;7976:128;;;6939:34:15;8040:10:14;6989:18:15;;;6982:43;7041:18;;;7034:34;;;;-1:-1:-1;;;;;7932:33:14;;;;7976:23;;6851:18:15;;7976:128:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8119:31:14;;8140:9;;-1:-1:-1;8128:10:14;;-1:-1:-1;8119:31:14;;;;;7469:688;;;;7427:730;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:196:15;82:20;;-1:-1:-1;;;;;131:54:15;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:184::-;-1:-1:-1;;;264:1:15;257:88;364:4;361:1;354:15;388:4;385:1;378:15;404:632;469:5;499:18;540:2;532:6;529:14;526:40;;;546:18;;:::i;:::-;621:2;615:9;589:2;675:15;;-1:-1:-1;;671:24:15;;;697:2;667:33;663:42;651:55;;;721:18;;;741:22;;;718:46;715:72;;;767:18;;:::i;:::-;807:10;803:2;796:22;836:6;827:15;;866:6;858;851:22;906:3;897:6;892:3;888:16;885:25;882:45;;;923:1;920;913:12;882:45;973:6;968:3;961:4;953:6;949:17;936:44;1028:1;1021:4;1012:6;1004;1000:19;996:30;989:41;;;;404:632;;;;;:::o;1041:222::-;1084:5;1137:3;1130:4;1122:6;1118:17;1114:27;1104:55;;1155:1;1152;1145:12;1104:55;1177:80;1253:3;1244:6;1231:20;1224:4;1216:6;1212:17;1177:80;:::i;:::-;1168:89;1041:222;-1:-1:-1;;;1041:222:15:o;1268:824::-;1392:6;1400;1408;1416;1424;1432;1485:3;1473:9;1464:7;1460:23;1456:33;1453:53;;;1502:1;1499;1492:12;1453:53;1525:29;1544:9;1525:29;:::i;:::-;1515:39;;1601:2;1590:9;1586:18;1573:32;1563:42;;1656:2;1645:9;1641:18;1628:32;1679:18;1720:2;1712:6;1709:14;1706:34;;;1736:1;1733;1726:12;1706:34;1759:50;1801:7;1792:6;1781:9;1777:22;1759:50;:::i;:::-;1749:60;;1862:2;1851:9;1847:18;1834:32;1818:48;;1891:2;1881:8;1878:16;1875:36;;;1907:1;1904;1897:12;1875:36;;1930:52;1974:7;1963:8;1952:9;1948:24;1930:52;:::i;:::-;1920:62;;;2029:3;2018:9;2014:19;2001:33;1991:43;;2081:3;2070:9;2066:19;2053:33;2043:43;;1268:824;;;;;;;;:::o;2279:180::-;2338:6;2391:2;2379:9;2370:7;2366:23;2362:32;2359:52;;;2407:1;2404;2397:12;2359:52;-1:-1:-1;2430:23:15;;2279:180;-1:-1:-1;2279:180:15:o;2464:667::-;2559:6;2567;2575;2583;2636:3;2624:9;2615:7;2611:23;2607:33;2604:53;;;2653:1;2650;2643:12;2604:53;2676:29;2695:9;2676:29;:::i;:::-;2666:39;;2724:38;2758:2;2747:9;2743:18;2724:38;:::i;:::-;2714:48;;2809:2;2798:9;2794:18;2781:32;2771:42;;2864:2;2853:9;2849:18;2836:32;2891:18;2883:6;2880:30;2877:50;;;2923:1;2920;2913:12;2877:50;2946:22;;2999:4;2991:13;;2987:27;-1:-1:-1;2977:55:15;;3028:1;3025;3018:12;2977:55;3051:74;3117:7;3112:2;3099:16;3094:2;3090;3086:11;3051:74;:::i;:::-;3041:84;;;2464:667;;;;;;;:::o;3389:184::-;-1:-1:-1;;;3438:1:15;3431:88;3538:4;3535:1;3528:15;3562:4;3559:1;3552:15;3578:290;3655:1;3648:5;3645:12;3635:200;;-1:-1:-1;;;3688:1:15;3681:88;3792:4;3789:1;3782:15;3820:4;3817:1;3810:15;3635:200;3844:18;;3578:290::o;3873:198::-;4013:2;3998:18;;4025:40;4002:9;4047:6;4025:40;:::i;:::-;3873:198;;;;:::o;4076:258::-;4148:1;4158:113;4172:6;4169:1;4166:13;4158:113;;;4248:11;;;4242:18;4229:11;;;4222:39;4194:2;4187:10;4158:113;;;4289:6;4286:1;4283:13;4280:48;;;4324:1;4315:6;4310:3;4306:16;4299:27;4280:48;;4076:258;;;:::o;4339:::-;4381:3;4419:5;4413:12;4446:6;4441:3;4434:19;4462:63;4518:6;4511:4;4506:3;4502:14;4495:4;4488:5;4484:16;4462:63;:::i;:::-;4579:2;4558:15;-1:-1:-1;;4554:29:15;4545:39;;;;4586:4;4541:50;;4339:258;-1:-1:-1;;4339:258:15:o;4602:220::-;4751:2;4740:9;4733:21;4714:4;4771:45;4812:2;4801:9;4797:18;4789:6;4771:45;:::i;4827:1032::-;5205:4;5234:3;5264:6;5253:9;5246:25;5307:6;5302:2;5291:9;5287:18;5280:34;-1:-1:-1;;;;;5423:2:15;5415:6;5411:15;5406:2;5395:9;5391:18;5384:43;5475:2;5467:6;5463:15;5458:2;5447:9;5443:18;5436:43;5516:2;5510:3;5499:9;5495:19;5488:31;5542:45;5583:2;5572:9;5568:18;5560:6;5542:45;:::i;:::-;5528:59;;5636:9;5628:6;5624:22;5618:3;5607:9;5603:19;5596:51;5664:33;5690:6;5682;5664:33;:::i;:::-;5656:41;;5746:2;5738:6;5734:15;5728:3;5717:9;5713:19;5706:44;;;5787:6;5781:3;5770:9;5766:19;5759:35;5803:50;5848:3;5837:9;5833:19;5825:6;5803:50;:::i;:::-;4827:1032;;;;;;;;;;;;:::o;6095:576::-;6348:3;6337:9;6330:22;6311:4;6375:46;6416:3;6405:9;6401:19;6393:6;6375:46;:::i;:::-;6469:9;6461:6;6457:22;6452:2;6441:9;6437:18;6430:50;6497:33;6523:6;6515;6497:33;:::i;:::-;6489:41;;;6566:6;6561:2;6550:9;6546:18;6539:34;-1:-1:-1;;;;;6613:6:15;6609:55;6604:2;6593:9;6589:18;6582:83;6095:576;;;;;;;:::o;7079:276::-;7210:3;7248:6;7242:13;7264:53;7310:6;7305:3;7298:4;7290:6;7286:17;7264:53;:::i;:::-;7333:16;;;;;7079:276;-1:-1:-1;;7079:276:15:o;8180:184::-;8250:6;8303:2;8291:9;8282:7;8278:23;8274:32;8271:52;;;8319:1;8316;8309:12;8271:52;-1:-1:-1;8342:16:15;;8180:184;-1:-1:-1;8180:184:15:o;8771:277::-;8838:6;8891:2;8879:9;8870:7;8866:23;8862:32;8859:52;;;8907:1;8904;8897:12;8859:52;8939:9;8933:16;8992:5;8985:13;8978:21;8971:5;8968:32;8958:60;;9014:1;9011;9004:12;9053:322;9093:7;9159:1;9155;9151:6;9147:14;9144:1;9141:21;9136:1;9129:9;9122:17;9118:45;9115:225;;;-1:-1:-1;;;9193:1:15;9186:88;9297:4;9294:1;9287:15;9325:4;9322:1;9315:15;9115:225;-1:-1:-1;9360:9:15;;9053:322::o;9380:274::-;9420:1;9446;9436:189;;-1:-1:-1;;;9478:1:15;9471:88;9582:4;9579:1;9572:15;9610:4;9607:1;9600:15;9436:189;-1:-1:-1;9639:9:15;;9380:274::o;10065:437::-;10144:1;10140:12;;;;10187;;;10208:61;;10262:4;10254:6;10250:17;10240:27;;10208:61;10315:2;10307:6;10304:14;10284:18;10281:38;10278:218;;;-1:-1:-1;;;10349:1:15;10342:88;10453:4;10450:1;10443:15;10481:4;10478:1;10471:15",
  "language": "Solidity",
  "natspec": {
    "author": "Web3Wannabe",
    "events": {
      "BoughtOut(address,uint256)": {
        "params": {
          "fracNFTId": "The index of the fractionalized NFT that was bought.",
          "sender": "The address that bought the NFT (i.e., the address that called buyout())."
        }
      },
      "Claimed(address,uint256)": {
        "params": {
          "fracNFTId": "The index of the fractionalized NFT that was bought.",
          "sender": "The address that the user held ERC20 tokens for (i.e., the address that called claim())."
        }
      },
      "Fractionalized(address,uint256,string,address)": {
        "params": {
          "erc20Address": "The contract address of the newly created ERC20 token.",
          "erc20Name": "The name of the newly created ERC20 token.",
          "fracNFTId": "The ID of the newly fractionalized NFT.",
          "sender": "The address that sent/fractionalized the NFT (i.e., the address that called fractionalize())."
        }
      },
      "NftReceived(address)": {
        "params": {
          "sender": "The address that sent the NFT."
        }
      },
      "Received(address,uint256)": {
        "params": {
          "sender": "The sender of the transaction/ether.",
          "value": "The amount of ether sent."
        }
      },
      "Redeemed(address,uint256)": {
        "params": {
          "fracNFTId": "The index of the fractionalized NFT that was redeemed.",
          "sender": "The address that redeemed the NFT (i.e., the address that called redeem())."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "buyout(uint256)": {
        "notice": "Allows an account to buy the NFT from the contract for the specified buyout price.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT to buy."
        }
      },
      "claim(uint256)": {
        "details": "Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling claim().",
        "notice": "Allows a holder of the ERC20 tokens to claim his share of the sale proceedings (in ether) following a buyout of the fractionalized NFT.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT to claim a payout for."
        }
      },
      "fractionalizeNft(address,uint256,string,string,uint256,uint256)": {
        "details": "Note, the NFT must be approved for transfer by the FractionalizeNFT contract.",
        "notice": "Create a fractionalized NFT: Lock the NFT in the contract; create a new ERC20 token, as specified; and transfer the total supply of the token to the sender.",
        "params": {
          "buyoutPrice": "The price (in Wei) for which the fractionalized NFT can be be bought for from the contract.",
          "erc20Name": "The name of the newly created ERC20 token.",
          "erc20Supply": "The total supply of the newly created ERC20 token.",
          "erc20Symbol": "The symbol of the newly created ERC20 token.",
          "nftContractAddress": "The address of the NFT that is to be fractionalized.",
          "nftTokenId": "The token ID of the NFT that is to be fractionalized."
        },
        "returns": {
          "_0": "The ID of the newly created fractionalized NFT."
        }
      },
      "getERC20Address(uint256)": {
        "notice": "A getter function for the contract address of a fractionalized NFT's ERC20 token.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT."
        },
        "returns": {
          "_0": "The ERC20 contract address."
        }
      },
      "getERC20Symbol(uint256)": {
        "notice": "A getter function for the symbol of a fractionalized NFT's ERC20 token.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT."
        },
        "returns": {
          "_0": "The ERC20's symobl."
        }
      },
      "getFracNftCount()": {
        "notice": "A getter function to get the current number of fractionalized NFT entries in the contract.",
        "returns": {
          "_0": "The number of fractionalized NFT entries."
        }
      },
      "getState(uint256)": {
        "notice": "A getter function for the state of a fractionalized NFT.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT."
        },
        "returns": {
          "_0": "The fractionalized NFT's state (Fractionalized, Redeemed or BoughtOut)."
        }
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Required to use safeTransferFrom() from OpenZeppelin's ERC721 contract (when transferring NFTs to this contract)."
      },
      "redeem(uint256)": {
        "details": "Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling redeem().",
        "notice": "A holder of the entire ERC20 supply can call redeem in order to receive the underlying NFT from the contract. The ERC20 tokens get transferred to the contract address.",
        "params": {
          "fracNFTId": "The ID of the fractionalized NFT to redem."
        }
      }
    },
    "notice": "NFTs can be sent to the contract with a specified buyout price. The sender receives the total supply of a newly created ERC20 token.",
    "title": "NFT Fractionalizer with Buyout Functionality",
    "version": 1
  },
  "offset": [
    479,
    10474
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0xC3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78FE17E5 GT PUSH3 0x71 JUMPI DUP1 PUSH4 0xB141D781 GT PUSH3 0x54 JUMPI DUP1 PUSH4 0xB141D781 EQ PUSH3 0x249 JUMPI DUP1 PUSH4 0xD1BC6CAA EQ PUSH3 0x285 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH3 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78FE17E5 EQ PUSH3 0x1FE JUMPI DUP1 PUSH4 0x8478D997 EQ PUSH3 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 GT PUSH3 0xA6 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH3 0x14E JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH3 0x1A5 JUMPI DUP1 PUSH4 0x44C9AF28 EQ PUSH3 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FBD1F2 EQ PUSH3 0xFD JUMPI DUP1 PUSH4 0x7BEC66F EQ PUSH3 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH3 0xF8 JUMPI PUSH1 0x40 MLOAD CALLVALUE SWAP1 CALLER SWAP1 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP1 PUSH1 0x0 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x122 PUSH3 0x11C CALLDATASIZE PUSH1 0x4 PUSH3 0x12BB JUMP JUMPDEST PUSH3 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x14C PUSH3 0x146 CALLDATASIZE PUSH1 0x4 PUSH3 0x1354 JUMP JUMPDEST PUSH3 0x5B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x173 PUSH3 0x16D CALLDATASIZE PUSH1 0x4 PUSH3 0x136E JUMP JUMPDEST PUSH3 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x14C PUSH3 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH3 0x1354 JUMP JUMPDEST PUSH3 0x758 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1EF PUSH3 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH3 0x1354 JUMP JUMPDEST PUSH3 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x12C SWAP2 SWAP1 PUSH3 0x142C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x223 PUSH3 0x21D CALLDATASIZE PUSH1 0x4 PUSH3 0x1354 JUMP JUMPDEST PUSH3 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x12C SWAP2 SWAP1 PUSH3 0x14A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH3 0x122 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x26E PUSH3 0x268 CALLDATASIZE PUSH1 0x4 PUSH3 0x1354 JUMP JUMPDEST PUSH3 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x12C SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x14B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2AA PUSH3 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH3 0x1354 JUMP JUMPDEST PUSH3 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x14C PUSH3 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH3 0x1354 JUMP JUMPDEST PUSH3 0xE4A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 DUP6 CALLER PUSH1 0x40 MLOAD PUSH3 0x2FD SWAP1 PUSH3 0x112D JUMP JUMPDEST PUSH3 0x30C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x329 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH3 0x338 PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x3A7 JUMPI PUSH3 0x3A7 PUSH3 0x13F3 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x0 PUSH3 0x3B6 DUP2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH3 0x444 SWAP3 PUSH1 0x4 DUP6 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x113B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP1 MLOAD PUSH3 0x462 SWAP2 PUSH1 0x5 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x113B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x4D2 JUMPI PUSH3 0x4D2 PUSH3 0x13F3 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP10 SWAP1 MSTORE DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x548 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP7 PUSH1 0x40 MLOAD PUSH3 0x55C SWAP2 SWAP1 PUSH3 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 MSTORE SWAP1 DUP4 SWAP1 CALLER SWAP1 PUSH32 0xE2C8AEFC9D0A52C93C762509EEEAC2A518C41C52F791B6888C0673D07312C605 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD CALLVALUE LT ISZERO PUSH3 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E6465722073656E74206C657373207468616E20746865206275796F7574 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2070726963652E00000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x6CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 SWAP3 POP CALLER SWAP2 POP PUSH32 0xFBBD268BB69CF922E3840DC96A6702DC064BAF4B2D9594B5A66A2FE428F3F2AA SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0xCCE71FC9CFCACC4CE8153BDE254A735AE423CDC2B7852FB754F4DE746AC3018F SWAP1 DUP4 SWAP1 LOG2 POP PUSH32 0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x783 JUMPI PUSH3 0x783 PUSH3 0x13F3 JUMP JUMPDEST EQ PUSH3 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4672616374696F6E616C697A6564204E465420686173206E6F74206265656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x626F75676874206F75742E000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x634 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x863 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x889 SWAP2 SWAP1 PUSH3 0x15A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH3 0x903 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D657220646F6573206E6F7420686F6C6420616E7920746F6B656E73 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x967 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x98D SWAP2 SWAP1 PUSH3 0x15BA JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x9DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA05 SWAP2 SWAP1 PUSH3 0x15A0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 PUSH3 0xA2A SWAP1 DUP6 SWAP1 PUSH3 0x15DE JUMP JUMPDEST PUSH3 0xA36 SWAP2 SWAP1 PUSH3 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0xA67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP6 SWAP1 CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH3 0xAA9 PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT PUSH3 0xB07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x27232A3997 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x634 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH3 0xB32 PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT PUSH3 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x27232A3997 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x634 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH3 0xBAE SWAP1 PUSH3 0x162F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xBDC SWAP1 PUSH3 0x162F JUMP JUMPDEST DUP1 ISZERO PUSH3 0xC2D JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xC01 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xC2D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xC0F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 SWAP4 SWAP1 SWAP3 AND SWAP3 PUSH3 0xC7F SWAP1 PUSH3 0x162F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xCAD SWAP1 PUSH3 0x162F JUMP JUMPDEST DUP1 ISZERO PUSH3 0xCFE JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xCD2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xCFE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xCE0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH3 0xD15 SWAP1 PUSH3 0x162F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xD43 SWAP1 PUSH3 0x162F JUMP JUMPDEST DUP1 ISZERO PUSH3 0xD94 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xD68 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xD94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xD76 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x8 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 POP PUSH1 0xFF AND DUP10 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH3 0xDCC PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT PUSH3 0xE2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x27232A3997 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x634 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xEA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xEB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xEDB SWAP2 SWAP1 PUSH3 0x15A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xF2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xF54 SWAP2 SWAP1 PUSH3 0x15A0 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH3 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656465656D65657220646F6573206E6F7420686F6C642074686520656E7469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726520737570706C792E00000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x634 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x103A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x104F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1075 SWAP2 SWAP1 PUSH3 0x15BA JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x10E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x10F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP8 SWAP3 POP CALLER SWAP2 POP PUSH32 0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD74 DUP1 PUSH3 0x1667 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1149 SWAP1 PUSH3 0x162F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x116D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x11B8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1188 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x11B8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x11B8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x11B8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x119B JUMP JUMPDEST POP PUSH3 0x11C6 SWAP3 SWAP2 POP PUSH3 0x11CA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11C6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x11CB JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x11F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH3 0x1232 JUMPI PUSH3 0x1232 PUSH3 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x125D JUMPI PUSH3 0x125D PUSH3 0x11FE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH3 0x1277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x12A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x12B4 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH3 0x1214 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x12D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x12E0 DUP8 PUSH3 0x11E1 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x1305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1313 DUP11 DUP4 DUP12 ADD PUSH3 0x1291 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x132A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1339 DUP10 DUP3 DUP11 ADD PUSH3 0x1291 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1390 DUP6 PUSH3 0x11E1 JUMP JUMPDEST SWAP4 POP PUSH3 0x13A0 PUSH1 0x20 DUP7 ADD PUSH3 0x11E1 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x13C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH3 0x13D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x13E7 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH3 0x1214 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH3 0x1428 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH3 0x143C DUP3 DUP5 PUSH3 0x1409 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x145F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1445 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x146F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0x148F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x1442 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x12B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1475 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP12 DUP4 MSTORE DUP11 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x40 DUP6 ADD MSTORE DUP1 DUP11 AND PUSH1 0x60 DUP6 ADD MSTORE DUP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH3 0x14F2 DUP3 DUP6 ADD DUP11 PUSH3 0x1475 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH3 0x1508 DUP3 DUP10 PUSH3 0x1475 JUMP JUMPDEST SWAP3 POP DUP1 DUP8 AND PUSH1 0xC0 DUP6 ADD MSTORE POP POP DUP4 PUSH1 0xE0 DUP4 ADD MSTORE PUSH3 0x152A PUSH2 0x100 DUP4 ADD DUP5 PUSH3 0x1409 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH3 0x154D PUSH1 0x80 DUP4 ADD DUP8 PUSH3 0x1475 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x1561 DUP2 DUP8 PUSH3 0x1475 JUMP JUMPDEST SWAP2 POP POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x1596 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x1442 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x15B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x15CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x12B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x1607 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x162A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1644 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0xB1F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD74 CODESIZE SUB DUP1 PUSH3 0xD74 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2DD JUMP JUMPDEST DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x16A JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x16A JUMP JUMPDEST POP POP POP PUSH3 0x78 DUP2 DUP4 PUSH3 0x82 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xF1 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x120 SWAP1 DUP5 SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x178 SWAP1 PUSH3 0x399 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x19C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1E7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1B7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1E7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1E7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1E7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1CA JUMP JUMPDEST POP PUSH3 0x1F5 SWAP3 SWAP2 POP PUSH3 0x1F9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1F5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x255 JUMPI PUSH3 0x255 PUSH3 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x280 JUMPI PUSH3 0x280 PUSH3 0x210 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2C1 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2A2 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x2D3 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x31A DUP9 DUP4 DUP10 ADD PUSH3 0x226 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x340 DUP8 DUP3 DUP9 ADD PUSH3 0x226 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x394 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98E DUP1 PUSH3 0x3E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x866 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x38E JUMP JUMPDEST PUSH2 0xFF PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8F7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x221 SWAP1 PUSH2 0x8F7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x243 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x251 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 CALLER DUP5 DUP5 PUSH2 0x45B JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B DUP5 DUP5 DUP5 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x347 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x45B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x285 SWAP2 DUP6 SWAP1 PUSH2 0x389 SWAP1 DUP7 SWAP1 PUSH2 0x932 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8F7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH2 0x444 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x45B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 CALLER DUP5 DUP5 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x771 SWAP1 DUP5 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7F8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7DC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x80A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x858 DUP4 PUSH2 0x820 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x884 DUP5 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP PUSH2 0x892 PUSH1 0x20 DUP6 ADD PUSH2 0x820 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8BD DUP3 PUSH2 0x820 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E0 DUP4 PUSH2 0x820 JUMP JUMPDEST SWAP2 POP PUSH2 0x8EE PUSH1 0x20 DUP5 ADD PUSH2 0x820 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x90B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x92C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x953 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 RETURNDATACOPY XOR 0xC3 SWAP7 PUSH25 0xA5BAA01084CB37942D7727F5FCF4FACFF9B937C4FE17977492 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 SWAP8 DUP4 PUSH10 0x5FFDEAB7E0C158832AF8 CHAINID 0xEA STOP INVALID MSTORE RETURNDATASIZE DUP11 PUSH29 0xC5FA3D7D2B38EA2777EC64736F6C634300080900330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        479,
        10474
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "8": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "LT",
      "path": "14"
    },
    "9": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC3"
    },
    "13": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "14": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "16": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "17": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "19": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "SHR",
      "path": "14"
    },
    "20": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x78FE17E5"
    },
    "26": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "GT",
      "path": "14"
    },
    "27": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x71"
    },
    "31": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB141D781"
    },
    "38": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "GT",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x54"
    },
    "43": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "45": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB141D781"
    },
    "50": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "EQ",
      "path": "14"
    },
    "51": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x249"
    },
    "55": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "56": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "57": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD1BC6CAA"
    },
    "62": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "EQ",
      "path": "14"
    },
    "63": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x285"
    },
    "67": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "68": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "69": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDB006A75"
    },
    "74": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "EQ",
      "path": "14"
    },
    "75": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2C3"
    },
    "79": {
      "fn": null,
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "80": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 0,
      "value": "0x0"
    },
    "82": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "DUP1",
      "path": "14"
    },
    "83": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "REVERT",
      "path": "14"
    },
    "84": {
      "offset": [
        479,
        10474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "85": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "86": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x78FE17E5"
    },
    "91": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "EQ",
      "path": "14"
    },
    "92": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1FE"
    },
    "96": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "97": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "98": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8478D997"
    },
    "103": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "EQ",
      "path": "14"
    },
    "104": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x232"
    },
    "108": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "109": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "111": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "DUP1",
      "path": "14"
    },
    "112": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "REVERT",
      "path": "14"
    },
    "113": {
      "offset": [
        479,
        10474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "114": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "115": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x150B7A02"
    },
    "120": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "GT",
      "path": "14"
    },
    "121": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xA6"
    },
    "125": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "126": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "127": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x150B7A02"
    },
    "132": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "EQ",
      "path": "14"
    },
    "133": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x14E"
    },
    "137": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "138": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "139": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x379607F5"
    },
    "144": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "EQ",
      "path": "14"
    },
    "145": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1A5"
    },
    "149": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "150": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "151": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x44C9AF28"
    },
    "156": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "EQ",
      "path": "14"
    },
    "157": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1CA"
    },
    "161": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "162": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "164": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "DUP1",
      "path": "14"
    },
    "165": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "REVERT",
      "path": "14"
    },
    "166": {
      "offset": [
        479,
        10474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "167": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "168": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6FBD1F2"
    },
    "173": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "EQ",
      "path": "14"
    },
    "174": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xFD"
    },
    "178": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "179": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "180": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x7BEC66F"
    },
    "185": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "EQ",
      "path": "14"
    },
    "186": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x135"
    },
    "190": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "191": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "193": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "DUP1",
      "path": "14"
    },
    "194": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "REVERT",
      "path": "14"
    },
    "195": {
      "offset": [
        479,
        10474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "196": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "197": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xF8"
    },
    "201": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        479,
        10474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "202": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3501,
        3532
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 1,
      "value": "0x40"
    },
    "204": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3501,
        3532
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "205": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3522,
        3531
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "206": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3522,
        3531
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "207": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3510,
        3520
      ],
      "op": "CALLER",
      "path": "14"
    },
    "208": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3510,
        3520
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "209": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3501,
        3532
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "242": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3501,
        3532
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "243": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3501,
        3532
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "245": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3501,
        3532
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "246": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        3501,
        3532
      ],
      "op": "LOG3",
      "path": "14"
    },
    "247": {
      "offset": [
        479,
        10474
      ],
      "op": "STOP",
      "path": "14"
    },
    "248": {
      "fn": "FractionalizeNFT.<receive>",
      "offset": [
        479,
        10474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "249": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "251": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "DUP1",
      "path": "14"
    },
    "252": {
      "fn": "FractionalizeNFT.<fallback>",
      "offset": [
        3583,
        3591
      ],
      "op": "REVERT",
      "path": "14"
    },
    "253": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "254": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "255": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "DUP1",
      "path": "14"
    },
    "256": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "257": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x10A"
    },
    "261": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "262": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "264": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "DUP1",
      "path": "14"
    },
    "265": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "REVERT",
      "path": "14"
    },
    "266": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "267": {
      "op": "POP"
    },
    "268": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x122"
    },
    "272": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x11C"
    },
    "276": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "277": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "279": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x12BB"
    },
    "283": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        5903,
        7052
      ],
      "op": "JUMP",
      "path": "14"
    },
    "284": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "285": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2E8"
    },
    "289": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        5903,
        7052
      ],
      "op": "JUMP",
      "path": "14"
    },
    "290": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "291": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "293": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "294": {
      "op": "SWAP1"
    },
    "295": {
      "op": "DUP2"
    },
    "296": {
      "op": "MSTORE"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "299": {
      "op": "ADD"
    },
    "300": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "301": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "303": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "304": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "DUP1",
      "path": "14"
    },
    "305": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "306": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "SUB",
      "path": "14"
    },
    "307": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "308": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "RETURN",
      "path": "14"
    },
    "309": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "310": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x14C"
    },
    "314": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x146"
    },
    "318": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "319": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "321": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1354"
    },
    "325": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        9406,
        10008
      ],
      "op": "JUMP",
      "path": "14"
    },
    "326": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "327": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x5B0"
    },
    "331": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "i",
      "offset": [
        9406,
        10008
      ],
      "op": "JUMP",
      "path": "14"
    },
    "332": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "333": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "STOP",
      "path": "14"
    },
    "334": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "335": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "336": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "DUP1",
      "path": "14"
    },
    "337": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "338": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15B"
    },
    "342": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "343": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "345": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "DUP1",
      "path": "14"
    },
    "346": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "REVERT",
      "path": "14"
    },
    "347": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "348": {
      "op": "POP"
    },
    "349": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x173"
    },
    "353": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x16D"
    },
    "357": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "358": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "360": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x136E"
    },
    "364": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "i",
      "offset": [
        10141,
        10472
      ],
      "op": "JUMP",
      "path": "14"
    },
    "365": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "366": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x701"
    },
    "370": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "i",
      "offset": [
        10141,
        10472
      ],
      "op": "JUMP",
      "path": "14"
    },
    "371": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "372": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "374": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "375": {
      "op": "PUSH32",
      "value": "0xFFFFFFFF00000000000000000000000000000000000000000000000000000000"
    },
    "408": {
      "op": "SWAP1"
    },
    "409": {
      "op": "SWAP2"
    },
    "410": {
      "op": "AND"
    },
    "411": {
      "op": "DUP2"
    },
    "412": {
      "op": "MSTORE"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "415": {
      "op": "ADD"
    },
    "416": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x12C"
    },
    "420": {
      "op": "JUMP"
    },
    "421": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "422": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "423": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "DUP1",
      "path": "14"
    },
    "424": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "425": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1B2"
    },
    "429": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "430": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "432": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "DUP1",
      "path": "14"
    },
    "433": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "REVERT",
      "path": "14"
    },
    "434": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "435": {
      "op": "POP"
    },
    "436": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x14C"
    },
    "440": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1C4"
    },
    "444": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "445": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "447": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1354"
    },
    "451": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8512,
        9235
      ],
      "op": "JUMP",
      "path": "14"
    },
    "452": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "453": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x758"
    },
    "457": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8512,
        9235
      ],
      "op": "JUMP",
      "path": "14"
    },
    "458": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "459": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "460": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "DUP1",
      "path": "14"
    },
    "461": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "462": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1D7"
    },
    "466": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "467": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "469": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "DUP1",
      "path": "14"
    },
    "470": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "REVERT",
      "path": "14"
    },
    "471": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "472": {
      "op": "POP"
    },
    "473": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1EF"
    },
    "477": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1E9"
    },
    "481": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "482": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "484": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1354"
    },
    "488": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        4887,
        5065
      ],
      "op": "JUMP",
      "path": "14"
    },
    "489": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "490": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xA9C"
    },
    "494": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        4887,
        5065
      ],
      "op": "JUMP",
      "path": "14"
    },
    "495": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "496": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "498": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "499": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x12C"
    },
    "503": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "504": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "505": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x142C"
    },
    "509": {
      "fn": "FractionalizeNFT.getState",
      "jump": "i",
      "offset": [
        4887,
        5065
      ],
      "op": "JUMP",
      "path": "14"
    },
    "510": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "511": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "512": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "DUP1",
      "path": "14"
    },
    "513": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "514": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x20B"
    },
    "518": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "519": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "521": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "DUP1",
      "path": "14"
    },
    "522": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "REVERT",
      "path": "14"
    },
    "523": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "524": {
      "op": "POP"
    },
    "525": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x223"
    },
    "529": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x21D"
    },
    "533": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "534": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "536": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1354"
    },
    "540": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4463,
        4661
      ],
      "op": "JUMP",
      "path": "14"
    },
    "541": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "542": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xB25"
    },
    "546": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4463,
        4661
      ],
      "op": "JUMP",
      "path": "14"
    },
    "547": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "548": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "550": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "551": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x12C"
    },
    "555": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "556": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "557": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x14A3"
    },
    "561": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4463,
        4661
      ],
      "op": "JUMP",
      "path": "14"
    },
    "562": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "563": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "564": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "DUP1",
      "path": "14"
    },
    "565": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "566": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x23F"
    },
    "570": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "571": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "573": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "DUP1",
      "path": "14"
    },
    "574": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "REVERT",
      "path": "14"
    },
    "575": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "576": {
      "op": "POP"
    },
    "577": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3817,
        3824
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "579": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 2
    },
    "580": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x122"
    },
    "584": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        3769,
        3873
      ],
      "op": "JUMP",
      "path": "14"
    },
    "585": {
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "586": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "587": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "588": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "589": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x256"
    },
    "593": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "594": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "596": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "597": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "REVERT",
      "path": "14"
    },
    "598": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "599": {
      "op": "POP"
    },
    "600": {
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x26E"
    },
    "604": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x268"
    },
    "608": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "609": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "611": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1354"
    },
    "615": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "616": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "617": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC3A"
    },
    "621": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "622": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "623": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "625": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "626": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x12C"
    },
    "630": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "631": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "632": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "633": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "634": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "635": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "636": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "637": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "638": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "639": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "640": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x14B8"
    },
    "644": {
      "fn": "FractionalizeNFT.getFracNftCount",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "645": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "646": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "647": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "DUP1",
      "path": "14"
    },
    "648": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "649": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x292"
    },
    "653": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "654": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "656": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "DUP1",
      "path": "14"
    },
    "657": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "REVERT",
      "path": "14"
    },
    "658": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "659": {
      "op": "POP"
    },
    "660": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2AA"
    },
    "664": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2A4"
    },
    "668": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "669": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "671": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1354"
    },
    "675": {
      "fn": "FractionalizeNFT.getERC20Address",
      "jump": "i",
      "offset": [
        4080,
        4274
      ],
      "op": "JUMP",
      "path": "14"
    },
    "676": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "677": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xDBF"
    },
    "681": {
      "fn": "FractionalizeNFT.getERC20Address",
      "jump": "i",
      "offset": [
        4080,
        4274
      ],
      "op": "JUMP",
      "path": "14"
    },
    "682": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "683": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "685": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "692": {
      "op": "SHL"
    },
    "693": {
      "op": "SUB"
    },
    "694": {
      "op": "SWAP1"
    },
    "695": {
      "op": "SWAP2"
    },
    "696": {
      "op": "AND"
    },
    "697": {
      "op": "DUP2"
    },
    "698": {
      "op": "MSTORE"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "701": {
      "op": "ADD"
    },
    "702": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x12C"
    },
    "706": {
      "op": "JUMP"
    },
    "707": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "708": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "709": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "DUP1",
      "path": "14"
    },
    "710": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "711": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2D0"
    },
    "715": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "716": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "718": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "DUP1",
      "path": "14"
    },
    "719": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "REVERT",
      "path": "14"
    },
    "720": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "721": {
      "op": "POP"
    },
    "722": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x14C"
    },
    "726": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2E2"
    },
    "730": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "731": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "733": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1354"
    },
    "737": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7427,
        8157
      ],
      "op": "JUMP",
      "path": "14"
    },
    "738": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "739": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xE4A"
    },
    "743": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7427,
        8157
      ],
      "op": "JUMP",
      "path": "14"
    },
    "744": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "745": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6141,
        6148
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "747": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6160,
        6171
      ],
      "op": "DUP1",
      "path": "14"
    },
    "748": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6206,
        6215
      ],
      "op": "DUP6",
      "path": "14"
    },
    "749": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6229,
        6240
      ],
      "op": "DUP6",
      "path": "14"
    },
    "750": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6254,
        6265
      ],
      "op": "DUP6",
      "path": "14"
    },
    "751": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6279,
        6289
      ],
      "op": "CALLER",
      "path": "14"
    },
    "752": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "754": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "755": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x2FD"
    },
    "759": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "760": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x112D"
    },
    "764": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6174,
        6299
      ],
      "op": "JUMP",
      "path": "14"
    },
    "765": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "766": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x30C"
    },
    "770": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "771": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "772": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "773": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "774": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "775": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1538"
    },
    "779": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6174,
        6299
      ],
      "op": "JUMP",
      "path": "14"
    },
    "780": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "781": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "783": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "784": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "DUP1",
      "path": "14"
    },
    "785": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "786": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "SUB",
      "path": "14"
    },
    "787": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "788": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "790": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "CREATE",
      "path": "14"
    },
    "791": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "DUP1",
      "path": "14"
    },
    "792": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "793": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "DUP1",
      "path": "14"
    },
    "794": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "795": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x329"
    },
    "799": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "800": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "801": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "803": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "DUP1",
      "path": "14"
    },
    "804": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "805": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "806": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "808": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "REVERT",
      "path": "14"
    },
    "809": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "810": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6174,
        6299
      ],
      "op": "POP",
      "path": "14"
    },
    "811": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6160,
        6299
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "812": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6160,
        6299
      ],
      "op": "POP",
      "path": "14"
    },
    "813": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6309,
        6326
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "815": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6329,
        6352
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x338"
    },
    "819": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6329,
        6342
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "821": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "822": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "823": {
      "fn": "Counters.current",
      "offset": [
        773,
        885
      ],
      "op": "JUMP",
      "path": "9"
    },
    "824": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6329,
        6352
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "825": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6309,
        6352
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "826": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6309,
        6352
      ],
      "op": "POP",
      "path": "14"
    },
    "827": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 3,
      "value": "0x40"
    },
    "829": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "830": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "DUP1",
      "path": "14"
    },
    "831": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x120"
    },
    "834": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "835": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "837": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "838": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "DUP1",
      "path": "14"
    },
    "839": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6441,
        6450
      ],
      "op": "DUP3",
      "path": "14"
    },
    "840": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "DUP2",
      "path": "14"
    },
    "841": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "842": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "844": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "845": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6476,
        6486
      ],
      "op": "DUP10",
      "path": "14"
    },
    "846": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "DUP2",
      "path": "14"
    },
    "847": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "848": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "850": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "851": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6515,
        6533
      ],
      "op": "DUP11",
      "path": "14"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "858": {
      "op": "SHL"
    },
    "859": {
      "op": "SUB"
    },
    "860": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "AND",
      "path": "14"
    },
    "861": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "DUP2",
      "path": "14"
    },
    "862": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "863": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "865": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "866": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6569,
        6574
      ],
      "op": "DUP4",
      "path": "14"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "op": "SUB"
    },
    "875": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "AND",
      "path": "14"
    },
    "876": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "DUP2",
      "path": "14"
    },
    "877": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "878": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "880": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "881": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6602,
        6613
      ],
      "op": "DUP8",
      "path": "14"
    },
    "882": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "DUP2",
      "path": "14"
    },
    "883": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "884": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "886": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "887": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6638,
        6647
      ],
      "op": "DUP9",
      "path": "14"
    },
    "888": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "DUP2",
      "path": "14"
    },
    "889": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "890": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "892": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "893": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6684,
        6694
      ],
      "op": "CALLER",
      "path": "14"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "AND",
      "path": "14"
    },
    "903": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "DUP2",
      "path": "14"
    },
    "904": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "905": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "907": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "908": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6722,
        6733
      ],
      "op": "DUP6",
      "path": "14"
    },
    "909": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "DUP2",
      "path": "14"
    },
    "910": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "911": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "913": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "914": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6754,
        6774
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "916": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "918": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "DUP2",
      "path": "14"
    },
    "919": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "GT",
      "path": "14"
    },
    "920": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "921": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x3A7"
    },
    "925": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "926": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x3A7"
    },
    "930": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x13F3"
    },
    "934": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6398,
        6785
      ],
      "op": "JUMP",
      "path": "14"
    },
    "935": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "936": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "937": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6398,
        6785
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "938": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6370
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "940": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "942": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6371,
        6394
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x3B6"
    },
    "946": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "DUP2",
      "path": "14"
    },
    "947": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "948": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "949": {
      "fn": "Counters.current",
      "offset": [
        773,
        885
      ],
      "op": "JUMP",
      "path": "9"
    },
    "950": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6371,
        6394
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "951": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "DUP2",
      "path": "14"
    },
    "952": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "953": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "955": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "DUP1",
      "path": "14"
    },
    "956": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "DUP3",
      "path": "14"
    },
    "957": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "ADD",
      "path": "14"
    },
    "958": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "959": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "960": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "961": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "962": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "964": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "965": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "DUP2",
      "path": "14"
    },
    "966": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "ADD",
      "path": "14"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "969": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "970": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP4",
      "path": "14"
    },
    "971": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "972": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP2",
      "path": "14"
    },
    "973": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "974": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP4",
      "path": "14"
    },
    "975": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP4",
      "path": "14"
    },
    "976": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "977": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "978": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "980": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP3",
      "path": "14"
    },
    "981": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "982": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "983": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "984": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP4",
      "path": "14"
    },
    "985": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "986": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "987": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "989": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP3",
      "path": "14"
    },
    "990": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "991": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP1",
      "path": "14"
    },
    "992": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "op": "SUB"
    },
    "1001": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1002": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1003": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "AND",
      "path": "14"
    },
    "1004": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "1037": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1038": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1039": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "AND",
      "path": "14"
    },
    "1040": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "OR",
      "path": "14"
    },
    "1041": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1042": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1043": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1044": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "1046": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1047": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1048": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1049": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1051": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1052": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1053": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1054": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1055": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1056": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1057": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1058": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "AND",
      "path": "14"
    },
    "1059": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1060": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "AND",
      "path": "14"
    },
    "1061": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "OR",
      "path": "14"
    },
    "1062": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1063": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1064": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "1066": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1067": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1068": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1069": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1070": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1071": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1072": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6395
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1073": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x444"
    },
    "1077": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1078": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1080": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1081": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1082": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1083": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1084": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1085": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1086": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1087": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x113B"
    },
    "1091": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6362,
        6785
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1092": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1093": {
      "op": "POP"
    },
    "1094": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1096": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1097": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1098": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1099": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1100": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1101": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x462"
    },
    "1105": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1106": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1108": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1109": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1110": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1111": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1113": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1114": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1115": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1116": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1117": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x113B"
    },
    "1121": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6362,
        6785
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1122": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1123": {
      "op": "POP"
    },
    "1124": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC0"
    },
    "1126": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1127": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1128": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1129": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "1131": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1132": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1133": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1134": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1135": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "1168": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "AND",
      "path": "14"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "op": "SUB"
    },
    "1177": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1178": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1179": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "AND",
      "path": "14"
    },
    "1180": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1181": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1182": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1183": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "OR",
      "path": "14"
    },
    "1184": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1185": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1186": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "1188": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1189": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1190": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1191": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "1193": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1194": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1195": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1196": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1199": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1200": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1201": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1202": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1204": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1205": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ADD",
      "path": "14"
    },
    "1206": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1207": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1210": {
      "op": "NOT"
    },
    "1211": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "AND",
      "path": "14"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1214": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1215": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1217": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1218": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "GT",
      "path": "14"
    },
    "1219": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1220": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x4D2"
    },
    "1224": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1225": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x4D2"
    },
    "1229": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x13F3"
    },
    "1233": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6362,
        6785
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1234": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1235": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "MUL",
      "path": "14"
    },
    "1236": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "OR",
      "path": "14"
    },
    "1237": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1238": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6362,
        6785
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6795,
        6808
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 4,
      "value": "0x0"
    },
    "1243": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 5
    },
    "1244": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1245": {
      "fn": "Counters.increment",
      "offset": [
        996,
        997
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1247": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "ADD",
      "path": "9"
    },
    "1248": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1249": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 6,
      "value": "0x40"
    },
    "1253": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1254": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1261": {
      "op": "SHL"
    },
    "1262": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1263": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1264": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6900,
        6910
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1265": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1267": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1268": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "ADD",
      "path": "14"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6920,
        6924
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1273": {
      "op": "DUP3"
    },
    "1274": {
      "op": "ADD"
    },
    "1275": {
      "op": "MSTORE"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1278": {
      "op": "DUP2"
    },
    "1279": {
      "op": "ADD"
    },
    "1280": {
      "op": "DUP10"
    },
    "1281": {
      "op": "SWAP1"
    },
    "1282": {
      "op": "MSTORE"
    },
    "1283": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6850,
        6868
      ],
      "op": "DUP10",
      "path": "14"
    },
    "1284": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6850,
        6868
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1291": {
      "op": "SHL"
    },
    "1292": {
      "op": "SUB"
    },
    "1293": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6899
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1294": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6899
      ],
      "op": "AND",
      "path": "14"
    },
    "1295": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6899
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1296": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6899
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42842E0E"
    },
    "1301": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6899
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1304": {
      "op": "ADD"
    },
    "1305": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1307": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1309": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1310": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1311": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1312": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "SUB",
      "path": "14"
    },
    "1313": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1314": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1316": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1317": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1318": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1319": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1320": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1321": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1322": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x533"
    },
    "1326": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1327": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1329": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1330": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1331": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1332": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "POP",
      "path": "14"
    },
    "1333": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "GAS",
      "path": "14"
    },
    "1334": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "CALL",
      "path": "14"
    },
    "1335": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1336": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1337": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1338": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x548"
    },
    "1342": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1343": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1344": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1346": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1347": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1348": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1349": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1351": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1352": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1353": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "POP",
      "path": "14"
    },
    "1354": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "POP",
      "path": "14"
    },
    "1355": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "POP",
      "path": "14"
    },
    "1356": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6879,
        6938
      ],
      "op": "POP",
      "path": "14"
    },
    "1357": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6991,
        7002
      ],
      "op": "DUP7",
      "path": "14",
      "statement": 7
    },
    "1358": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1360": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1361": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x55C"
    },
    "1365": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1366": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1367": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1582"
    },
    "1371": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "i",
      "offset": [
        6953,
        7019
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1372": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1373": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1375": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1376": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1377": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1378": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1379": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "SUB",
      "path": "14"
    },
    "1380": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1381": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1388": {
      "op": "SHL"
    },
    "1389": {
      "op": "SUB"
    },
    "1390": {
      "op": "DUP6"
    },
    "1391": {
      "op": "AND"
    },
    "1392": {
      "op": "DUP3"
    },
    "1393": {
      "op": "MSTORE"
    },
    "1394": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1395": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6980,
        6989
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1396": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6980,
        6989
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1397": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6968,
        6978
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1398": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6968,
        6978
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1399": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xE2C8AEFC9D0A52C93C762509EEEAC2A518C41C52F791B6888C0673D07312C605"
    },
    "1432": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1435": {
      "op": "ADD"
    },
    "1436": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1438": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1439": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1440": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1441": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "SUB",
      "path": "14"
    },
    "1442": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1443": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        6953,
        7019
      ],
      "op": "LOG4",
      "path": "14"
    },
    "1444": {
      "op": "POP"
    },
    "1445": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        7036,
        7045
      ],
      "op": "SWAP9",
      "path": "14",
      "statement": 8
    },
    "1446": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "offset": [
        5903,
        7052
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "fn": "FractionalizeNFT.fractionalizeNft",
      "jump": "o",
      "offset": [
        5903,
        7052
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1456": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1457": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9619
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 9,
      "value": "0x0"
    },
    "1459": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9619
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1460": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9619
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1461": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9619
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1462": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9608
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1464": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9619
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1466": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9619
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1467": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9619
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1469": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9619
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1470": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9619
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1471": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9631
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "1473": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9631
      ],
      "op": "ADD",
      "path": "14"
    },
    "1474": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9600,
        9631
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1475": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9587,
        9596
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1476": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9587,
        9631
      ],
      "op": "LT",
      "path": "14"
    },
    "1477": {
      "branch": 28,
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9587,
        9631
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1478": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x63D"
    },
    "1482": {
      "branch": 28,
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1483": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1485": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1492": {
      "op": "SHL"
    },
    "1493": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1494": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1497": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1499": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1500": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "ADD",
      "path": "14"
    },
    "1501": {
      "op": "MSTORE"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1506": {
      "op": "DUP3"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "op": "MSTORE"
    },
    "1509": {
      "op": "PUSH32",
      "value": "0x53656E6465722073656E74206C657373207468616E20746865206275796F7574"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1544": {
      "op": "DUP3"
    },
    "1545": {
      "op": "ADD"
    },
    "1546": {
      "op": "MSTORE"
    },
    "1547": {
      "op": "PUSH32",
      "value": "0x2070726963652E00000000000000000000000000000000000000000000000000"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1582": {
      "op": "DUP3"
    },
    "1583": {
      "op": "ADD"
    },
    "1584": {
      "op": "MSTORE"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1587": {
      "op": "ADD"
    },
    "1588": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1589": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1591": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1592": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1593": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1594": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "SUB",
      "path": "14"
    },
    "1595": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1596": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "14"
    },
    "1597": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9566,
        9696
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1598": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 10,
      "value": "0x0"
    },
    "1600": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1601": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1602": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1603": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1605": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1607": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1608": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1609": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1610": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1612": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1613": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1614": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1615": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9725
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1616": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9731
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1618": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9731
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1619": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9731
      ],
      "op": "ADD",
      "path": "14"
    },
    "1620": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9749
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1621": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9749
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1624": {
      "op": "NOT"
    },
    "1625": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9749
      ],
      "op": "AND",
      "path": "14"
    },
    "1626": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9734,
        9749
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1628": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9749
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1629": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9749
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1630": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9749
      ],
      "op": "OR",
      "path": "14"
    },
    "1631": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9749
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1632": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9749
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1633": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9706,
        9749
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1634": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9782,
        9815
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1635": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9782,
        9815
      ],
      "op": "ADD",
      "path": "14"
    },
    "1636": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9782,
        9815
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1637": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9914,
        9944
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 11
    },
    "1638": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9914,
        9944
      ],
      "op": "ADD",
      "path": "14"
    },
    "1639": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9914,
        9944
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1640": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1641": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1642": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1649": {
      "op": "SHL"
    },
    "1650": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1651": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1652": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9871,
        9875
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "1653": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1655": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1656": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "ADD",
      "path": "14"
    },
    "1657": {
      "op": "MSTORE"
    },
    "1658": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9890,
        9900
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1661": {
      "op": "DUP3"
    },
    "1662": {
      "op": "ADD"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1666": {
      "op": "DUP2"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "SWAP3"
    },
    "1669": {
      "op": "SWAP1"
    },
    "1670": {
      "op": "SWAP3"
    },
    "1671": {
      "op": "MSTORE"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1678": {
      "op": "SHL"
    },
    "1679": {
      "op": "SUB"
    },
    "1680": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9782,
        9815
      ],
      "op": "AND",
      "path": "14"
    },
    "1681": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9782,
        9815
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1682": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9782,
        9815
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1683": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9782,
        9815
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1684": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9849
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42842E0E"
    },
    "1689": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9849
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1692": {
      "op": "ADD"
    },
    "1693": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1695": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1697": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1698": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1699": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1700": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "SUB",
      "path": "14"
    },
    "1701": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1702": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1704": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1705": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1706": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1707": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1708": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1709": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1710": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x6B7"
    },
    "1714": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1715": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1717": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1718": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1719": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1720": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "POP",
      "path": "14"
    },
    "1721": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "GAS",
      "path": "14"
    },
    "1722": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "CALL",
      "path": "14"
    },
    "1723": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1724": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1725": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1726": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x6CC"
    },
    "1730": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1731": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1732": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1734": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1735": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1736": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1737": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1739": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1740": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9826,
        9954
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1741": {
      "op": "POP"
    },
    "1742": {
      "op": "POP"
    },
    "1743": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9969,
        10001
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 12,
      "value": "0x40"
    },
    "1745": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9969,
        10001
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1746": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9991,
        10000
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1747": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9991,
        10000
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1748": {
      "op": "POP"
    },
    "1749": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        9989
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1750": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9979,
        9989
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1751": {
      "op": "POP"
    },
    "1752": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9969,
        10001
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xFBBD268BB69CF922E3840DC96A6702DC064BAF4B2D9594B5A66A2FE428F3F2AA"
    },
    "1785": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9969,
        10001
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1786": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9969,
        10001
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1788": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9969,
        10001
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1789": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9969,
        10001
      ],
      "op": "LOG3",
      "path": "14"
    },
    "1790": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9456,
        10008
      ],
      "op": "POP",
      "path": "14"
    },
    "1791": {
      "fn": "FractionalizeNFT.buyout",
      "offset": [
        9406,
        10008
      ],
      "op": "POP",
      "path": "14"
    },
    "1792": {
      "fn": "FractionalizeNFT.buyout",
      "jump": "o",
      "offset": [
        9406,
        10008
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1793": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1794": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10315,
        10338
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 13,
      "value": "0x40"
    },
    "1796": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10315,
        10338
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1797": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10292,
        10298
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1799": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10292,
        10298
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1800": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10327,
        10337
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1801": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10327,
        10337
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1802": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10315,
        10338
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xCCE71FC9CFCACC4CE8153BDE254A735AE423CDC2B7852FB754F4DE746AC3018F"
    },
    "1835": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10315,
        10338
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1836": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10292,
        10298
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1837": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10292,
        10298
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1838": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10315,
        10338
      ],
      "op": "LOG2",
      "path": "14"
    },
    "1839": {
      "op": "POP"
    },
    "1840": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10391,
        10451
      ],
      "op": "PUSH32",
      "path": "14",
      "statement": 14,
      "value": "0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F"
    },
    "1873": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1874": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1875": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "POP",
      "path": "14"
    },
    "1876": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "POP",
      "path": "14"
    },
    "1877": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "POP",
      "path": "14"
    },
    "1878": {
      "fn": "FractionalizeNFT.onERC721Received",
      "offset": [
        10141,
        10472
      ],
      "op": "POP",
      "path": "14"
    },
    "1879": {
      "fn": "FractionalizeNFT.onERC721Received",
      "jump": "o",
      "offset": [
        10141,
        10472
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1880": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1881": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8613,
        8628
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 15,
      "value": "0x2"
    },
    "1883": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8603
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1885": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8603
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1886": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8603
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1887": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8603
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1888": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8592
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1890": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8603
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1892": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8603
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1893": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8603
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1895": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8603
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1896": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8603
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1897": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8609
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1899": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8609
      ],
      "op": "ADD",
      "path": "14"
    },
    "1900": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8609
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1901": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8609
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1903": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8609
      ],
      "op": "AND",
      "path": "14"
    },
    "1904": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8628
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1906": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8628
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1907": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8628
      ],
      "op": "GT",
      "path": "14"
    },
    "1908": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8628
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1909": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8628
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x783"
    },
    "1913": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8628
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1914": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8628
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x783"
    },
    "1918": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8628
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x13F3"
    },
    "1922": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8584,
        8628
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1923": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8628
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1924": {
      "branch": 29,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8584,
        8628
      ],
      "op": "EQ",
      "path": "14"
    },
    "1925": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8563,
        8697
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x7F8"
    },
    "1929": {
      "branch": 29,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8563,
        8697
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1930": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8563,
        8697
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1932": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8563,
        8697
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1939": {
      "op": "SHL"
    },
    "1940": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8563,
        8697
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1941": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8563,
        8697
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1944": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8563,
        8697
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1946": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8563,
        8697
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1947": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8563,
        8697
      ],
      "op": "ADD",
      "path": "14"
    },
    "1948": {
      "op": "MSTORE"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1953": {
      "op": "DUP3"
    },
    "1954": {
      "op": "ADD"
    },
    "1955": {
      "op": "MSTORE"
    },
    "1956": {
      "op": "PUSH32",
      "value": "0x4672616374696F6E616C697A6564204E465420686173206E6F74206265656E20"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1991": {
      "op": "DUP3"
    },
    "1992": {
      "op": "ADD"
    },
    "1993": {
      "op": "MSTORE"
    },
    "1994": {
      "op": "PUSH32",
      "value": "0x626F75676874206F75742E000000000000000000000000000000000000000000"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2029": {
      "op": "DUP3"
    },
    "2030": {
      "op": "ADD"
    },
    "2031": {
      "op": "MSTORE"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2034": {
      "op": "ADD"
    },
    "2035": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8563,
        8697
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x634"
    },
    "2039": {
      "op": "JUMP"
    },
    "2040": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8563,
        8697
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2041": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8707,
        8718
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2043": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8746
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2044": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8746
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2045": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8746
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2046": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8735
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2048": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2050": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8746
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2051": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2053": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8746
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2054": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8746
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2055": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8746
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2056": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8759
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "2058": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8759
      ],
      "op": "ADD",
      "path": "14"
    },
    "2059": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8759
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2060": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2061": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2062": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2071": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2072": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8811,
        8821
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2073": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2075": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2076": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "ADD",
      "path": "14"
    },
    "2077": {
      "op": "MSTORE"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2084": {
      "op": "SHL"
    },
    "2085": {
      "op": "SUB"
    },
    "2086": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8759
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2087": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8759
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2088": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8759
      ],
      "op": "AND",
      "path": "14"
    },
    "2089": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8759
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2090": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8707,
        8718
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2091": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8759
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2092": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8727,
        8759
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2093": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8810
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "2098": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8810
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2101": {
      "op": "ADD"
    },
    "2102": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2104": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2106": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2107": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2108": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2109": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "SUB",
      "path": "14"
    },
    "2110": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2111": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2112": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2113": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2114": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2115": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2116": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2117": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x84E"
    },
    "2121": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2122": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2124": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2125": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2126": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2127": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "POP",
      "path": "14"
    },
    "2128": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "GAS",
      "path": "14"
    },
    "2129": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "2130": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2131": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2132": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2133": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x863"
    },
    "2137": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2138": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2139": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2141": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2142": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2143": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2144": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2146": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2147": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2148": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "POP",
      "path": "14"
    },
    "2149": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "POP",
      "path": "14"
    },
    "2150": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "POP",
      "path": "14"
    },
    "2151": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "POP",
      "path": "14"
    },
    "2152": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2154": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2155": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2156": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2158": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "NOT",
      "path": "14"
    },
    "2159": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2161": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2162": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "ADD",
      "path": "14"
    },
    "2163": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "AND",
      "path": "14"
    },
    "2164": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2165": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "ADD",
      "path": "14"
    },
    "2166": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2167": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2169": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2170": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "POP",
      "path": "14"
    },
    "2171": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2172": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "ADD",
      "path": "14"
    },
    "2173": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2174": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x889"
    },
    "2178": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2179": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2180": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15A0"
    },
    "2184": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8795,
        8822
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2185": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8795,
        8822
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2186": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8770,
        8822
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2187": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8770,
        8822
      ],
      "op": "POP",
      "path": "14"
    },
    "2188": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8857,
        8858
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 16,
      "value": "0x0"
    },
    "2190": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8840,
        8854
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2191": {
      "branch": 30,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8840,
        8858
      ],
      "op": "GT",
      "path": "14"
    },
    "2192": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8832,
        8896
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x903"
    },
    "2196": {
      "branch": 30,
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8832,
        8896
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2197": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8832,
        8896
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2199": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8832,
        8896
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2200": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8832,
        8896
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2208": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8832,
        8896
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2211": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8832,
        8896
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2213": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8832,
        8896
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2214": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8832,
        8896
      ],
      "op": "ADD",
      "path": "14"
    },
    "2215": {
      "op": "MSTORE"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2220": {
      "op": "DUP3"
    },
    "2221": {
      "op": "ADD"
    },
    "2222": {
      "op": "MSTORE"
    },
    "2223": {
      "op": "PUSH32",
      "value": "0x436C61696D657220646F6573206E6F7420686F6C6420616E7920746F6B656E73"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2258": {
      "op": "DUP3"
    },
    "2259": {
      "op": "ADD"
    },
    "2260": {
      "op": "MSTORE"
    },
    "2261": {
      "op": "PUSH32",
      "value": "0x2E00000000000000000000000000000000000000000000000000000000000000"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2296": {
      "op": "DUP3"
    },
    "2297": {
      "op": "ADD"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2301": {
      "op": "ADD"
    },
    "2302": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8832,
        8896
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x634"
    },
    "2306": {
      "op": "JUMP"
    },
    "2307": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8832,
        8896
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2308": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 17,
      "value": "0x40"
    },
    "2310": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2311": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2318": {
      "op": "SHL"
    },
    "2319": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2320": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2321": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8925,
        8935
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2322": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2324": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2325": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "ADD",
      "path": "14"
    },
    "2326": {
      "op": "MSTORE"
    },
    "2327": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8945,
        8949
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2330": {
      "op": "DUP3"
    },
    "2331": {
      "op": "ADD"
    },
    "2332": {
      "op": "MSTORE"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2335": {
      "op": "DUP2"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "DUP3"
    },
    "2338": {
      "op": "SWAP1"
    },
    "2339": {
      "op": "MSTORE"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2346": {
      "op": "SHL"
    },
    "2347": {
      "op": "SUB"
    },
    "2348": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8924
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2349": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8924
      ],
      "op": "AND",
      "path": "14"
    },
    "2350": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8924
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2351": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8924
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "2356": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8924
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2359": {
      "op": "ADD"
    },
    "2360": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2362": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2364": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2365": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2366": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2367": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "SUB",
      "path": "14"
    },
    "2368": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2369": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2371": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2372": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2373": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2374": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2375": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2376": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2377": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x952"
    },
    "2381": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2382": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2384": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2385": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2386": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2387": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "POP",
      "path": "14"
    },
    "2388": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "GAS",
      "path": "14"
    },
    "2389": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "CALL",
      "path": "14"
    },
    "2390": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2391": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2392": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2393": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x967"
    },
    "2397": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2398": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2399": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2401": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2402": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2403": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2404": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2406": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2407": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2408": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "POP",
      "path": "14"
    },
    "2409": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "POP",
      "path": "14"
    },
    "2410": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "POP",
      "path": "14"
    },
    "2411": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "POP",
      "path": "14"
    },
    "2412": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2414": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2415": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2416": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2418": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "NOT",
      "path": "14"
    },
    "2419": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2421": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2422": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "ADD",
      "path": "14"
    },
    "2423": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "AND",
      "path": "14"
    },
    "2424": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2425": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "ADD",
      "path": "14"
    },
    "2426": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2427": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2429": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2430": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "POP",
      "path": "14"
    },
    "2431": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2432": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "ADD",
      "path": "14"
    },
    "2433": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2434": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x98D"
    },
    "2438": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2439": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2440": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15BA"
    },
    "2444": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8906,
        8967
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2445": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2446": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8906,
        8967
      ],
      "op": "POP",
      "path": "14"
    },
    "2447": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8977,
        8996
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2449": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9004
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2456": {
      "op": "SHL"
    },
    "2457": {
      "op": "SUB"
    },
    "2458": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9016
      ],
      "op": "AND",
      "path": "14"
    },
    "2459": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9016
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "2464": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2466": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2467": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2468": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "2473": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "AND",
      "path": "14"
    },
    "2474": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "2476": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "SHL",
      "path": "14"
    },
    "2477": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2478": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2479": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2481": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "ADD",
      "path": "14"
    },
    "2482": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2484": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2486": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2487": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2488": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2489": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "SUB",
      "path": "14"
    },
    "2490": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2491": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2492": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2493": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2494": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2495": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2496": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2497": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x9CA"
    },
    "2501": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2502": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2504": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2505": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2506": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2507": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "POP",
      "path": "14"
    },
    "2508": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "GAS",
      "path": "14"
    },
    "2509": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "2510": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2511": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2512": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2513": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x9DF"
    },
    "2517": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2518": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2519": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2521": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2522": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2523": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2524": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2526": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2527": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2528": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "POP",
      "path": "14"
    },
    "2529": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "POP",
      "path": "14"
    },
    "2530": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "POP",
      "path": "14"
    },
    "2531": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "POP",
      "path": "14"
    },
    "2532": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2534": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2535": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2536": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2538": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "NOT",
      "path": "14"
    },
    "2539": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2541": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2542": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "ADD",
      "path": "14"
    },
    "2543": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "AND",
      "path": "14"
    },
    "2544": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2545": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "ADD",
      "path": "14"
    },
    "2546": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2547": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2549": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2550": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "POP",
      "path": "14"
    },
    "2551": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2552": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "ADD",
      "path": "14"
    },
    "2553": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2554": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xA05"
    },
    "2558": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2559": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2560": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15A0"
    },
    "2564": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        8999,
        9018
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2565": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8999,
        9018
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2566": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9028,
        9050
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2568": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9073
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2569": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9073
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2570": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9073
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2571": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9062
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2573": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9073
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2575": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9073
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2576": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9073
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2578": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9073
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2579": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9073
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2580": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9085
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "2582": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9085
      ],
      "op": "ADD",
      "path": "14"
    },
    "2583": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9085
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2584": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8977,
        9018
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2585": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8977,
        9018
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2586": {
      "op": "POP"
    },
    "2587": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9028,
        9050
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2588": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8977,
        9018
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2589": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8977,
        9018
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2590": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xA2A"
    },
    "2594": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2595": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9100,
        9114
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2596": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9100,
        9114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2597": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9114
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15DE"
    },
    "2601": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        9054,
        9114
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2602": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9054,
        9114
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2603": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9053,
        9129
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xA36"
    },
    "2607": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9053,
        9129
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2608": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9053,
        9129
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2609": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9053,
        9129
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x160C"
    },
    "2613": {
      "fn": "FractionalizeNFT.claim",
      "jump": "i",
      "offset": [
        9053,
        9129
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2614": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9053,
        9129
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2615": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 18,
      "value": "0x40"
    },
    "2617": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2618": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9028,
        9129
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2619": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9028,
        9129
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2620": {
      "op": "POP"
    },
    "2621": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9147,
        9157
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2622": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9147,
        9157
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2623": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2624": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2625": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8FC"
    },
    "2628": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "MUL",
      "path": "14"
    },
    "2629": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2630": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9028,
        9129
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2631": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9028,
        9129
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2632": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2634": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2635": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2636": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2637": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9028,
        9129
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2638": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9147,
        9157
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2639": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2640": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "CALL",
      "path": "14"
    },
    "2641": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2642": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "POP",
      "path": "14"
    },
    "2643": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "POP",
      "path": "14"
    },
    "2644": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "POP",
      "path": "14"
    },
    "2645": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "POP",
      "path": "14"
    },
    "2646": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2647": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2648": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2649": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xA67"
    },
    "2653": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2654": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2655": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2657": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2658": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2659": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2660": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2662": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2663": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9139,
        9183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2664": {
      "op": "POP"
    },
    "2665": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9198,
        9228
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 19,
      "value": "0x40"
    },
    "2667": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9198,
        9228
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2668": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9218,
        9227
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2669": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9218,
        9227
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2670": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9206,
        9216
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2671": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9206,
        9216
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2672": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9198,
        9228
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
    },
    "2705": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9198,
        9228
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2706": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9198,
        9228
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2708": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9198,
        9228
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2709": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        9198,
        9228
      ],
      "op": "LOG3",
      "path": "14"
    },
    "2710": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8553,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2711": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8553,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2712": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8553,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2713": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8553,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2714": {
      "fn": "FractionalizeNFT.claim",
      "offset": [
        8512,
        9235
      ],
      "op": "POP",
      "path": "14"
    },
    "2715": {
      "fn": "FractionalizeNFT.claim",
      "jump": "o",
      "offset": [
        8512,
        9235
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2716": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2717": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5005,
        5010
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2719": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4977,
        4986
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2720": {
      "offset": [
        3349,
        3372
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xAA9"
    },
    "2724": {
      "offset": [
        3349,
        3362
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2726": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2727": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2728": {
      "fn": "Counters.current",
      "offset": [
        773,
        885
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2729": {
      "offset": [
        3349,
        3372
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2730": {
      "offset": [
        3337,
        3346
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2731": {
      "offset": [
        3337,
        3372
      ],
      "op": "LT",
      "path": "14"
    },
    "2732": {
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xB07"
    },
    "2736": {
      "offset": [
        3316,
        3435
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2737": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2739": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2740": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2746": {
      "op": "SHL"
    },
    "2747": {
      "offset": [
        3316,
        3435
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2748": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2751": {
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2753": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2754": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "ADD",
      "path": "14"
    },
    "2755": {
      "op": "MSTORE"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2760": {
      "op": "DUP3"
    },
    "2761": {
      "op": "ADD"
    },
    "2762": {
      "op": "MSTORE"
    },
    "2763": {
      "op": "PUSH32",
      "value": "0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2798": {
      "op": "DUP3"
    },
    "2799": {
      "op": "ADD"
    },
    "2800": {
      "op": "MSTORE"
    },
    "2801": {
      "op": "PUSH5",
      "value": "0x27232A3997"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2809": {
      "op": "SHL"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2812": {
      "op": "DUP3"
    },
    "2813": {
      "op": "ADD"
    },
    "2814": {
      "op": "MSTORE"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2817": {
      "op": "ADD"
    },
    "2818": {
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x634"
    },
    "2822": {
      "op": "JUMP"
    },
    "2823": {
      "offset": [
        3316,
        3435
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2824": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5052
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 20,
      "value": "0x0"
    },
    "2826": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5052
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2827": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5052
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2828": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5052
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2829": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5041
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2831": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5052
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2833": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5052
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2834": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5052
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2836": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5052
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2837": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5052
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2838": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5058
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2840": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5058
      ],
      "op": "ADD",
      "path": "14"
    },
    "2841": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5058
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2842": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5058
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2844": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5058
      ],
      "op": "AND",
      "path": "14"
    },
    "2845": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        5033,
        5058
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2846": {
      "op": "POP"
    },
    "2847": {
      "offset": [
        3445,
        3446
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2848": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "POP",
      "path": "14"
    },
    "2849": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2850": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2851": {
      "fn": "FractionalizeNFT.getState",
      "offset": [
        4887,
        5065
      ],
      "op": "POP",
      "path": "14"
    },
    "2852": {
      "fn": "FractionalizeNFT.getState",
      "jump": "o",
      "offset": [
        4887,
        5065
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2853": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2854": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4587,
        4600
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2856": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4559,
        4568
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2857": {
      "offset": [
        3349,
        3372
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xB32"
    },
    "2861": {
      "offset": [
        3349,
        3362
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2863": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2864": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2865": {
      "fn": "Counters.current",
      "offset": [
        773,
        885
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2866": {
      "offset": [
        3349,
        3372
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2867": {
      "offset": [
        3337,
        3346
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2868": {
      "offset": [
        3337,
        3372
      ],
      "op": "LT",
      "path": "14"
    },
    "2869": {
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xB90"
    },
    "2873": {
      "offset": [
        3316,
        3435
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2874": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2876": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2877": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2883": {
      "op": "SHL"
    },
    "2884": {
      "offset": [
        3316,
        3435
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2885": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2888": {
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2890": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2891": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "ADD",
      "path": "14"
    },
    "2892": {
      "op": "MSTORE"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2897": {
      "op": "DUP3"
    },
    "2898": {
      "op": "ADD"
    },
    "2899": {
      "op": "MSTORE"
    },
    "2900": {
      "op": "PUSH32",
      "value": "0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2935": {
      "op": "DUP3"
    },
    "2936": {
      "op": "ADD"
    },
    "2937": {
      "op": "MSTORE"
    },
    "2938": {
      "op": "PUSH5",
      "value": "0x27232A3997"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2946": {
      "op": "SHL"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2949": {
      "op": "DUP3"
    },
    "2950": {
      "op": "ADD"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2954": {
      "op": "ADD"
    },
    "2955": {
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x634"
    },
    "2959": {
      "op": "JUMP"
    },
    "2960": {
      "offset": [
        3316,
        3435
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2961": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4642
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 21,
      "value": "0x0"
    },
    "2963": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4642
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2964": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4642
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2965": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4642
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2966": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4631
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2968": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4642
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2970": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4642
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2971": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4642
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2973": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4642
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2974": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4642
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2975": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2977": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4623,
        4654
      ],
      "op": "ADD",
      "path": "14"
    },
    "2978": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2979": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2980": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xBAE"
    },
    "2984": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2985": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x162F"
    },
    "2989": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4616,
        4654
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2990": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2991": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2992": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2994": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "ADD",
      "path": "14"
    },
    "2995": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2997": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2998": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2999": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DIV",
      "path": "14"
    },
    "3000": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "MUL",
      "path": "14"
    },
    "3001": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3003": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "ADD",
      "path": "14"
    },
    "3004": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3006": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3007": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3008": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3009": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "ADD",
      "path": "14"
    },
    "3010": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3012": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3013": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3014": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3015": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3016": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3017": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3018": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3019": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3020": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3022": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "ADD",
      "path": "14"
    },
    "3023": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3024": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3025": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3026": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xBDC"
    },
    "3030": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3031": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x162F"
    },
    "3035": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        4616,
        4654
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3036": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3037": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3038": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3039": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC2D"
    },
    "3043": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3044": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3045": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3047": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "LT",
      "path": "14"
    },
    "3048": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC01"
    },
    "3052": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3053": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "3056": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3057": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3058": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3059": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DIV",
      "path": "14"
    },
    "3060": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "MUL",
      "path": "14"
    },
    "3061": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3062": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3063": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3064": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3066": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "ADD",
      "path": "14"
    },
    "3067": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3068": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC2D"
    },
    "3072": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3073": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3074": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3075": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "ADD",
      "path": "14"
    },
    "3076": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3077": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3078": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3080": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3081": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3083": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3085": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3086": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3087": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3088": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3089": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3090": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3091": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3092": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3093": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3095": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "ADD",
      "path": "14"
    },
    "3096": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3097": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3099": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "ADD",
      "path": "14"
    },
    "3100": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3101": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3102": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "GT",
      "path": "14"
    },
    "3103": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC0F"
    },
    "3107": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3108": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3109": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3110": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SUB",
      "path": "14"
    },
    "3111": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3113": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "AND",
      "path": "14"
    },
    "3114": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3115": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "ADD",
      "path": "14"
    },
    "3116": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3117": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3118": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "POP",
      "path": "14"
    },
    "3119": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "POP",
      "path": "14"
    },
    "3120": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "POP",
      "path": "14"
    },
    "3121": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "POP",
      "path": "14"
    },
    "3122": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "POP",
      "path": "14"
    },
    "3123": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3124": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4616,
        4654
      ],
      "op": "POP",
      "path": "14"
    },
    "3125": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "POP",
      "path": "14"
    },
    "3126": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3127": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3128": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        4463,
        4661
      ],
      "op": "POP",
      "path": "14"
    },
    "3129": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "o",
      "offset": [
        4463,
        4661
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3130": {
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3131": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3133": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3135": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3136": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3137": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3138": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3140": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3141": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3142": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3143": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3145": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3146": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3147": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3148": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3149": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3150": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3151": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3152": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3153": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3154": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "3156": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3157": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3158": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3159": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3161": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3162": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3163": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3164": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3166": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3167": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3168": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3169": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3170": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3171": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3178": {
      "op": "SHL"
    },
    "3179": {
      "op": "SUB"
    },
    "3180": {
      "offset": [
        616,
        669
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3181": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3182": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3183": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3184": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3185": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3186": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3187": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3188": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3189": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC7F"
    },
    "3193": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3194": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x162F"
    },
    "3198": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3199": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3200": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3201": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3203": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3204": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3206": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3207": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3208": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DIV",
      "path": "14"
    },
    "3209": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MUL",
      "path": "14"
    },
    "3210": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3212": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3213": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3215": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3216": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3217": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3218": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3219": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3221": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3222": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3223": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3224": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3225": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3226": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3227": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3228": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3229": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3231": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3232": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3233": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3234": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3235": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xCAD"
    },
    "3239": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3240": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x162F"
    },
    "3244": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3245": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3246": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3247": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3248": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xCFE"
    },
    "3252": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3253": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3254": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3256": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "LT",
      "path": "14"
    },
    "3257": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xCD2"
    },
    "3261": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3262": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "3265": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3266": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3267": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3268": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DIV",
      "path": "14"
    },
    "3269": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MUL",
      "path": "14"
    },
    "3270": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3271": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3272": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3273": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3275": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3276": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3277": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xCFE"
    },
    "3281": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3282": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3283": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3284": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3285": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3286": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3287": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3289": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3290": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3292": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3294": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3295": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3296": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3297": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3298": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3299": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3300": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3301": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3302": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3304": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3305": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3306": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3308": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3309": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3310": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3311": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "GT",
      "path": "14"
    },
    "3312": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xCE0"
    },
    "3316": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3317": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3318": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3319": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SUB",
      "path": "14"
    },
    "3320": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3322": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3323": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3324": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3325": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3326": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3327": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "POP",
      "path": "14"
    },
    "3328": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "POP",
      "path": "14"
    },
    "3329": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "POP",
      "path": "14"
    },
    "3330": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "POP",
      "path": "14"
    },
    "3331": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "POP",
      "path": "14"
    },
    "3332": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3333": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3334": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "3336": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3337": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3338": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3339": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xD15"
    },
    "3343": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3344": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x162F"
    },
    "3348": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3349": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3350": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3351": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3353": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3354": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3356": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3357": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3358": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DIV",
      "path": "14"
    },
    "3359": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MUL",
      "path": "14"
    },
    "3360": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3362": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3363": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3365": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3366": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3367": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3368": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3369": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3371": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3372": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3373": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3374": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3375": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3376": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3377": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3378": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3379": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3381": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3382": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3383": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3384": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3385": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xD43"
    },
    "3389": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3390": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x162F"
    },
    "3394": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "i",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3395": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3396": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3397": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3398": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xD94"
    },
    "3402": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3403": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3404": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3406": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "LT",
      "path": "14"
    },
    "3407": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xD68"
    },
    "3411": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3412": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "3415": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3416": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3417": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3418": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DIV",
      "path": "14"
    },
    "3419": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MUL",
      "path": "14"
    },
    "3420": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3421": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3422": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3423": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3425": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3426": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3427": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xD94"
    },
    "3431": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3432": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3433": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3434": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3435": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3436": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3437": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3439": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3440": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3442": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3444": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3445": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3446": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3447": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3448": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3449": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3450": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3451": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3452": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3454": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3455": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3456": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3458": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3459": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3460": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3461": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "GT",
      "path": "14"
    },
    "3462": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xD76"
    },
    "3466": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3467": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3468": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3469": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SUB",
      "path": "14"
    },
    "3470": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3472": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3473": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3474": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3475": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3476": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3477": {
      "op": "POP"
    },
    "3478": {
      "op": "POP"
    },
    "3479": {
      "op": "POP"
    },
    "3480": {
      "op": "POP"
    },
    "3481": {
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "3483": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3484": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3485": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3486": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3488": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3489": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3490": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3491": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3493": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3494": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3495": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "ADD",
      "path": "14"
    },
    "3496": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3497": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3498": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3505": {
      "op": "SHL"
    },
    "3506": {
      "op": "SUB"
    },
    "3507": {
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3508": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3509": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3510": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3511": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3512": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3513": {
      "op": "POP"
    },
    "3514": {
      "offset": [
        616,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3516": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "AND",
      "path": "14"
    },
    "3517": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "offset": [
        616,
        669
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3518": {
      "fn": "FractionalizeNFT.getERC20Symbol",
      "jump": "o",
      "offset": [
        616,
        669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3519": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4080,
        4274
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3520": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4205,
        4212
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3522": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4177,
        4186
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3523": {
      "offset": [
        3349,
        3372
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xDCC"
    },
    "3527": {
      "offset": [
        3349,
        3362
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3529": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3530": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3531": {
      "fn": "Counters.current",
      "offset": [
        773,
        885
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3532": {
      "offset": [
        3349,
        3372
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3533": {
      "offset": [
        3337,
        3346
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3534": {
      "offset": [
        3337,
        3372
      ],
      "op": "LT",
      "path": "14"
    },
    "3535": {
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xE2A"
    },
    "3539": {
      "offset": [
        3316,
        3435
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3540": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3542": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3543": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3549": {
      "op": "SHL"
    },
    "3550": {
      "offset": [
        3316,
        3435
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3551": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3554": {
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3556": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3557": {
      "fn": "Counters.current",
      "offset": [
        3316,
        3435
      ],
      "op": "ADD",
      "path": "14"
    },
    "3558": {
      "op": "MSTORE"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3563": {
      "op": "DUP3"
    },
    "3564": {
      "op": "ADD"
    },
    "3565": {
      "op": "MSTORE"
    },
    "3566": {
      "op": "PUSH32",
      "value": "0x667261634E4654496420646F6573206E6F7420657869737420696E2066726163"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3601": {
      "op": "DUP3"
    },
    "3602": {
      "op": "ADD"
    },
    "3603": {
      "op": "MSTORE"
    },
    "3604": {
      "op": "PUSH5",
      "value": "0x27232A3997"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "3612": {
      "op": "SHL"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3615": {
      "op": "DUP3"
    },
    "3616": {
      "op": "ADD"
    },
    "3617": {
      "op": "MSTORE"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3620": {
      "op": "ADD"
    },
    "3621": {
      "offset": [
        3316,
        3435
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x634"
    },
    "3625": {
      "op": "JUMP"
    },
    "3626": {
      "offset": [
        3316,
        3435
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3627": {
      "op": "POP"
    },
    "3628": {
      "op": "POP"
    },
    "3629": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4254
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 22,
      "value": "0x0"
    },
    "3631": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4254
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3632": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4254
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3633": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4254
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3634": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4243
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3636": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3638": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4254
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3639": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3641": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4254
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3642": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4254
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3643": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4267
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3645": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4267
      ],
      "op": "ADD",
      "path": "14"
    },
    "3646": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4267
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3653": {
      "op": "SHL"
    },
    "3654": {
      "op": "SUB"
    },
    "3655": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4267
      ],
      "op": "AND",
      "path": "14"
    },
    "3656": {
      "fn": "FractionalizeNFT.getERC20Address",
      "offset": [
        4235,
        4267
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3657": {
      "fn": "FractionalizeNFT.getERC20Address",
      "jump": "o",
      "offset": [
        4080,
        4274
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3658": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3659": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7479,
        7490
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3661": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7518
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3662": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7518
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3663": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7518
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3664": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7507
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3666": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7518
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3668": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7518
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3669": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7518
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3671": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7518
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3672": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7518
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3673": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7518
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3674": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7531
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3676": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7531
      ],
      "op": "ADD",
      "path": "14"
    },
    "3677": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7531
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3678": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3679": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3680": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3687": {
      "op": "SHL"
    },
    "3688": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3689": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3690": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7584,
        7594
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3691": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3693": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3694": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "ADD",
      "path": "14"
    },
    "3695": {
      "op": "MSTORE"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3702": {
      "op": "SHL"
    },
    "3703": {
      "op": "SUB"
    },
    "3704": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7531
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3705": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7531
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3706": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7531
      ],
      "op": "AND",
      "path": "14"
    },
    "3707": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7531
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3708": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7479,
        7490
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3709": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7531
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3710": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7499,
        7531
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3711": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7583
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "3716": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7583
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3719": {
      "op": "ADD"
    },
    "3720": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3722": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3724": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3725": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3726": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3727": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "SUB",
      "path": "14"
    },
    "3728": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3729": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3730": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3731": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3732": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3733": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3734": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3735": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xEA0"
    },
    "3739": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3740": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3742": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3743": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3744": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3745": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "POP",
      "path": "14"
    },
    "3746": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "GAS",
      "path": "14"
    },
    "3747": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3748": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3749": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3750": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3751": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xEB5"
    },
    "3755": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3756": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3757": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3759": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3760": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "3761": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3762": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3764": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3765": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3766": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "POP",
      "path": "14"
    },
    "3767": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "POP",
      "path": "14"
    },
    "3768": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "POP",
      "path": "14"
    },
    "3769": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "POP",
      "path": "14"
    },
    "3770": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3772": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3773": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3774": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3776": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "NOT",
      "path": "14"
    },
    "3777": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3779": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3780": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "ADD",
      "path": "14"
    },
    "3781": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "AND",
      "path": "14"
    },
    "3782": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3783": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "ADD",
      "path": "14"
    },
    "3784": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3785": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3787": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3788": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "POP",
      "path": "14"
    },
    "3789": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3790": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "ADD",
      "path": "14"
    },
    "3791": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3792": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xEDB"
    },
    "3796": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3797": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3798": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15A0"
    },
    "3802": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7568,
        7595
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3803": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7568,
        7595
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3804": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7542,
        7595
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3805": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7542,
        7595
      ],
      "op": "POP",
      "path": "14"
    },
    "3806": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7605,
        7624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3808": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7632
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3815": {
      "op": "SHL"
    },
    "3816": {
      "op": "SUB"
    },
    "3817": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7644
      ],
      "op": "AND",
      "path": "14"
    },
    "3818": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7644
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "3823": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3825": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3826": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3827": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "3832": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "AND",
      "path": "14"
    },
    "3833": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3835": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "SHL",
      "path": "14"
    },
    "3836": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3837": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3838": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3840": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "ADD",
      "path": "14"
    },
    "3841": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3843": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3845": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3846": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3847": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3848": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "SUB",
      "path": "14"
    },
    "3849": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3850": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3851": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3852": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3853": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3854": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3855": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3856": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xF19"
    },
    "3860": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3861": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3863": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3864": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3865": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3866": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "POP",
      "path": "14"
    },
    "3867": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "GAS",
      "path": "14"
    },
    "3868": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3869": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3870": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3871": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3872": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xF2E"
    },
    "3876": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3877": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3878": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3880": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3881": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "3882": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3883": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3885": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3886": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3887": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "POP",
      "path": "14"
    },
    "3888": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "POP",
      "path": "14"
    },
    "3889": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "POP",
      "path": "14"
    },
    "3890": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "POP",
      "path": "14"
    },
    "3891": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3893": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3894": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3895": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3897": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "NOT",
      "path": "14"
    },
    "3898": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3900": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3901": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "ADD",
      "path": "14"
    },
    "3902": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "AND",
      "path": "14"
    },
    "3903": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3904": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "ADD",
      "path": "14"
    },
    "3905": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3906": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3908": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3909": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "POP",
      "path": "14"
    },
    "3910": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3911": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "ADD",
      "path": "14"
    },
    "3912": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3913": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xF54"
    },
    "3917": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3918": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3919": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15A0"
    },
    "3923": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7627,
        7646
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3924": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7627,
        7646
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3925": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7605,
        7646
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3926": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7605,
        7646
      ],
      "op": "POP",
      "path": "14"
    },
    "3927": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7696,
        7707
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 23
    },
    "3928": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7677,
        7692
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3929": {
      "branch": 31,
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7677,
        7707
      ],
      "op": "EQ",
      "path": "14"
    },
    "3930": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7656,
        7775
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xFCD"
    },
    "3934": {
      "branch": 31,
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7656,
        7775
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3935": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7656,
        7775
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3937": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7656,
        7775
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3944": {
      "op": "SHL"
    },
    "3945": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7656,
        7775
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3946": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7656,
        7775
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3949": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7656,
        7775
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3951": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7656,
        7775
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3952": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7656,
        7775
      ],
      "op": "ADD",
      "path": "14"
    },
    "3953": {
      "op": "MSTORE"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3958": {
      "op": "DUP3"
    },
    "3959": {
      "op": "ADD"
    },
    "3960": {
      "op": "MSTORE"
    },
    "3961": {
      "op": "PUSH32",
      "value": "0x52656465656D65657220646F6573206E6F7420686F6C642074686520656E7469"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3996": {
      "op": "DUP3"
    },
    "3997": {
      "op": "ADD"
    },
    "3998": {
      "op": "MSTORE"
    },
    "3999": {
      "op": "PUSH32",
      "value": "0x726520737570706C792E00000000000000000000000000000000000000000000"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4034": {
      "op": "DUP3"
    },
    "4035": {
      "op": "ADD"
    },
    "4036": {
      "op": "MSTORE"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4039": {
      "op": "ADD"
    },
    "4040": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7656,
        7775
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x634"
    },
    "4044": {
      "op": "JUMP"
    },
    "4045": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7656,
        7775
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4046": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 24,
      "value": "0x0"
    },
    "4048": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4049": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4050": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4051": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7813,
        7827
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "4053": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4055": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4056": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4057": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4058": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4060": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4061": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4062": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4063": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7804
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4064": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7810
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "4066": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7810
      ],
      "op": "ADD",
      "path": "14"
    },
    "4067": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7827
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4068": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7827
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4071": {
      "op": "NOT"
    },
    "4072": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7827
      ],
      "op": "AND",
      "path": "14"
    },
    "4073": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7827
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4074": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7827
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4075": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7827
      ],
      "op": "OR",
      "path": "14"
    },
    "4076": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7827
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4077": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7785,
        7827
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "4078": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 25
    },
    "4079": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4086": {
      "op": "SHL"
    },
    "4087": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4088": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4089": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7856,
        7866
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4090": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4092": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4093": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "ADD",
      "path": "14"
    },
    "4094": {
      "op": "MSTORE"
    },
    "4095": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7876,
        7880
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4098": {
      "op": "DUP3"
    },
    "4099": {
      "op": "ADD"
    },
    "4100": {
      "op": "MSTORE"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4103": {
      "op": "DUP2"
    },
    "4104": {
      "op": "ADD"
    },
    "4105": {
      "op": "DUP4"
    },
    "4106": {
      "op": "SWAP1"
    },
    "4107": {
      "op": "MSTORE"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4114": {
      "op": "SHL"
    },
    "4115": {
      "op": "SUB"
    },
    "4116": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7855
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4117": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7855
      ],
      "op": "AND",
      "path": "14"
    },
    "4118": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7855
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4119": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7855
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "4124": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7855
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4127": {
      "op": "ADD"
    },
    "4128": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4130": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4132": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4133": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4134": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4135": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "SUB",
      "path": "14"
    },
    "4136": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4137": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4139": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4140": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4141": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "4142": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4143": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4144": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4145": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x103A"
    },
    "4149": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4150": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4152": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4153": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4154": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4155": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "POP",
      "path": "14"
    },
    "4156": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "GAS",
      "path": "14"
    },
    "4157": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "CALL",
      "path": "14"
    },
    "4158": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4159": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4160": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4161": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x104F"
    },
    "4165": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4166": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4167": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4169": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4170": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4171": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4172": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4174": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4175": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4176": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "POP",
      "path": "14"
    },
    "4177": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "POP",
      "path": "14"
    },
    "4178": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "POP",
      "path": "14"
    },
    "4179": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "POP",
      "path": "14"
    },
    "4180": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4182": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4183": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4184": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4186": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "NOT",
      "path": "14"
    },
    "4187": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4189": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4190": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "ADD",
      "path": "14"
    },
    "4191": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "AND",
      "path": "14"
    },
    "4192": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4193": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "ADD",
      "path": "14"
    },
    "4194": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4195": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4197": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4198": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "POP",
      "path": "14"
    },
    "4199": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4200": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "ADD",
      "path": "14"
    },
    "4201": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4202": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1075"
    },
    "4206": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4207": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4208": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15BA"
    },
    "4212": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "i",
      "offset": [
        7837,
        7899
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4213": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7837,
        7899
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4214": {
      "op": "POP"
    },
    "4215": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7909,
        7922
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4217": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4218": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4219": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4220": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7940
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "4222": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4224": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4225": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4226": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4227": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4229": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4230": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4231": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4232": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7951
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4233": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7965
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "4235": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7965
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4236": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7965
      ],
      "op": "ADD",
      "path": "14"
    },
    "4237": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7965
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4238": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8064,
        8094
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 26
    },
    "4239": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8064,
        8094
      ],
      "op": "ADD",
      "path": "14"
    },
    "4240": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8064,
        8094
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4241": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4242": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4243": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4250": {
      "op": "SHL"
    },
    "4251": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4252": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4253": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8021,
        8025
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "4254": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4256": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4257": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "ADD",
      "path": "14"
    },
    "4258": {
      "op": "MSTORE"
    },
    "4259": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8040,
        8050
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4262": {
      "op": "DUP3"
    },
    "4263": {
      "op": "ADD"
    },
    "4264": {
      "op": "MSTORE"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4267": {
      "op": "DUP2"
    },
    "4268": {
      "op": "ADD"
    },
    "4269": {
      "op": "SWAP3"
    },
    "4270": {
      "op": "SWAP1"
    },
    "4271": {
      "op": "SWAP3"
    },
    "4272": {
      "op": "MSTORE"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4279": {
      "op": "SHL"
    },
    "4280": {
      "op": "SUB"
    },
    "4281": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7965
      ],
      "op": "AND",
      "path": "14"
    },
    "4282": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7965
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4283": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7965
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4284": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7932,
        7965
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4285": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        7999
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42842E0E"
    },
    "4290": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        7999
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4293": {
      "op": "ADD"
    },
    "4294": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4296": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4298": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4299": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4300": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4301": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "SUB",
      "path": "14"
    },
    "4302": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4303": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4305": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4306": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4307": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "4308": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4309": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4310": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4311": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x10E0"
    },
    "4315": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4316": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4318": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4319": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4320": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4321": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "POP",
      "path": "14"
    },
    "4322": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "GAS",
      "path": "14"
    },
    "4323": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "CALL",
      "path": "14"
    },
    "4324": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4325": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4326": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4327": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x10F5"
    },
    "4331": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4332": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4333": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4335": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4336": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4337": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4338": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4340": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4341": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7976,
        8104
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4342": {
      "op": "POP"
    },
    "4343": {
      "op": "POP"
    },
    "4344": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8119,
        8150
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 27,
      "value": "0x40"
    },
    "4346": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8119,
        8150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4347": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8140,
        8149
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4348": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8140,
        8149
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4349": {
      "op": "POP"
    },
    "4350": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8128,
        8138
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4351": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8128,
        8138
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4352": {
      "op": "POP"
    },
    "4353": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8119,
        8150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369"
    },
    "4386": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8119,
        8150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4387": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8119,
        8150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4389": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8119,
        8150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4390": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        8119,
        8150
      ],
      "op": "LOG3",
      "path": "14"
    },
    "4391": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7469,
        8157
      ],
      "op": "POP",
      "path": "14"
    },
    "4392": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7469,
        8157
      ],
      "op": "POP",
      "path": "14"
    },
    "4393": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7469,
        8157
      ],
      "op": "POP",
      "path": "14"
    },
    "4394": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7469,
        8157
      ],
      "op": "POP",
      "path": "14"
    },
    "4395": {
      "fn": "FractionalizeNFT.redeem",
      "offset": [
        7427,
        8157
      ],
      "op": "POP",
      "path": "14"
    },
    "4396": {
      "fn": "FractionalizeNFT.redeem",
      "jump": "o",
      "offset": [
        7427,
        8157
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4397": {
      "op": "JUMPDEST"
    },
    "4398": {
      "op": "PUSH2",
      "value": "0xD74"
    },
    "4401": {
      "op": "DUP1"
    },
    "4402": {
      "op": "PUSH3",
      "value": "0x1667"
    },
    "4406": {
      "op": "DUP4"
    },
    "4407": {
      "op": "CODECOPY"
    },
    "4408": {
      "op": "ADD"
    },
    "4409": {
      "op": "SWAP1"
    },
    "4410": {
      "jump": "o",
      "op": "JUMP"
    },
    "4411": {
      "op": "JUMPDEST"
    },
    "4412": {
      "op": "DUP3"
    },
    "4413": {
      "op": "DUP1"
    },
    "4414": {
      "op": "SLOAD"
    },
    "4415": {
      "op": "PUSH3",
      "value": "0x1149"
    },
    "4419": {
      "op": "SWAP1"
    },
    "4420": {
      "op": "PUSH3",
      "value": "0x162F"
    },
    "4424": {
      "jump": "i",
      "op": "JUMP"
    },
    "4425": {
      "op": "JUMPDEST"
    },
    "4426": {
      "op": "SWAP1"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4429": {
      "op": "MSTORE"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4434": {
      "op": "KECCAK256"
    },
    "4435": {
      "op": "SWAP1"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4441": {
      "op": "SWAP1"
    },
    "4442": {
      "op": "DIV"
    },
    "4443": {
      "op": "DUP2"
    },
    "4444": {
      "op": "ADD"
    },
    "4445": {
      "op": "SWAP3"
    },
    "4446": {
      "op": "DUP3"
    },
    "4447": {
      "op": "PUSH3",
      "value": "0x116D"
    },
    "4451": {
      "op": "JUMPI"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4454": {
      "op": "DUP6"
    },
    "4455": {
      "op": "SSTORE"
    },
    "4456": {
      "op": "PUSH3",
      "value": "0x11B8"
    },
    "4460": {
      "op": "JUMP"
    },
    "4461": {
      "op": "JUMPDEST"
    },
    "4462": {
      "op": "DUP3"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4465": {
      "op": "LT"
    },
    "4466": {
      "op": "PUSH3",
      "value": "0x1188"
    },
    "4470": {
      "op": "JUMPI"
    },
    "4471": {
      "op": "DUP1"
    },
    "4472": {
      "op": "MLOAD"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4475": {
      "op": "NOT"
    },
    "4476": {
      "op": "AND"
    },
    "4477": {
      "op": "DUP4"
    },
    "4478": {
      "op": "DUP1"
    },
    "4479": {
      "op": "ADD"
    },
    "4480": {
      "op": "OR"
    },
    "4481": {
      "op": "DUP6"
    },
    "4482": {
      "op": "SSTORE"
    },
    "4483": {
      "op": "PUSH3",
      "value": "0x11B8"
    },
    "4487": {
      "op": "JUMP"
    },
    "4488": {
      "op": "JUMPDEST"
    },
    "4489": {
      "op": "DUP3"
    },
    "4490": {
      "op": "DUP1"
    },
    "4491": {
      "op": "ADD"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4494": {
      "op": "ADD"
    },
    "4495": {
      "op": "DUP6"
    },
    "4496": {
      "op": "SSTORE"
    },
    "4497": {
      "op": "DUP3"
    },
    "4498": {
      "op": "ISZERO"
    },
    "4499": {
      "op": "PUSH3",
      "value": "0x11B8"
    },
    "4503": {
      "op": "JUMPI"
    },
    "4504": {
      "op": "SWAP2"
    },
    "4505": {
      "op": "DUP3"
    },
    "4506": {
      "op": "ADD"
    },
    "4507": {
      "op": "JUMPDEST"
    },
    "4508": {
      "op": "DUP3"
    },
    "4509": {
      "op": "DUP2"
    },
    "4510": {
      "op": "GT"
    },
    "4511": {
      "op": "ISZERO"
    },
    "4512": {
      "op": "PUSH3",
      "value": "0x11B8"
    },
    "4516": {
      "op": "JUMPI"
    },
    "4517": {
      "op": "DUP3"
    },
    "4518": {
      "op": "MLOAD"
    },
    "4519": {
      "op": "DUP3"
    },
    "4520": {
      "op": "SSTORE"
    },
    "4521": {
      "op": "SWAP2"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4524": {
      "op": "ADD"
    },
    "4525": {
      "op": "SWAP2"
    },
    "4526": {
      "op": "SWAP1"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4529": {
      "op": "ADD"
    },
    "4530": {
      "op": "SWAP1"
    },
    "4531": {
      "op": "PUSH3",
      "value": "0x119B"
    },
    "4535": {
      "op": "JUMP"
    },
    "4536": {
      "op": "JUMPDEST"
    },
    "4537": {
      "op": "POP"
    },
    "4538": {
      "op": "PUSH3",
      "value": "0x11C6"
    },
    "4542": {
      "op": "SWAP3"
    },
    "4543": {
      "op": "SWAP2"
    },
    "4544": {
      "op": "POP"
    },
    "4545": {
      "op": "PUSH3",
      "value": "0x11CA"
    },
    "4549": {
      "jump": "i",
      "op": "JUMP"
    },
    "4550": {
      "op": "JUMPDEST"
    },
    "4551": {
      "op": "POP"
    },
    "4552": {
      "op": "SWAP1"
    },
    "4553": {
      "jump": "o",
      "op": "JUMP"
    },
    "4554": {
      "op": "JUMPDEST"
    },
    "4555": {
      "op": "JUMPDEST"
    },
    "4556": {
      "op": "DUP1"
    },
    "4557": {
      "op": "DUP3"
    },
    "4558": {
      "op": "GT"
    },
    "4559": {
      "op": "ISZERO"
    },
    "4560": {
      "op": "PUSH3",
      "value": "0x11C6"
    },
    "4564": {
      "op": "JUMPI"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4567": {
      "op": "DUP2"
    },
    "4568": {
      "op": "SSTORE"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4571": {
      "op": "ADD"
    },
    "4572": {
      "op": "PUSH3",
      "value": "0x11CB"
    },
    "4576": {
      "op": "JUMP"
    },
    "4577": {
      "op": "JUMPDEST"
    },
    "4578": {
      "op": "DUP1"
    },
    "4579": {
      "op": "CALLDATALOAD"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4586": {
      "op": "SHL"
    },
    "4587": {
      "op": "SUB"
    },
    "4588": {
      "op": "DUP2"
    },
    "4589": {
      "op": "AND"
    },
    "4590": {
      "op": "DUP2"
    },
    "4591": {
      "op": "EQ"
    },
    "4592": {
      "op": "PUSH3",
      "value": "0x11F9"
    },
    "4596": {
      "op": "JUMPI"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4599": {
      "op": "DUP1"
    },
    "4600": {
      "op": "REVERT"
    },
    "4601": {
      "op": "JUMPDEST"
    },
    "4602": {
      "op": "SWAP2"
    },
    "4603": {
      "op": "SWAP1"
    },
    "4604": {
      "op": "POP"
    },
    "4605": {
      "jump": "o",
      "op": "JUMP"
    },
    "4606": {
      "op": "JUMPDEST"
    },
    "4607": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4614": {
      "op": "SHL"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4617": {
      "op": "MSTORE"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4622": {
      "op": "MSTORE"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4627": {
      "op": "REVERT"
    },
    "4628": {
      "op": "JUMPDEST"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4631": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4640": {
      "op": "DUP1"
    },
    "4641": {
      "op": "DUP5"
    },
    "4642": {
      "op": "GT"
    },
    "4643": {
      "op": "ISZERO"
    },
    "4644": {
      "op": "PUSH3",
      "value": "0x1232"
    },
    "4648": {
      "op": "JUMPI"
    },
    "4649": {
      "op": "PUSH3",
      "value": "0x1232"
    },
    "4653": {
      "op": "PUSH3",
      "value": "0x11FE"
    },
    "4657": {
      "jump": "i",
      "op": "JUMP"
    },
    "4658": {
      "op": "JUMPDEST"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4661": {
      "op": "MLOAD"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4664": {
      "op": "DUP6"
    },
    "4665": {
      "op": "ADD"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4668": {
      "op": "NOT"
    },
    "4669": {
      "op": "SWAP1"
    },
    "4670": {
      "op": "DUP2"
    },
    "4671": {
      "op": "AND"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4674": {
      "op": "ADD"
    },
    "4675": {
      "op": "AND"
    },
    "4676": {
      "op": "DUP2"
    },
    "4677": {
      "op": "ADD"
    },
    "4678": {
      "op": "SWAP1"
    },
    "4679": {
      "op": "DUP3"
    },
    "4680": {
      "op": "DUP3"
    },
    "4681": {
      "op": "GT"
    },
    "4682": {
      "op": "DUP2"
    },
    "4683": {
      "op": "DUP4"
    },
    "4684": {
      "op": "LT"
    },
    "4685": {
      "op": "OR"
    },
    "4686": {
      "op": "ISZERO"
    },
    "4687": {
      "op": "PUSH3",
      "value": "0x125D"
    },
    "4691": {
      "op": "JUMPI"
    },
    "4692": {
      "op": "PUSH3",
      "value": "0x125D"
    },
    "4696": {
      "op": "PUSH3",
      "value": "0x11FE"
    },
    "4700": {
      "jump": "i",
      "op": "JUMP"
    },
    "4701": {
      "op": "JUMPDEST"
    },
    "4702": {
      "op": "DUP2"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4705": {
      "op": "MSTORE"
    },
    "4706": {
      "op": "DUP1"
    },
    "4707": {
      "op": "SWAP4"
    },
    "4708": {
      "op": "POP"
    },
    "4709": {
      "op": "DUP6"
    },
    "4710": {
      "op": "DUP2"
    },
    "4711": {
      "op": "MSTORE"
    },
    "4712": {
      "op": "DUP7"
    },
    "4713": {
      "op": "DUP7"
    },
    "4714": {
      "op": "DUP7"
    },
    "4715": {
      "op": "ADD"
    },
    "4716": {
      "op": "GT"
    },
    "4717": {
      "op": "ISZERO"
    },
    "4718": {
      "op": "PUSH3",
      "value": "0x1277"
    },
    "4722": {
      "op": "JUMPI"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4725": {
      "op": "DUP1"
    },
    "4726": {
      "op": "REVERT"
    },
    "4727": {
      "op": "JUMPDEST"
    },
    "4728": {
      "op": "DUP6"
    },
    "4729": {
      "op": "DUP6"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4732": {
      "op": "DUP4"
    },
    "4733": {
      "op": "ADD"
    },
    "4734": {
      "op": "CALLDATACOPY"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4739": {
      "op": "DUP8"
    },
    "4740": {
      "op": "DUP4"
    },
    "4741": {
      "op": "ADD"
    },
    "4742": {
      "op": "ADD"
    },
    "4743": {
      "op": "MSTORE"
    },
    "4744": {
      "op": "POP"
    },
    "4745": {
      "op": "POP"
    },
    "4746": {
      "op": "POP"
    },
    "4747": {
      "op": "SWAP4"
    },
    "4748": {
      "op": "SWAP3"
    },
    "4749": {
      "op": "POP"
    },
    "4750": {
      "op": "POP"
    },
    "4751": {
      "op": "POP"
    },
    "4752": {
      "jump": "o",
      "op": "JUMP"
    },
    "4753": {
      "op": "JUMPDEST"
    },
    "4754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4756": {
      "op": "DUP3"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4759": {
      "op": "DUP4"
    },
    "4760": {
      "op": "ADD"
    },
    "4761": {
      "op": "SLT"
    },
    "4762": {
      "op": "PUSH3",
      "value": "0x12A3"
    },
    "4766": {
      "op": "JUMPI"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4769": {
      "op": "DUP1"
    },
    "4770": {
      "op": "REVERT"
    },
    "4771": {
      "op": "JUMPDEST"
    },
    "4772": {
      "op": "PUSH3",
      "value": "0x12B4"
    },
    "4776": {
      "op": "DUP4"
    },
    "4777": {
      "op": "DUP4"
    },
    "4778": {
      "op": "CALLDATALOAD"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4781": {
      "op": "DUP6"
    },
    "4782": {
      "op": "ADD"
    },
    "4783": {
      "op": "PUSH3",
      "value": "0x1214"
    },
    "4787": {
      "jump": "i",
      "op": "JUMP"
    },
    "4788": {
      "op": "JUMPDEST"
    },
    "4789": {
      "op": "SWAP4"
    },
    "4790": {
      "op": "SWAP3"
    },
    "4791": {
      "op": "POP"
    },
    "4792": {
      "op": "POP"
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "jump": "o",
      "op": "JUMP"
    },
    "4795": {
      "op": "JUMPDEST"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4798": {
      "op": "DUP1"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4801": {
      "op": "DUP1"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4804": {
      "op": "DUP1"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4807": {
      "op": "DUP8"
    },
    "4808": {
      "op": "DUP10"
    },
    "4809": {
      "op": "SUB"
    },
    "4810": {
      "op": "SLT"
    },
    "4811": {
      "op": "ISZERO"
    },
    "4812": {
      "op": "PUSH3",
      "value": "0x12D5"
    },
    "4816": {
      "op": "JUMPI"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4819": {
      "op": "DUP1"
    },
    "4820": {
      "op": "REVERT"
    },
    "4821": {
      "op": "JUMPDEST"
    },
    "4822": {
      "op": "PUSH3",
      "value": "0x12E0"
    },
    "4826": {
      "op": "DUP8"
    },
    "4827": {
      "op": "PUSH3",
      "value": "0x11E1"
    },
    "4831": {
      "jump": "i",
      "op": "JUMP"
    },
    "4832": {
      "op": "JUMPDEST"
    },
    "4833": {
      "op": "SWAP6"
    },
    "4834": {
      "op": "POP"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4837": {
      "op": "DUP8"
    },
    "4838": {
      "op": "ADD"
    },
    "4839": {
      "op": "CALLDATALOAD"
    },
    "4840": {
      "op": "SWAP5"
    },
    "4841": {
      "op": "POP"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4844": {
      "op": "DUP8"
    },
    "4845": {
      "op": "ADD"
    },
    "4846": {
      "op": "CALLDATALOAD"
    },
    "4847": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4856": {
      "op": "DUP1"
    },
    "4857": {
      "op": "DUP3"
    },
    "4858": {
      "op": "GT"
    },
    "4859": {
      "op": "ISZERO"
    },
    "4860": {
      "op": "PUSH3",
      "value": "0x1305"
    },
    "4864": {
      "op": "JUMPI"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4867": {
      "op": "DUP1"
    },
    "4868": {
      "op": "REVERT"
    },
    "4869": {
      "op": "JUMPDEST"
    },
    "4870": {
      "op": "PUSH3",
      "value": "0x1313"
    },
    "4874": {
      "op": "DUP11"
    },
    "4875": {
      "op": "DUP4"
    },
    "4876": {
      "op": "DUP12"
    },
    "4877": {
      "op": "ADD"
    },
    "4878": {
      "op": "PUSH3",
      "value": "0x1291"
    },
    "4882": {
      "jump": "i",
      "op": "JUMP"
    },
    "4883": {
      "op": "JUMPDEST"
    },
    "4884": {
      "op": "SWAP6"
    },
    "4885": {
      "op": "POP"
    },
    "4886": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4888": {
      "op": "DUP10"
    },
    "4889": {
      "op": "ADD"
    },
    "4890": {
      "op": "CALLDATALOAD"
    },
    "4891": {
      "op": "SWAP2"
    },
    "4892": {
      "op": "POP"
    },
    "4893": {
      "op": "DUP1"
    },
    "4894": {
      "op": "DUP3"
    },
    "4895": {
      "op": "GT"
    },
    "4896": {
      "op": "ISZERO"
    },
    "4897": {
      "op": "PUSH3",
      "value": "0x132A"
    },
    "4901": {
      "op": "JUMPI"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4904": {
      "op": "DUP1"
    },
    "4905": {
      "op": "REVERT"
    },
    "4906": {
      "op": "JUMPDEST"
    },
    "4907": {
      "op": "POP"
    },
    "4908": {
      "op": "PUSH3",
      "value": "0x1339"
    },
    "4912": {
      "op": "DUP10"
    },
    "4913": {
      "op": "DUP3"
    },
    "4914": {
      "op": "DUP11"
    },
    "4915": {
      "op": "ADD"
    },
    "4916": {
      "op": "PUSH3",
      "value": "0x1291"
    },
    "4920": {
      "jump": "i",
      "op": "JUMP"
    },
    "4921": {
      "op": "JUMPDEST"
    },
    "4922": {
      "op": "SWAP4"
    },
    "4923": {
      "op": "POP"
    },
    "4924": {
      "op": "POP"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4927": {
      "op": "DUP8"
    },
    "4928": {
      "op": "ADD"
    },
    "4929": {
      "op": "CALLDATALOAD"
    },
    "4930": {
      "op": "SWAP2"
    },
    "4931": {
      "op": "POP"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4934": {
      "op": "DUP8"
    },
    "4935": {
      "op": "ADD"
    },
    "4936": {
      "op": "CALLDATALOAD"
    },
    "4937": {
      "op": "SWAP1"
    },
    "4938": {
      "op": "POP"
    },
    "4939": {
      "op": "SWAP3"
    },
    "4940": {
      "op": "SWAP6"
    },
    "4941": {
      "op": "POP"
    },
    "4942": {
      "op": "SWAP3"
    },
    "4943": {
      "op": "SWAP6"
    },
    "4944": {
      "op": "POP"
    },
    "4945": {
      "op": "SWAP3"
    },
    "4946": {
      "op": "SWAP6"
    },
    "4947": {
      "jump": "o",
      "op": "JUMP"
    },
    "4948": {
      "op": "JUMPDEST"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4953": {
      "op": "DUP3"
    },
    "4954": {
      "op": "DUP5"
    },
    "4955": {
      "op": "SUB"
    },
    "4956": {
      "op": "SLT"
    },
    "4957": {
      "op": "ISZERO"
    },
    "4958": {
      "op": "PUSH3",
      "value": "0x1367"
    },
    "4962": {
      "op": "JUMPI"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4965": {
      "op": "DUP1"
    },
    "4966": {
      "op": "REVERT"
    },
    "4967": {
      "op": "JUMPDEST"
    },
    "4968": {
      "op": "POP"
    },
    "4969": {
      "op": "CALLDATALOAD"
    },
    "4970": {
      "op": "SWAP2"
    },
    "4971": {
      "op": "SWAP1"
    },
    "4972": {
      "op": "POP"
    },
    "4973": {
      "jump": "o",
      "op": "JUMP"
    },
    "4974": {
      "op": "JUMPDEST"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4977": {
      "op": "DUP1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4980": {
      "op": "DUP1"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4983": {
      "op": "DUP6"
    },
    "4984": {
      "op": "DUP8"
    },
    "4985": {
      "op": "SUB"
    },
    "4986": {
      "op": "SLT"
    },
    "4987": {
      "op": "ISZERO"
    },
    "4988": {
      "op": "PUSH3",
      "value": "0x1385"
    },
    "4992": {
      "op": "JUMPI"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4995": {
      "op": "DUP1"
    },
    "4996": {
      "op": "REVERT"
    },
    "4997": {
      "op": "JUMPDEST"
    },
    "4998": {
      "op": "PUSH3",
      "value": "0x1390"
    },
    "5002": {
      "op": "DUP6"
    },
    "5003": {
      "op": "PUSH3",
      "value": "0x11E1"
    },
    "5007": {
      "jump": "i",
      "op": "JUMP"
    },
    "5008": {
      "op": "JUMPDEST"
    },
    "5009": {
      "op": "SWAP4"
    },
    "5010": {
      "op": "POP"
    },
    "5011": {
      "op": "PUSH3",
      "value": "0x13A0"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5017": {
      "op": "DUP7"
    },
    "5018": {
      "op": "ADD"
    },
    "5019": {
      "op": "PUSH3",
      "value": "0x11E1"
    },
    "5023": {
      "jump": "i",
      "op": "JUMP"
    },
    "5024": {
      "op": "JUMPDEST"
    },
    "5025": {
      "op": "SWAP3"
    },
    "5026": {
      "op": "POP"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5029": {
      "op": "DUP6"
    },
    "5030": {
      "op": "ADD"
    },
    "5031": {
      "op": "CALLDATALOAD"
    },
    "5032": {
      "op": "SWAP2"
    },
    "5033": {
      "op": "POP"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5036": {
      "op": "DUP6"
    },
    "5037": {
      "op": "ADD"
    },
    "5038": {
      "op": "CALLDATALOAD"
    },
    "5039": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5048": {
      "op": "DUP2"
    },
    "5049": {
      "op": "GT"
    },
    "5050": {
      "op": "ISZERO"
    },
    "5051": {
      "op": "PUSH3",
      "value": "0x13C4"
    },
    "5055": {
      "op": "JUMPI"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5058": {
      "op": "DUP1"
    },
    "5059": {
      "op": "REVERT"
    },
    "5060": {
      "op": "JUMPDEST"
    },
    "5061": {
      "op": "DUP6"
    },
    "5062": {
      "op": "ADD"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5065": {
      "op": "DUP2"
    },
    "5066": {
      "op": "ADD"
    },
    "5067": {
      "op": "DUP8"
    },
    "5068": {
      "op": "SGT"
    },
    "5069": {
      "op": "PUSH3",
      "value": "0x13D6"
    },
    "5073": {
      "op": "JUMPI"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5076": {
      "op": "DUP1"
    },
    "5077": {
      "op": "REVERT"
    },
    "5078": {
      "op": "JUMPDEST"
    },
    "5079": {
      "op": "PUSH3",
      "value": "0x13E7"
    },
    "5083": {
      "op": "DUP8"
    },
    "5084": {
      "op": "DUP3"
    },
    "5085": {
      "op": "CALLDATALOAD"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5088": {
      "op": "DUP5"
    },
    "5089": {
      "op": "ADD"
    },
    "5090": {
      "op": "PUSH3",
      "value": "0x1214"
    },
    "5094": {
      "jump": "i",
      "op": "JUMP"
    },
    "5095": {
      "op": "JUMPDEST"
    },
    "5096": {
      "op": "SWAP2"
    },
    "5097": {
      "op": "POP"
    },
    "5098": {
      "op": "POP"
    },
    "5099": {
      "op": "SWAP3"
    },
    "5100": {
      "op": "SWAP6"
    },
    "5101": {
      "op": "SWAP2"
    },
    "5102": {
      "op": "SWAP5"
    },
    "5103": {
      "op": "POP"
    },
    "5104": {
      "op": "SWAP3"
    },
    "5105": {
      "op": "POP"
    },
    "5106": {
      "jump": "o",
      "op": "JUMP"
    },
    "5107": {
      "op": "JUMPDEST"
    },
    "5108": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5115": {
      "op": "SHL"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5118": {
      "op": "MSTORE"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5123": {
      "op": "MSTORE"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5128": {
      "op": "REVERT"
    },
    "5129": {
      "op": "JUMPDEST"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5132": {
      "op": "DUP2"
    },
    "5133": {
      "op": "LT"
    },
    "5134": {
      "op": "PUSH3",
      "value": "0x1428"
    },
    "5138": {
      "op": "JUMPI"
    },
    "5139": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5146": {
      "op": "SHL"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5149": {
      "op": "MSTORE"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5154": {
      "op": "MSTORE"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5159": {
      "op": "REVERT"
    },
    "5160": {
      "op": "JUMPDEST"
    },
    "5161": {
      "op": "SWAP1"
    },
    "5162": {
      "op": "MSTORE"
    },
    "5163": {
      "jump": "o",
      "op": "JUMP"
    },
    "5164": {
      "op": "JUMPDEST"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5167": {
      "op": "DUP2"
    },
    "5168": {
      "op": "ADD"
    },
    "5169": {
      "op": "PUSH3",
      "value": "0x143C"
    },
    "5173": {
      "op": "DUP3"
    },
    "5174": {
      "op": "DUP5"
    },
    "5175": {
      "op": "PUSH3",
      "value": "0x1409"
    },
    "5179": {
      "jump": "i",
      "op": "JUMP"
    },
    "5180": {
      "op": "JUMPDEST"
    },
    "5181": {
      "op": "SWAP3"
    },
    "5182": {
      "op": "SWAP2"
    },
    "5183": {
      "op": "POP"
    },
    "5184": {
      "op": "POP"
    },
    "5185": {
      "jump": "o",
      "op": "JUMP"
    },
    "5186": {
      "op": "JUMPDEST"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5189": {
      "op": "JUMPDEST"
    },
    "5190": {
      "op": "DUP4"
    },
    "5191": {
      "op": "DUP2"
    },
    "5192": {
      "op": "LT"
    },
    "5193": {
      "op": "ISZERO"
    },
    "5194": {
      "op": "PUSH3",
      "value": "0x145F"
    },
    "5198": {
      "op": "JUMPI"
    },
    "5199": {
      "op": "DUP2"
    },
    "5200": {
      "op": "DUP2"
    },
    "5201": {
      "op": "ADD"
    },
    "5202": {
      "op": "MLOAD"
    },
    "5203": {
      "op": "DUP4"
    },
    "5204": {
      "op": "DUP3"
    },
    "5205": {
      "op": "ADD"
    },
    "5206": {
      "op": "MSTORE"
    },
    "5207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5209": {
      "op": "ADD"
    },
    "5210": {
      "op": "PUSH3",
      "value": "0x1445"
    },
    "5214": {
      "op": "JUMP"
    },
    "5215": {
      "op": "JUMPDEST"
    },
    "5216": {
      "op": "DUP4"
    },
    "5217": {
      "op": "DUP2"
    },
    "5218": {
      "op": "GT"
    },
    "5219": {
      "op": "ISZERO"
    },
    "5220": {
      "op": "PUSH3",
      "value": "0x146F"
    },
    "5224": {
      "op": "JUMPI"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5227": {
      "op": "DUP5"
    },
    "5228": {
      "op": "DUP5"
    },
    "5229": {
      "op": "ADD"
    },
    "5230": {
      "op": "MSTORE"
    },
    "5231": {
      "op": "JUMPDEST"
    },
    "5232": {
      "op": "POP"
    },
    "5233": {
      "op": "POP"
    },
    "5234": {
      "op": "POP"
    },
    "5235": {
      "op": "POP"
    },
    "5236": {
      "jump": "o",
      "op": "JUMP"
    },
    "5237": {
      "op": "JUMPDEST"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5240": {
      "op": "DUP2"
    },
    "5241": {
      "op": "MLOAD"
    },
    "5242": {
      "op": "DUP1"
    },
    "5243": {
      "op": "DUP5"
    },
    "5244": {
      "op": "MSTORE"
    },
    "5245": {
      "op": "PUSH3",
      "value": "0x148F"
    },
    "5249": {
      "op": "DUP2"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5252": {
      "op": "DUP7"
    },
    "5253": {
      "op": "ADD"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5256": {
      "op": "DUP7"
    },
    "5257": {
      "op": "ADD"
    },
    "5258": {
      "op": "PUSH3",
      "value": "0x1442"
    },
    "5262": {
      "jump": "i",
      "op": "JUMP"
    },
    "5263": {
      "op": "JUMPDEST"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5266": {
      "op": "ADD"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5269": {
      "op": "NOT"
    },
    "5270": {
      "op": "AND"
    },
    "5271": {
      "op": "SWAP3"
    },
    "5272": {
      "op": "SWAP1"
    },
    "5273": {
      "op": "SWAP3"
    },
    "5274": {
      "op": "ADD"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5277": {
      "op": "ADD"
    },
    "5278": {
      "op": "SWAP3"
    },
    "5279": {
      "op": "SWAP2"
    },
    "5280": {
      "op": "POP"
    },
    "5281": {
      "op": "POP"
    },
    "5282": {
      "jump": "o",
      "op": "JUMP"
    },
    "5283": {
      "op": "JUMPDEST"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5286": {
      "op": "DUP2"
    },
    "5287": {
      "op": "MSTORE"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5290": {
      "op": "PUSH3",
      "value": "0x12B4"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5296": {
      "op": "DUP4"
    },
    "5297": {
      "op": "ADD"
    },
    "5298": {
      "op": "DUP5"
    },
    "5299": {
      "op": "PUSH3",
      "value": "0x1475"
    },
    "5303": {
      "jump": "i",
      "op": "JUMP"
    },
    "5304": {
      "op": "JUMPDEST"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5307": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5310": {
      "op": "DUP12"
    },
    "5311": {
      "op": "DUP4"
    },
    "5312": {
      "op": "MSTORE"
    },
    "5313": {
      "op": "DUP11"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5316": {
      "op": "DUP5"
    },
    "5317": {
      "op": "ADD"
    },
    "5318": {
      "op": "MSTORE"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5325": {
      "op": "SHL"
    },
    "5326": {
      "op": "SUB"
    },
    "5327": {
      "op": "DUP1"
    },
    "5328": {
      "op": "DUP12"
    },
    "5329": {
      "op": "AND"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5332": {
      "op": "DUP6"
    },
    "5333": {
      "op": "ADD"
    },
    "5334": {
      "op": "MSTORE"
    },
    "5335": {
      "op": "DUP1"
    },
    "5336": {
      "op": "DUP11"
    },
    "5337": {
      "op": "AND"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5340": {
      "op": "DUP6"
    },
    "5341": {
      "op": "ADD"
    },
    "5342": {
      "op": "MSTORE"
    },
    "5343": {
      "op": "DUP2"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5346": {
      "op": "DUP6"
    },
    "5347": {
      "op": "ADD"
    },
    "5348": {
      "op": "MSTORE"
    },
    "5349": {
      "op": "PUSH3",
      "value": "0x14F2"
    },
    "5353": {
      "op": "DUP3"
    },
    "5354": {
      "op": "DUP6"
    },
    "5355": {
      "op": "ADD"
    },
    "5356": {
      "op": "DUP11"
    },
    "5357": {
      "op": "PUSH3",
      "value": "0x1475"
    },
    "5361": {
      "jump": "i",
      "op": "JUMP"
    },
    "5362": {
      "op": "JUMPDEST"
    },
    "5363": {
      "op": "SWAP2"
    },
    "5364": {
      "op": "POP"
    },
    "5365": {
      "op": "DUP4"
    },
    "5366": {
      "op": "DUP3"
    },
    "5367": {
      "op": "SUB"
    },
    "5368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5370": {
      "op": "DUP6"
    },
    "5371": {
      "op": "ADD"
    },
    "5372": {
      "op": "MSTORE"
    },
    "5373": {
      "op": "PUSH3",
      "value": "0x1508"
    },
    "5377": {
      "op": "DUP3"
    },
    "5378": {
      "op": "DUP10"
    },
    "5379": {
      "op": "PUSH3",
      "value": "0x1475"
    },
    "5383": {
      "jump": "i",
      "op": "JUMP"
    },
    "5384": {
      "op": "JUMPDEST"
    },
    "5385": {
      "op": "SWAP3"
    },
    "5386": {
      "op": "POP"
    },
    "5387": {
      "op": "DUP1"
    },
    "5388": {
      "op": "DUP8"
    },
    "5389": {
      "op": "AND"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5392": {
      "op": "DUP6"
    },
    "5393": {
      "op": "ADD"
    },
    "5394": {
      "op": "MSTORE"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "op": "DUP4"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5400": {
      "op": "DUP4"
    },
    "5401": {
      "op": "ADD"
    },
    "5402": {
      "op": "MSTORE"
    },
    "5403": {
      "op": "PUSH3",
      "value": "0x152A"
    },
    "5407": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5410": {
      "op": "DUP4"
    },
    "5411": {
      "op": "ADD"
    },
    "5412": {
      "op": "DUP5"
    },
    "5413": {
      "op": "PUSH3",
      "value": "0x1409"
    },
    "5417": {
      "jump": "i",
      "op": "JUMP"
    },
    "5418": {
      "op": "JUMPDEST"
    },
    "5419": {
      "op": "SWAP11"
    },
    "5420": {
      "op": "SWAP10"
    },
    "5421": {
      "op": "POP"
    },
    "5422": {
      "op": "POP"
    },
    "5423": {
      "op": "POP"
    },
    "5424": {
      "op": "POP"
    },
    "5425": {
      "op": "POP"
    },
    "5426": {
      "op": "POP"
    },
    "5427": {
      "op": "POP"
    },
    "5428": {
      "op": "POP"
    },
    "5429": {
      "op": "POP"
    },
    "5430": {
      "op": "POP"
    },
    "5431": {
      "jump": "o",
      "op": "JUMP"
    },
    "5432": {
      "op": "JUMPDEST"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5435": {
      "op": "DUP2"
    },
    "5436": {
      "op": "MSTORE"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5439": {
      "op": "PUSH3",
      "value": "0x154D"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5445": {
      "op": "DUP4"
    },
    "5446": {
      "op": "ADD"
    },
    "5447": {
      "op": "DUP8"
    },
    "5448": {
      "op": "PUSH3",
      "value": "0x1475"
    },
    "5452": {
      "jump": "i",
      "op": "JUMP"
    },
    "5453": {
      "op": "JUMPDEST"
    },
    "5454": {
      "op": "DUP3"
    },
    "5455": {
      "op": "DUP2"
    },
    "5456": {
      "op": "SUB"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5459": {
      "op": "DUP5"
    },
    "5460": {
      "op": "ADD"
    },
    "5461": {
      "op": "MSTORE"
    },
    "5462": {
      "op": "PUSH3",
      "value": "0x1561"
    },
    "5466": {
      "op": "DUP2"
    },
    "5467": {
      "op": "DUP8"
    },
    "5468": {
      "op": "PUSH3",
      "value": "0x1475"
    },
    "5472": {
      "jump": "i",
      "op": "JUMP"
    },
    "5473": {
      "op": "JUMPDEST"
    },
    "5474": {
      "op": "SWAP2"
    },
    "5475": {
      "op": "POP"
    },
    "5476": {
      "op": "POP"
    },
    "5477": {
      "op": "DUP4"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5480": {
      "op": "DUP4"
    },
    "5481": {
      "op": "ADD"
    },
    "5482": {
      "op": "MSTORE"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5489": {
      "op": "SHL"
    },
    "5490": {
      "op": "SUB"
    },
    "5491": {
      "op": "DUP4"
    },
    "5492": {
      "op": "AND"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5495": {
      "op": "DUP4"
    },
    "5496": {
      "op": "ADD"
    },
    "5497": {
      "op": "MSTORE"
    },
    "5498": {
      "op": "SWAP6"
    },
    "5499": {
      "op": "SWAP5"
    },
    "5500": {
      "op": "POP"
    },
    "5501": {
      "op": "POP"
    },
    "5502": {
      "op": "POP"
    },
    "5503": {
      "op": "POP"
    },
    "5504": {
      "op": "POP"
    },
    "5505": {
      "jump": "o",
      "op": "JUMP"
    },
    "5506": {
      "op": "JUMPDEST"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5509": {
      "op": "DUP3"
    },
    "5510": {
      "op": "MLOAD"
    },
    "5511": {
      "op": "PUSH3",
      "value": "0x1596"
    },
    "5515": {
      "op": "DUP2"
    },
    "5516": {
      "op": "DUP5"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5519": {
      "op": "DUP8"
    },
    "5520": {
      "op": "ADD"
    },
    "5521": {
      "op": "PUSH3",
      "value": "0x1442"
    },
    "5525": {
      "jump": "i",
      "op": "JUMP"
    },
    "5526": {
      "op": "JUMPDEST"
    },
    "5527": {
      "op": "SWAP2"
    },
    "5528": {
      "op": "SWAP1"
    },
    "5529": {
      "op": "SWAP2"
    },
    "5530": {
      "op": "ADD"
    },
    "5531": {
      "op": "SWAP3"
    },
    "5532": {
      "op": "SWAP2"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "op": "POP"
    },
    "5535": {
      "jump": "o",
      "op": "JUMP"
    },
    "5536": {
      "op": "JUMPDEST"
    },
    "5537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5541": {
      "op": "DUP3"
    },
    "5542": {
      "op": "DUP5"
    },
    "5543": {
      "op": "SUB"
    },
    "5544": {
      "op": "SLT"
    },
    "5545": {
      "op": "ISZERO"
    },
    "5546": {
      "op": "PUSH3",
      "value": "0x15B3"
    },
    "5550": {
      "op": "JUMPI"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5553": {
      "op": "DUP1"
    },
    "5554": {
      "op": "REVERT"
    },
    "5555": {
      "op": "JUMPDEST"
    },
    "5556": {
      "op": "POP"
    },
    "5557": {
      "op": "MLOAD"
    },
    "5558": {
      "op": "SWAP2"
    },
    "5559": {
      "op": "SWAP1"
    },
    "5560": {
      "op": "POP"
    },
    "5561": {
      "jump": "o",
      "op": "JUMP"
    },
    "5562": {
      "op": "JUMPDEST"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5567": {
      "op": "DUP3"
    },
    "5568": {
      "op": "DUP5"
    },
    "5569": {
      "op": "SUB"
    },
    "5570": {
      "op": "SLT"
    },
    "5571": {
      "op": "ISZERO"
    },
    "5572": {
      "op": "PUSH3",
      "value": "0x15CD"
    },
    "5576": {
      "op": "JUMPI"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5579": {
      "op": "DUP1"
    },
    "5580": {
      "op": "REVERT"
    },
    "5581": {
      "op": "JUMPDEST"
    },
    "5582": {
      "op": "DUP2"
    },
    "5583": {
      "op": "MLOAD"
    },
    "5584": {
      "op": "DUP1"
    },
    "5585": {
      "op": "ISZERO"
    },
    "5586": {
      "op": "ISZERO"
    },
    "5587": {
      "op": "DUP2"
    },
    "5588": {
      "op": "EQ"
    },
    "5589": {
      "op": "PUSH3",
      "value": "0x12B4"
    },
    "5593": {
      "op": "JUMPI"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5596": {
      "op": "DUP1"
    },
    "5597": {
      "op": "REVERT"
    },
    "5598": {
      "op": "JUMPDEST"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5601": {
      "op": "DUP2"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5604": {
      "op": "NOT"
    },
    "5605": {
      "op": "DIV"
    },
    "5606": {
      "op": "DUP4"
    },
    "5607": {
      "op": "GT"
    },
    "5608": {
      "op": "DUP3"
    },
    "5609": {
      "op": "ISZERO"
    },
    "5610": {
      "op": "ISZERO"
    },
    "5611": {
      "op": "AND"
    },
    "5612": {
      "op": "ISZERO"
    },
    "5613": {
      "op": "PUSH3",
      "value": "0x1607"
    },
    "5617": {
      "op": "JUMPI"
    },
    "5618": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5625": {
      "op": "SHL"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5628": {
      "op": "MSTORE"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5633": {
      "op": "MSTORE"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5638": {
      "op": "REVERT"
    },
    "5639": {
      "op": "JUMPDEST"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "op": "MUL"
    },
    "5642": {
      "op": "SWAP1"
    },
    "5643": {
      "jump": "o",
      "op": "JUMP"
    },
    "5644": {
      "op": "JUMPDEST"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5647": {
      "op": "DUP3"
    },
    "5648": {
      "op": "PUSH3",
      "value": "0x162A"
    },
    "5652": {
      "op": "JUMPI"
    },
    "5653": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5660": {
      "op": "SHL"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5663": {
      "op": "MSTORE"
    },
    "5664": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5668": {
      "op": "MSTORE"
    },
    "5669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5673": {
      "op": "REVERT"
    },
    "5674": {
      "op": "JUMPDEST"
    },
    "5675": {
      "op": "POP"
    },
    "5676": {
      "op": "DIV"
    },
    "5677": {
      "op": "SWAP1"
    },
    "5678": {
      "jump": "o",
      "op": "JUMP"
    },
    "5679": {
      "op": "JUMPDEST"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5682": {
      "op": "DUP2"
    },
    "5683": {
      "op": "DUP2"
    },
    "5684": {
      "op": "SHR"
    },
    "5685": {
      "op": "SWAP1"
    },
    "5686": {
      "op": "DUP3"
    },
    "5687": {
      "op": "AND"
    },
    "5688": {
      "op": "DUP1"
    },
    "5689": {
      "op": "PUSH3",
      "value": "0x1644"
    },
    "5693": {
      "op": "JUMPI"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5696": {
      "op": "DUP3"
    },
    "5697": {
      "op": "AND"
    },
    "5698": {
      "op": "SWAP2"
    },
    "5699": {
      "op": "POP"
    },
    "5700": {
      "op": "JUMPDEST"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5703": {
      "op": "DUP3"
    },
    "5704": {
      "op": "LT"
    },
    "5705": {
      "op": "DUP2"
    },
    "5706": {
      "op": "EQ"
    },
    "5707": {
      "op": "ISZERO"
    },
    "5708": {
      "op": "PUSH3",
      "value": "0xB1F"
    },
    "5712": {
      "op": "JUMPI"
    },
    "5713": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5718": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5720": {
      "op": "SHL"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5723": {
      "op": "MSTORE"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5728": {
      "op": "MSTORE"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5733": {
      "op": "REVERT"
    }
  },
  "sha1": "190a2b0eed7f29d3edd713457adccfa377660d73",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\nimport \"./ERC20Factory.sol\";\n\n/// @title NFT Fractionalizer with Buyout Functionality\n/// @author Web3Wannabe\n/// @notice NFTs can be sent to the contract with a specified buyout price. The sender receives the total supply of a newly created ERC20 token.\ncontract FractionalizeNFT is IERC721Receiver {\n    using Counters for Counters.Counter;\n    Counters.Counter private _fracNFTCount;\n\n    mapping(uint256 => FractionalizedNFT) public fracNFTs; // A mapping of all fractionalized NFTs.\n\n    struct FractionalizedNFT {\n        uint256 fracNFTId;\n        uint256 nftTokenId;\n        address erc721Address;\n        address erc20Address;\n        string erc20Symbol;\n        string erc20Name;\n        address payable originalOwner;\n        uint256 buyoutPrice;\n        State state;\n    }\n\n    enum State {\n        Fractionalized,\n        Redeemed,\n        BoughtOut\n    }\n\n    constructor() {}\n\n    /// @notice Emitted when ether is sent to the contract.\n    /// @param sender The sender of the transaction/ether.\n    /// @param value The amount of ether sent.\n    event Received(address indexed sender, uint256 indexed value);\n\n    /// @notice Emitted when an NFT is transferred to the FractionalizeNFT contract.\n    /// @param sender The address that sent the NFT.\n    event NftReceived(address indexed sender);\n\n    /// @notice Emitted when a user successfully fractionalizes an NFT and receives the total supply of the newly created ERC20 token.\n    /// @param sender The address that sent/fractionalized the NFT (i.e., the address that called fractionalize()).\n    /// @param fracNFTId The ID of the newly fractionalized NFT.\n    /// @param erc20Name The name of the newly created ERC20 token.\n    /// @param erc20Address The contract address of the newly created ERC20 token.\n    event Fractionalized(\n        address indexed sender,\n        uint256 indexed fracNFTId,\n        string indexed erc20Name,\n        address erc20Address\n    );\n\n    /// @notice Emitted when a user successfully redeems an NFT in exchange for the total ERC20 supply.\n    /// @param sender The address that redeemed the NFT (i.e., the address that called redeem()).\n    /// @param fracNFTId The index of the fractionalized NFT that was redeemed.\n    event Redeemed(address indexed sender, uint256 indexed fracNFTId);\n\n    /// @notice Emitted when a user successfully claims a payout following the buyout of an NFT from the FractionalizeNFT contract.\n    /// @param sender The address that the user held ERC20 tokens for (i.e., the address that called claim()).\n    /// @param fracNFTId The index of the fractionalized NFT that was bought.\n    event Claimed(address indexed sender, uint256 indexed fracNFTId);\n\n    /// @notice Emitted when a user successfully buys an NFT from the FractionalizeNFT contract.\n    /// @param sender The address that bought the NFT (i.e., the address that called buyout()).\n    /// @param fracNFTId The index of the fractionalized NFT that was bought.\n    event BoughtOut(address indexed sender, uint256 indexed fracNFTId);\n\n    modifier isLegalFracNftId(uint256 fracNFTId) {\n        require(\n            fracNFTId < _fracNFTCount.current(),\n            \"fracNFTId does not exist in fracNFTs.\"\n        );\n        _;\n    }\n\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    fallback() external payable {\n        revert();\n    }\n\n    /// @notice A getter function to get the current number of fractionalized NFT entries in the contract.\n    /// @return The number of fractionalized NFT entries.\n    function getFracNftCount() public view returns (uint256) {\n        return _fracNFTCount.current();\n    }\n\n    /// @notice A getter function for the contract address of a fractionalized NFT's ERC20 token.\n    /// @param fracNFTId The ID of the fractionalized NFT.\n    /// @return The ERC20 contract address.\n    function getERC20Address(uint256 fracNFTId)\n        public\n        view\n        isLegalFracNftId(fracNFTId)\n        returns (address)\n    {\n        return fracNFTs[fracNFTId].erc20Address;\n    }\n\n    /// @notice A getter function for the symbol of a fractionalized NFT's ERC20 token.\n    /// @param fracNFTId The ID of the fractionalized NFT.\n    /// @return The ERC20's symobl.\n    function getERC20Symbol(uint256 fracNFTId)\n        public\n        view\n        isLegalFracNftId(fracNFTId)\n        returns (string memory)\n    {\n        return fracNFTs[fracNFTId].erc20Symbol;\n    }\n\n    /// @notice A getter function for the state of a fractionalized NFT.\n    /// @param fracNFTId The ID of the fractionalized NFT.\n    /// @return The fractionalized NFT's state (Fractionalized, Redeemed or BoughtOut).\n    function getState(uint256 fracNFTId)\n        public\n        view\n        isLegalFracNftId(fracNFTId)\n        returns (State)\n    {\n        return fracNFTs[fracNFTId].state;\n    }\n\n    /// @notice Create a fractionalized NFT: Lock the NFT in the contract; create a new ERC20 token, as specified; and transfer the total supply of the token to the sender.\n    /// @param nftContractAddress The address of the NFT that is to be fractionalized.\n    /// @param nftTokenId The token ID of the NFT that is to be fractionalized.\n    /// @param erc20Name The name of the newly created ERC20 token.\n    /// @param erc20Symbol The symbol of the newly created ERC20 token.\n    /// @param erc20Supply The total supply of the newly created ERC20 token.\n    /// @param buyoutPrice The price (in Wei) for which the fractionalized NFT can be be bought for from the contract.\n    /// @dev Note, the NFT must be approved for transfer by the FractionalizeNFT contract.\n    /// @return The ID of the newly created fractionalized NFT.\n    function fractionalizeNft(\n        address nftContractAddress,\n        uint256 nftTokenId,\n        string memory erc20Name,\n        string memory erc20Symbol,\n        uint256 erc20Supply,\n        uint256 buyoutPrice\n    ) public returns (uint256) {\n        ERC20 erc20 = (new ERC20Factory)(\n            erc20Name,\n            erc20Symbol,\n            erc20Supply,\n            msg.sender\n        );\n        uint256 fracNFTId = _fracNFTCount.current();\n        fracNFTs[_fracNFTCount.current()] = FractionalizedNFT({\n            fracNFTId: fracNFTId,\n            nftTokenId: nftTokenId,\n            erc721Address: nftContractAddress,\n            erc20Address: address(erc20),\n            erc20Symbol: erc20Symbol,\n            erc20Name: erc20Name,\n            originalOwner: payable(msg.sender),\n            buyoutPrice: buyoutPrice,\n            state: State.Fractionalized\n        });\n        _fracNFTCount.increment();\n        ERC721 nft = ERC721(nftContractAddress);\n        nft.safeTransferFrom(msg.sender, address(this), nftTokenId);\n        emit Fractionalized(msg.sender, fracNFTId, erc20Symbol, address(erc20));\n        return fracNFTId;\n    }\n\n    /// @notice A holder of the entire ERC20 supply can call redeem in order to receive the underlying NFT from the contract. The ERC20 tokens get transferred to the contract address.\n    /// @param fracNFTId The ID of the fractionalized NFT to redem.\n    /// @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling redeem().\n    function redeem(uint256 fracNFTId) public {\n        ERC20 erc20 = ERC20(fracNFTs[fracNFTId].erc20Address);\n        uint256 redeemerBalance = erc20.balanceOf(msg.sender);\n        uint256 erc20Supply = erc20.totalSupply();\n        require(\n            redeemerBalance == erc20Supply,\n            \"Redeemeer does not hold the entire supply.\"\n        );\n        fracNFTs[fracNFTId].state = State.Redeemed;\n        erc20.transferFrom(msg.sender, address(this), redeemerBalance);\n        ERC721 erc721 = ERC721(fracNFTs[fracNFTId].erc721Address);\n        erc721.safeTransferFrom(\n            address(this),\n            msg.sender,\n            fracNFTs[fracNFTId].nftTokenId\n        );\n        emit Redeemed(msg.sender, fracNFTId);\n    }\n\n    /// @notice Allows a holder of the ERC20 tokens to claim his share of the sale proceedings (in ether) following a buyout of the fractionalized NFT.\n    /// @param fracNFTId The ID of the fractionalized NFT to claim a payout for.\n    /// @dev Note, the ERC20 must be approved for transfer by the FractionalizeNFT contract before calling claim().\n    function claim(uint256 fracNFTId) public {\n        require(\n            fracNFTs[fracNFTId].state == State.BoughtOut,\n            \"Fractionalized NFT has not been bought out.\"\n        );\n        ERC20 erc20 = ERC20(fracNFTs[fracNFTId].erc20Address);\n        uint256 claimerBalance = erc20.balanceOf(msg.sender);\n        require(claimerBalance > 0, \"Claimer does not hold any tokens.\");\n        erc20.transferFrom(msg.sender, address(this), claimerBalance);\n        uint256 erc20Supply = erc20.totalSupply();\n        uint256 claimAmountWei = (fracNFTs[fracNFTId].buyoutPrice *\n            claimerBalance) / erc20Supply;\n        payable(msg.sender).transfer(claimAmountWei);\n        emit Claimed(msg.sender, fracNFTId);\n    }\n\n    /// @notice Allows an account to buy the NFT from the contract for the specified buyout price.\n    /// @param fracNFTId The ID of the fractionalized NFT to buy.\n    function buyout(uint256 fracNFTId) public payable {\n        // A buyer can buy the NFT as specified by the buyout price by sending ETH to the contract.\n        require(\n            msg.value >= fracNFTs[fracNFTId].buyoutPrice,\n            \"Sender sent less than the buyout price.\"\n        );\n        fracNFTs[fracNFTId].state = State.BoughtOut;\n        ERC721 erc721 = ERC721(fracNFTs[fracNFTId].erc721Address);\n        erc721.safeTransferFrom(\n            address(this),\n            msg.sender,\n            fracNFTs[fracNFTId].nftTokenId\n        );\n        emit BoughtOut(msg.sender, fracNFTId);\n    }\n\n    /// @dev Required to use safeTransferFrom() from OpenZeppelin's ERC721 contract (when transferring NFTs to this contract).\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 nftTokenId,\n        bytes memory data\n    ) public returns (bytes4) {\n        emit NftReceived(msg.sender);\n        return\n            bytes4(\n                keccak256(\"onERC721Received(address,address,uint256,bytes)\")\n            );\n    }\n}\n",
  "sourceMap": "479:9995:14:-:0;;;1098:16;;;;;;;;;;479:9995;;;;;;",
  "sourcePath": "contracts/FractionalizeNFT.sol",
  "type": "contract"
}