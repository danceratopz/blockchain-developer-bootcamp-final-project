{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "11": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "3": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
    "4": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721.sol",
    "5": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
    "6": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "7": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
    "8": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "9": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol"
  },
  "ast": {
    "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        2449
      ],
      "Context": [
        1991
      ],
      "ERC165": [
        2676
      ],
      "ERC721": [
        1839
      ],
      "IERC165": [
        2688
      ],
      "IERC721": [
        2107
      ],
      "IERC721Metadata": [
        2152
      ],
      "IERC721Receiver": [
        2125
      ],
      "Strings": [
        2652
      ]
    },
    "id": 1840,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1025,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 1026,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1840,
        "sourceUnit": 2108,
        "src": "58:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 1027,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1840,
        "sourceUnit": 2126,
        "src": "82:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 1028,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1840,
        "sourceUnit": 2153,
        "src": "114:42:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 1029,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1840,
        "sourceUnit": 2450,
        "src": "157:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 1030,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1840,
        "sourceUnit": 1992,
        "src": "191:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 1031,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1840,
        "sourceUnit": 2653,
        "src": "225:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 1032,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1840,
        "sourceUnit": 2677,
        "src": "259:46:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1034,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1991,
              "src": "573:7:3"
            },
            "id": 1035,
            "nodeType": "InheritanceSpecifier",
            "src": "573:7:3"
          },
          {
            "baseName": {
              "id": 1036,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2676,
              "src": "582:6:3"
            },
            "id": 1037,
            "nodeType": "InheritanceSpecifier",
            "src": "582:6:3"
          },
          {
            "baseName": {
              "id": 1038,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2107,
              "src": "590:7:3"
            },
            "id": 1039,
            "nodeType": "InheritanceSpecifier",
            "src": "590:7:3"
          },
          {
            "baseName": {
              "id": 1040,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2152,
              "src": "599:15:3"
            },
            "id": 1041,
            "nodeType": "InheritanceSpecifier",
            "src": "599:15:3"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1033,
          "nodeType": "StructuredDocumentation",
          "src": "307:246:3",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 1839,
        "linearizedBaseContracts": [
          1839,
          2152,
          2107,
          2676,
          2688,
          1991
        ],
        "name": "ERC721",
        "nameLocation": "563:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1044,
            "libraryName": {
              "id": 1042,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2449,
              "src": "627:7:3"
            },
            "nodeType": "UsingForDirective",
            "src": "621:26:3",
            "typeName": {
              "id": 1043,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "639:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1047,
            "libraryName": {
              "id": 1045,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2652,
              "src": "658:7:3"
            },
            "nodeType": "UsingForDirective",
            "src": "652:26:3",
            "typeName": {
              "id": 1046,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "670:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1049,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "717:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 1839,
            "src": "702:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1048,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "702:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1051,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "764:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 1839,
            "src": "749:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1050,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "749:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1055,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "860:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 1839,
            "src": "824:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1054,
              "keyType": {
                "id": 1052,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "832:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "824:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1053,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "843:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1059,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "954:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 1839,
            "src": "918:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1058,
              "keyType": {
                "id": 1056,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "926:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "918:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1057,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "937:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1063,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1055:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 1839,
            "src": "1019:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1062,
              "keyType": {
                "id": 1060,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1027:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1019:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1061,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1038:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1069,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1178:18:3",
            "nodeType": "VariableDeclaration",
            "scope": 1839,
            "src": "1125:71:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 1068,
              "keyType": {
                "id": 1064,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1133:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1125:44:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 1067,
                "keyType": {
                  "id": 1065,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1152:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1144:24:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1066,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1163:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1085,
              "nodeType": "Block",
              "src": "1372:57:3",
              "statements": [
                {
                  "expression": {
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1077,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "1382:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1078,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1072,
                      "src": "1390:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1382:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1080,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:13:3"
                },
                {
                  "expression": {
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1081,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1051,
                      "src": "1405:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1082,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1074,
                      "src": "1415:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1405:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:17:3"
                }
              ]
            },
            "documentation": {
              "id": 1070,
              "nodeType": "StructuredDocumentation",
              "src": "1203:108:3",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 1086,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1342:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "1328:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1363:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "1349:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:44:3"
            },
            "returnParameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1372:0:3"
            },
            "scope": 1839,
            "src": "1316:113:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2675,
              2687
            ],
            "body": {
              "id": 1116,
              "nodeType": "Block",
              "src": "1604:192:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1097,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1089,
                          "src": "1633:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1099,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2107,
                                "src": "1653:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2107_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2107_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 1098,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1648:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1648:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$2107",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1648:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1633:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1103,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1089,
                          "src": "1689:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1105,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2152,
                                "src": "1709:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2152_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2152_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 1104,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1704:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1704:21:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$2152",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1704:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1689:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1633:104:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1112,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1089,
                          "src": "1777:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 1110,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1753:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$1839_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2675,
                        "src": "1753:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1753:36:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1633:156:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1096,
                  "id": 1115,
                  "nodeType": "Return",
                  "src": "1614:175:3"
                }
              ]
            },
            "documentation": {
              "id": 1087,
              "nodeType": "StructuredDocumentation",
              "src": "1435:56:3",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 1117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1505:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1093,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1091,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2676,
                  "src": "1572:6:3"
                },
                {
                  "id": 1092,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2688,
                  "src": "1580:7:3"
                }
              ],
              "src": "1563:25:3"
            },
            "parameters": {
              "id": 1090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1530:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "1523:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1522:20:3"
            },
            "returnParameters": {
              "id": 1096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1095,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "1598:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1094,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:6:3"
            },
            "scope": 1839,
            "src": "1496:300:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2032
            ],
            "body": {
              "id": 1140,
              "nodeType": "Block",
              "src": "1936:124:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1127,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1120,
                          "src": "1954:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1971:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1963:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1128,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1963:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1963:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1954:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 1133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1975:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 1126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1946:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1946:74:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1135,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:74:3"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1136,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "2037:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1138,
                    "indexExpression": {
                      "id": 1137,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "2047:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2037:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1125,
                  "id": 1139,
                  "nodeType": "Return",
                  "src": "2030:23:3"
                }
              ]
            },
            "documentation": {
              "id": 1118,
              "nodeType": "StructuredDocumentation",
              "src": "1802:48:3",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1864:9:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1122,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1909:8:3"
            },
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1882:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1141,
                  "src": "1874:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1873:15:3"
            },
            "returnParameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1141,
                  "src": "1927:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1926:9:3"
            },
            "scope": 1839,
            "src": "1855:205:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2040
            ],
            "body": {
              "id": 1168,
              "nodeType": "Block",
              "src": "2198:154:3",
              "statements": [
                {
                  "assignments": [
                    1151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1151,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2216:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1168,
                      "src": "2208:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1150,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2208:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1155,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1152,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1055,
                      "src": "2224:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1154,
                    "indexExpression": {
                      "id": 1153,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "2232:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2224:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2208:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1157,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1151,
                          "src": "2258:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2275:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2267:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1158,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2267:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2267:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2258:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2279:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 1156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2250:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2250:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1165,
                  "nodeType": "ExpressionStatement",
                  "src": "2250:73:3"
                },
                {
                  "expression": {
                    "id": 1166,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1151,
                    "src": "2340:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1149,
                  "id": 1167,
                  "nodeType": "Return",
                  "src": "2333:12:3"
                }
              ]
            },
            "documentation": {
              "id": 1142,
              "nodeType": "StructuredDocumentation",
              "src": "2066:46:3",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 1169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2126:7:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1146,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2171:8:3"
            },
            "parameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1144,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2142:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "2134:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:17:3"
            },
            "returnParameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "2189:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2188:9:3"
            },
            "scope": 1839,
            "src": "2117:235:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2137
            ],
            "body": {
              "id": 1178,
              "nodeType": "Block",
              "src": "2483:29:3",
              "statements": [
                {
                  "expression": {
                    "id": 1176,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1049,
                    "src": "2500:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1175,
                  "id": 1177,
                  "nodeType": "Return",
                  "src": "2493:12:3"
                }
              ]
            },
            "documentation": {
              "id": 1170,
              "nodeType": "StructuredDocumentation",
              "src": "2358:51:3",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 1179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2423:4:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1172,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2450:8:3"
            },
            "parameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2427:2:3"
            },
            "returnParameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1179,
                  "src": "2468:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2468:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2467:15:3"
            },
            "scope": 1839,
            "src": "2414:98:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2143
            ],
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "2647:31:3",
              "statements": [
                {
                  "expression": {
                    "id": 1186,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1051,
                    "src": "2664:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1185,
                  "id": 1187,
                  "nodeType": "Return",
                  "src": "2657:14:3"
                }
              ]
            },
            "documentation": {
              "id": 1180,
              "nodeType": "StructuredDocumentation",
              "src": "2518:53:3",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2585:6:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1182,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2614:8:3"
            },
            "parameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2591:2:3"
            },
            "returnParameters": {
              "id": 1185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "2632:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1183,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2632:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2631:15:3"
            },
            "scope": 1839,
            "src": "2576:102:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2151
            ],
            "body": {
              "id": 1230,
              "nodeType": "Block",
              "src": "2832:241:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1200,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "2858:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1199,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1479,
                          "src": "2850:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2850:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2868:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 1198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2842:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2842:76:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:76:3"
                },
                {
                  "assignments": [
                    1206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1206,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2943:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1230,
                      "src": "2929:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1205,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2929:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1209,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1207,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1240,
                      "src": "2953:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2953:10:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2929:34:3"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1212,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1206,
                              "src": "2986:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2980:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 1210,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2980:5:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2980:14:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2980:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3004:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2980:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3064:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2980:86:3",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1221,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1206,
                              "src": "3032:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1222,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1192,
                                  "src": "3041:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2534,
                                "src": "3041:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3041:18:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1219,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3015:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3015:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3015:45:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3008:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3008:6:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3008:53:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1197,
                  "id": 1229,
                  "nodeType": "Return",
                  "src": "2973:93:3"
                }
              ]
            },
            "documentation": {
              "id": 1190,
              "nodeType": "StructuredDocumentation",
              "src": "2684:55:3",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 1231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2753:8:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1194,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2799:8:3"
            },
            "parameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2770:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1231,
                  "src": "2762:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2761:17:3"
            },
            "returnParameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1196,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1231,
                  "src": "2817:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2816:15:3"
            },
            "scope": 1839,
            "src": "2744:329:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1239,
              "nodeType": "Block",
              "src": "3380:26:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3397:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 1236,
                  "id": 1238,
                  "nodeType": "Return",
                  "src": "3390:9:3"
                }
              ]
            },
            "documentation": {
              "id": 1232,
              "nodeType": "StructuredDocumentation",
              "src": "3079:230:3",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 1240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3323:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3331:2:3"
            },
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "3365:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3365:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3364:15:3"
            },
            "scope": 1839,
            "src": "3314:92:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2068
            ],
            "body": {
              "id": 1282,
              "nodeType": "Block",
              "src": "3533:331:3",
              "statements": [
                {
                  "assignments": [
                    1250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1250,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3551:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1282,
                      "src": "3543:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1249,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3543:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1255,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1253,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "3574:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1251,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "3559:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1839_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1169,
                      "src": "3559:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3559:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3543:39:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1257,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1243,
                          "src": "3600:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1258,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1250,
                          "src": "3606:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3600:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3613:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 1256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3592:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3592:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1262,
                  "nodeType": "ExpressionStatement",
                  "src": "3592:57:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1264,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1981,
                              "src": "3681:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3681:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1266,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "3697:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3681:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1269,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1250,
                              "src": "3723:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1270,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1981,
                                "src": "3730:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3730:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1268,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "3706:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3706:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3681:62:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3757:58:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 1263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3660:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3660:165:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "ExpressionStatement",
                  "src": "3660:165:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1278,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1243,
                        "src": "3845:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1279,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "3849:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1277,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "3836:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3836:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "3836:21:3"
                }
              ]
            },
            "documentation": {
              "id": 1241,
              "nodeType": "StructuredDocumentation",
              "src": "3412:46:3",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 1283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3472:7:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1247,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3524:8:3"
            },
            "parameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1243,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3488:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "3480:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3480:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1245,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3500:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "3492:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3479:29:3"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3533:0:3"
            },
            "scope": 1839,
            "src": "3463:401:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2076
            ],
            "body": {
              "id": 1303,
              "nodeType": "Block",
              "src": "4010:132:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1294,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "4036:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1293,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1479,
                          "src": "4028:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4028:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4046:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 1292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4020:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4020:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1298,
                  "nodeType": "ExpressionStatement",
                  "src": "4020:73:3"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1299,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1063,
                      "src": "4111:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1301,
                    "indexExpression": {
                      "id": 1300,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "4127:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4111:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1291,
                  "id": 1302,
                  "nodeType": "Return",
                  "src": "4104:31:3"
                }
              ]
            },
            "documentation": {
              "id": 1284,
              "nodeType": "StructuredDocumentation",
              "src": "3870:50:3",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 1304,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3934:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1288,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3983:8:3"
            },
            "parameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1286,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3954:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1304,
                  "src": "3946:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3945:17:3"
            },
            "returnParameters": {
              "id": 1291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1304,
                  "src": "4001:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:9:3"
            },
            "scope": 1839,
            "src": "3925:217:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2084
            ],
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "4293:206:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1314,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1307,
                          "src": "4311:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1315,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1981,
                            "src": "4323:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4323:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4311:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 1318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4337:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 1313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4303:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4303:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1320,
                  "nodeType": "ExpressionStatement",
                  "src": "4303:62:3"
                },
                {
                  "expression": {
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1321,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1069,
                          "src": "4376:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1325,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1322,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1981,
                            "src": "4395:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4395:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4376:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1326,
                      "indexExpression": {
                        "id": 1324,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1307,
                        "src": "4409:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4376:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1327,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1309,
                      "src": "4421:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4376:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "4376:53:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1331,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1981,
                          "src": "4459:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4459:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1333,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1307,
                        "src": "4473:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1334,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1309,
                        "src": "4483:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1330,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2024,
                      "src": "4444:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4444:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "EmitStatement",
                  "src": "4439:53:3"
                }
              ]
            },
            "documentation": {
              "id": 1305,
              "nodeType": "StructuredDocumentation",
              "src": "4148:56:3",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4218:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1311,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4284:8:3"
            },
            "parameters": {
              "id": 1310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1307,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4244:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "4236:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4236:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1309,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4259:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "4254:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1308,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4254:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4235:33:3"
            },
            "returnParameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4293:0:3"
            },
            "scope": 1839,
            "src": "4209:290:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2094
            ],
            "body": {
              "id": 1355,
              "nodeType": "Block",
              "src": "4668:59:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1349,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "4685:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 1351,
                      "indexExpression": {
                        "id": 1350,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "4704:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4685:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1353,
                    "indexExpression": {
                      "id": 1352,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "4711:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4685:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1348,
                  "id": 1354,
                  "nodeType": "Return",
                  "src": "4678:42:3"
                }
              ]
            },
            "documentation": {
              "id": 1339,
              "nodeType": "StructuredDocumentation",
              "src": "4505:55:3",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 1356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4574:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1345,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4644:8:3"
            },
            "parameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4599:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1356,
                  "src": "4591:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4591:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1343,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4614:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1356,
                  "src": "4606:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4606:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4590:33:3"
            },
            "returnParameters": {
              "id": 1348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1347,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1356,
                  "src": "4662:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4662:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4661:6:3"
            },
            "scope": 1839,
            "src": "4565:162:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2060
            ],
            "body": {
              "id": 1382,
              "nodeType": "Block",
              "src": "4908:211:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1369,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1981,
                              "src": "4997:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4997:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1371,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1363,
                            "src": "5011:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1368,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "4978:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4978:41:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5021:51:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4970:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4970:103:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1375,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:103:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1377,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1359,
                        "src": "5094:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1378,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "5100:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1379,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "5104:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1376,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1741,
                      "src": "5084:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5084:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1381,
                  "nodeType": "ExpressionStatement",
                  "src": "5084:28:3"
                }
              ]
            },
            "documentation": {
              "id": 1357,
              "nodeType": "StructuredDocumentation",
              "src": "4733:51:3",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 1383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4798:12:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1365,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4899:8:3"
            },
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4828:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1383,
                  "src": "4820:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4820:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1361,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4850:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1383,
                  "src": "4842:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4842:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1363,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4870:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1383,
                  "src": "4862:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4862:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4810:73:3"
            },
            "returnParameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4908:0:3"
            },
            "scope": 1839,
            "src": "4789:330:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2050
            ],
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "5308:56:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1395,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1386,
                        "src": "5335:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1396,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "5341:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1397,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1390,
                        "src": "5345:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5354:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1394,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1402,
                        1432
                      ],
                      "referencedDeclaration": 1432,
                      "src": "5318:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5318:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1400,
                  "nodeType": "ExpressionStatement",
                  "src": "5318:39:3"
                }
              ]
            },
            "documentation": {
              "id": 1384,
              "nodeType": "StructuredDocumentation",
              "src": "5125:55:3",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 1402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5194:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1392,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5299:8:3"
            },
            "parameters": {
              "id": 1391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1386,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5228:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "5220:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5220:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1388,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5250:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "5242:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5242:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1390,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5270:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "5262:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5262:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5210:73:3"
            },
            "returnParameters": {
              "id": 1393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5308:0:3"
            },
            "scope": 1839,
            "src": "5185:179:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2106
            ],
            "body": {
              "id": 1431,
              "nodeType": "Block",
              "src": "5581:169:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1417,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1981,
                              "src": "5618:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5618:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1419,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1409,
                            "src": "5632:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1416,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "5599:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5599:41:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5642:51:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5591:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5591:103:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1423,
                  "nodeType": "ExpressionStatement",
                  "src": "5591:103:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1425,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "5718:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1426,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1407,
                        "src": "5724:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1427,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1409,
                        "src": "5728:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1428,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "5737:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1424,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1461,
                      "src": "5704:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5704:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1430,
                  "nodeType": "ExpressionStatement",
                  "src": "5704:39:3"
                }
              ]
            },
            "documentation": {
              "id": 1403,
              "nodeType": "StructuredDocumentation",
              "src": "5370:55:3",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 1432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5439:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1413,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5572:8:3"
            },
            "parameters": {
              "id": 1412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5473:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "5465:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5465:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1407,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5495:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "5487:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1409,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5515:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "5507:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5507:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5545:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "5532:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5532:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5455:101:3"
            },
            "returnParameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5581:0:3"
            },
            "scope": 1839,
            "src": "5430:320:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1460,
              "nodeType": "Block",
              "src": "6753:166:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1445,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1435,
                        "src": "6773:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1446,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "6779:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1447,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "6783:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1444,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1741,
                      "src": "6763:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6763:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1449,
                  "nodeType": "ExpressionStatement",
                  "src": "6763:28:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1452,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1435,
                            "src": "6832:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1453,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1437,
                            "src": "6838:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1454,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1439,
                            "src": "6842:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1455,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1441,
                            "src": "6851:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1451,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1827,
                          "src": "6809:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6809:48:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6859:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 1450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6801:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6801:111:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "6801:111:3"
                }
              ]
            },
            "documentation": {
              "id": 1433,
              "nodeType": "StructuredDocumentation",
              "src": "5756:851:3",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 1461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6621:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6652:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "6644:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6644:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6674:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "6666:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6666:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1439,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6694:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "6686:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6686:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1441,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6724:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "6711:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6711:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6634:101:3"
            },
            "returnParameters": {
              "id": 1443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6753:0:3"
            },
            "scope": 1839,
            "src": "6612:307:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1478,
              "nodeType": "Block",
              "src": "7293:54:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1469,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "7310:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1471,
                      "indexExpression": {
                        "id": 1470,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1464,
                        "src": "7318:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7310:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7338:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7330:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1472,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7330:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7330:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7310:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1468,
                  "id": 1477,
                  "nodeType": "Return",
                  "src": "7303:37:3"
                }
              ]
            },
            "documentation": {
              "id": 1462,
              "nodeType": "StructuredDocumentation",
              "src": "6925:292:3",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 1479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7231:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1464,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7247:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1479,
                  "src": "7239:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7239:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7238:17:3"
            },
            "returnParameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1467,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1479,
                  "src": "7287:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1466,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7287:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7286:6:3"
            },
            "scope": 1839,
            "src": "7222:125:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1519,
              "nodeType": "Block",
              "src": "7604:245:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1491,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "7630:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1490,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1479,
                          "src": "7622:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7622:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7640:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 1489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7614:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7614:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1495,
                  "nodeType": "ExpressionStatement",
                  "src": "7614:73:3"
                },
                {
                  "assignments": [
                    1497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1497,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7705:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1519,
                      "src": "7697:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1496,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7697:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1502,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1500,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "7728:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1498,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "7713:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1839_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1169,
                      "src": "7713:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7713:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7697:39:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1503,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1482,
                              "src": "7754:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1504,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1497,
                              "src": "7765:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7754:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1507,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1484,
                                  "src": "7786:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1506,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1304,
                                "src": "7774:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 1508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7774:20:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1509,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1482,
                              "src": "7798:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7774:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7754:51:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1513,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1497,
                              "src": "7826:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1514,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1482,
                              "src": "7833:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1512,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "7809:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7809:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7754:87:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1517,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7753:89:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1488,
                  "id": 1518,
                  "nodeType": "Return",
                  "src": "7746:96:3"
                }
              ]
            },
            "documentation": {
              "id": 1480,
              "nodeType": "StructuredDocumentation",
              "src": "7353:147:3",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 1520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7514:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1482,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7541:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1520,
                  "src": "7533:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7533:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1484,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7558:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1520,
                  "src": "7550:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7550:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7532:34:3"
            },
            "returnParameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1520,
                  "src": "7598:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7598:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7597:6:3"
            },
            "scope": 1839,
            "src": "7505:344:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1534,
              "nodeType": "Block",
              "src": "8244:43:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1529,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "8264:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1530,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1525,
                        "src": "8268:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8277:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1528,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1535,
                        1564
                      ],
                      "referencedDeclaration": 1564,
                      "src": "8254:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8254:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1533,
                  "nodeType": "ExpressionStatement",
                  "src": "8254:26:3"
                }
              ]
            },
            "documentation": {
              "id": 1521,
              "nodeType": "StructuredDocumentation",
              "src": "7855:319:3",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 1535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8188:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1523,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8206:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "8198:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8198:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1525,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8218:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "8210:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8210:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8197:29:3"
            },
            "returnParameters": {
              "id": 1527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8244:0:3"
            },
            "scope": 1839,
            "src": "8179:108:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1563,
              "nodeType": "Block",
              "src": "8623:196:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1546,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1538,
                        "src": "8639:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1547,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1540,
                        "src": "8643:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1545,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1621,
                      "src": "8633:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8633:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1549,
                  "nodeType": "ExpressionStatement",
                  "src": "8633:18:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8713:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8705:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1552,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8705:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8705:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1556,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1538,
                            "src": "8717:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1557,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1540,
                            "src": "8721:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1558,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1542,
                            "src": "8730:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1551,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1827,
                          "src": "8682:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 1559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8682:54:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8750:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 1550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8661:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8661:151:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1562,
                  "nodeType": "ExpressionStatement",
                  "src": "8661:151:3"
                }
              ]
            },
            "documentation": {
              "id": 1536,
              "nodeType": "StructuredDocumentation",
              "src": "8293:210:3",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 1564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8517:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1538,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8544:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "8536:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8536:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1540,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8564:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "8556:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8556:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1542,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8594:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "8581:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1541,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8581:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8526:79:3"
            },
            "returnParameters": {
              "id": 1544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8623:0:3"
            },
            "scope": 1839,
            "src": "8508:311:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1620,
              "nodeType": "Block",
              "src": "9202:311:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1573,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1567,
                          "src": "9220:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9234:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9226:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1574,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9226:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9226:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9220:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9238:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 1572,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9212:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9212:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1581,
                  "nodeType": "ExpressionStatement",
                  "src": "9212:61:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9291:17:3",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1584,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1569,
                              "src": "9300:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1583,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1479,
                            "src": "9292:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9292:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9310:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 1582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9283:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9283:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1589,
                  "nodeType": "ExpressionStatement",
                  "src": "9283:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9381:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9373:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1591,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9373:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9373:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1595,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1567,
                        "src": "9385:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1596,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1569,
                        "src": "9389:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1590,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1838,
                      "src": "9352:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9352:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1598,
                  "nodeType": "ExpressionStatement",
                  "src": "9352:45:3"
                },
                {
                  "expression": {
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1599,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "9408:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1601,
                      "indexExpression": {
                        "id": 1600,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1567,
                        "src": "9418:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9408:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9425:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9408:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1604,
                  "nodeType": "ExpressionStatement",
                  "src": "9408:18:3"
                },
                {
                  "expression": {
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1605,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "9436:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1607,
                      "indexExpression": {
                        "id": 1606,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1569,
                        "src": "9444:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9436:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1608,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1567,
                      "src": "9455:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9436:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1610,
                  "nodeType": "ExpressionStatement",
                  "src": "9436:21:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9490:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9482:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9482:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9482:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1616,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1567,
                        "src": "9494:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1617,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1569,
                        "src": "9498:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1611,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2006,
                      "src": "9473:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9473:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1619,
                  "nodeType": "EmitStatement",
                  "src": "9468:38:3"
                }
              ]
            },
            "documentation": {
              "id": 1565,
              "nodeType": "StructuredDocumentation",
              "src": "8825:311:3",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 1621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9150:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9164:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1621,
                  "src": "9156:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9156:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9176:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1621,
                  "src": "9168:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9168:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9155:29:3"
            },
            "returnParameters": {
              "id": 1571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9202:0:3"
            },
            "scope": 1839,
            "src": "9141:372:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1671,
              "nodeType": "Block",
              "src": "9779:299:3",
              "statements": [
                {
                  "assignments": [
                    1628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1628,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9797:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1671,
                      "src": "9789:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1627,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9789:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1633,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1631,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "9820:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1629,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "9805:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1839_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1169,
                      "src": "9805:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9805:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9789:39:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1635,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "9860:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9875:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9867:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1636,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9867:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9867:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1640,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "9879:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1634,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1838,
                      "src": "9839:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9839:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1642,
                  "nodeType": "ExpressionStatement",
                  "src": "9839:48:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9942:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9934:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1644,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9934:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9934:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1648,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "9946:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1643,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "9925:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9925:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1650,
                  "nodeType": "ExpressionStatement",
                  "src": "9925:29:3"
                },
                {
                  "expression": {
                    "id": 1655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1651,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "9965:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1653,
                      "indexExpression": {
                        "id": 1652,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "9975:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9965:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9985:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9965:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1656,
                  "nodeType": "ExpressionStatement",
                  "src": "9965:21:3"
                },
                {
                  "expression": {
                    "id": 1660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9996:23:3",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1657,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "10003:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1659,
                      "indexExpression": {
                        "id": 1658,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "10011:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10003:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1661,
                  "nodeType": "ExpressionStatement",
                  "src": "9996:23:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1663,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "10044:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10059:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10051:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1664,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10051:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10051:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1668,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "10063:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1662,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2006,
                      "src": "10035:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10035:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1670,
                  "nodeType": "EmitStatement",
                  "src": "10030:41:3"
                }
              ]
            },
            "documentation": {
              "id": 1622,
              "nodeType": "StructuredDocumentation",
              "src": "9519:206:3",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 1672,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9739:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1624,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9753:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1672,
                  "src": "9745:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9745:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9744:17:3"
            },
            "returnParameters": {
              "id": 1626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9779:0:3"
            },
            "scope": 1839,
            "src": "9730:348:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1740,
              "nodeType": "Block",
              "src": "10511:451:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1685,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1679,
                              "src": "10544:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1683,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1839,
                              "src": "10529:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1839_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 1684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1169,
                            "src": "10529:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10529:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1687,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1675,
                          "src": "10556:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10529:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10562:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 1682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10521:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10521:85:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1691,
                  "nodeType": "ExpressionStatement",
                  "src": "10521:85:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1693,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "10624:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10638:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10630:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1694,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10630:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10630:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10624:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10642:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 1692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10616:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10616:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1701,
                  "nodeType": "ExpressionStatement",
                  "src": "10616:65:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1703,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "10713:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1704,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1677,
                        "src": "10719:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1705,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1679,
                        "src": "10723:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1702,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1838,
                      "src": "10692:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10692:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1707,
                  "nodeType": "ExpressionStatement",
                  "src": "10692:39:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10810:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10802:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1709,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10802:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10802:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1713,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1679,
                        "src": "10814:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1708,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "10793:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10793:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1715,
                  "nodeType": "ExpressionStatement",
                  "src": "10793:29:3"
                },
                {
                  "expression": {
                    "id": 1720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1716,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "10833:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1718,
                      "indexExpression": {
                        "id": 1717,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "10843:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10833:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10852:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10833:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1721,
                  "nodeType": "ExpressionStatement",
                  "src": "10833:20:3"
                },
                {
                  "expression": {
                    "id": 1726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1722,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "10863:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1724,
                      "indexExpression": {
                        "id": 1723,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1677,
                        "src": "10873:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10863:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10880:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10863:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1727,
                  "nodeType": "ExpressionStatement",
                  "src": "10863:18:3"
                },
                {
                  "expression": {
                    "id": 1732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1728,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "10891:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1730,
                      "indexExpression": {
                        "id": 1729,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1679,
                        "src": "10899:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10891:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1731,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1677,
                      "src": "10910:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10891:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1733,
                  "nodeType": "ExpressionStatement",
                  "src": "10891:21:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1735,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "10937:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1736,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1677,
                        "src": "10943:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1737,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1679,
                        "src": "10947:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1734,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2006,
                      "src": "10928:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10928:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1739,
                  "nodeType": "EmitStatement",
                  "src": "10923:32:3"
                }
              ]
            },
            "documentation": {
              "id": 1673,
              "nodeType": "StructuredDocumentation",
              "src": "10084:313:3",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10411:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1675,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10438:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1741,
                  "src": "10430:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10430:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1677,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10460:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1741,
                  "src": "10452:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10452:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1679,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10480:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1741,
                  "src": "10472:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10472:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10420:73:3"
            },
            "returnParameters": {
              "id": 1681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10511:0:3"
            },
            "scope": 1839,
            "src": "10402:560:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1764,
              "nodeType": "Block",
              "src": "11137:107:3",
              "statements": [
                {
                  "expression": {
                    "id": 1753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1749,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1063,
                        "src": "11147:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1751,
                      "indexExpression": {
                        "id": 1750,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1746,
                        "src": "11163:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11147:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1752,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1744,
                      "src": "11174:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11147:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1754,
                  "nodeType": "ExpressionStatement",
                  "src": "11147:29:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1758,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1746,
                            "src": "11215:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1756,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1839,
                            "src": "11200:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$1839_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 1757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1169,
                          "src": "11200:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 1759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11200:23:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1760,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1744,
                        "src": "11225:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1761,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1746,
                        "src": "11229:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1755,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2015,
                      "src": "11191:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11191:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1763,
                  "nodeType": "EmitStatement",
                  "src": "11186:51:3"
                }
              ]
            },
            "documentation": {
              "id": 1742,
              "nodeType": "StructuredDocumentation",
              "src": "10968:100:3",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 1765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11082:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1744,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11099:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "11091:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11091:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1746,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11111:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "11103:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11103:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11090:29:3"
            },
            "returnParameters": {
              "id": 1748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11137:0:3"
            },
            "scope": 1839,
            "src": "11073:171:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1826,
              "nodeType": "Block",
              "src": "11953:622:3",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1779,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1770,
                        "src": "11967:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2172,
                      "src": "11967:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11967:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1824,
                    "nodeType": "Block",
                    "src": "12533:36:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12554:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1778,
                        "id": 1823,
                        "nodeType": "Return",
                        "src": "12547:11:3"
                      }
                    ]
                  },
                  "id": 1825,
                  "nodeType": "IfStatement",
                  "src": "11963:606:3",
                  "trueBody": {
                    "id": 1821,
                    "nodeType": "Block",
                    "src": "11984:543:3",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 1801,
                              "nodeType": "Block",
                              "src": "12099:91:3",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 1799,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1795,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1793,
                                      "src": "12124:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 1796,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2125,
                                          "src": "12134:15:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2125_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 1797,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2124,
                                        "src": "12134:32:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 1798,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12134:41:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12124:51:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 1778,
                                  "id": 1800,
                                  "nodeType": "Return",
                                  "src": "12117:58:3"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1802,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1794,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1793,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12091:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1802,
                                  "src": "12084:13:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 1792,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12084:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12083:15:3"
                            },
                            "src": "12075:115:3"
                          },
                          {
                            "block": {
                              "id": 1818,
                              "nodeType": "Block",
                              "src": "12219:298:3",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1809,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1806,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1804,
                                        "src": "12241:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 1807,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12241:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12258:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12241:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 1816,
                                    "nodeType": "Block",
                                    "src": "12368:135:3",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12399:86:3",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12436:2:3",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12440:6:3"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12432:3:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12432:15:3"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12455:6:3"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12449:5:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12449:13:3"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12425:6:3"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12425:38:3"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12425:38:3"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 1804,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12440:6:3",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 1804,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12455:6:3",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 1815,
                                        "nodeType": "InlineAssembly",
                                        "src": "12390:95:3"
                                      }
                                    ]
                                  },
                                  "id": 1817,
                                  "nodeType": "IfStatement",
                                  "src": "12237:266:3",
                                  "trueBody": {
                                    "id": 1814,
                                    "nodeType": "Block",
                                    "src": "12261:101:3",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 1811,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12290:52:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 1810,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12283:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 1812,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12283:60:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1813,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12283:60:3"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1819,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1805,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1804,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12211:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1819,
                                  "src": "12198:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1803,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12198:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12197:21:3"
                            },
                            "src": "12191:326:3"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1786,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1981,
                                "src": "12039:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12039:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1788,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1768,
                              "src": "12053:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1789,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1772,
                              "src": "12059:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1790,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "12068:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1783,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1770,
                                  "src": "12018:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1782,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2125,
                                "src": "12002:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2125_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 1784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12002:19:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$2125",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 1785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2124,
                            "src": "12002:36:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 1791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12002:72:3",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 1820,
                        "nodeType": "TryStatement",
                        "src": "11998:519:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1766,
              "nodeType": "StructuredDocumentation",
              "src": "11250:542:3",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "11806:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1768,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11846:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "11838:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11838:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1770,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11868:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "11860:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11860:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1772,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11888:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "11880:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11880:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1774,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "11918:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "11905:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11905:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11828:101:3"
            },
            "returnParameters": {
              "id": 1778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1777,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "11947:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11947:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11946:6:3"
            },
            "scope": 1839,
            "src": "11797:778:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1837,
              "nodeType": "Block",
              "src": "13251:2:3",
              "statements": []
            },
            "documentation": {
              "id": 1828,
              "nodeType": "StructuredDocumentation",
              "src": "12581:545:3",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13140:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1830,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13178:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1838,
                  "src": "13170:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13170:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1832,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13200:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1838,
                  "src": "13192:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13192:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1834,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13220:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1838,
                  "src": "13212:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13212:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13160:73:3"
            },
            "returnParameters": {
              "id": 1836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13251:0:3"
            },
            "scope": 1839,
            "src": "13131:122:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1840,
        "src": "554:12701:3",
        "usedErrors": []
      }
    ],
    "src": "33:13223:3"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620014d8380380620014d88339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61124680620002926000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d56565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dcb565b61012461011f366004610dde565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e13565b6103a6565b005b61014f61015f366004610e3d565b6104bc565b61014f610172366004610e3d565b6104ed565b610124610185366004610dde565b610508565b61019d610198366004610e79565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610e94565b610615565b61014f6101d4366004610ee6565b6106da565b6101046101e7366004610dde565b610712565b6100e76101fa366004610fc2565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610ff5565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610ff5565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b783836107fa565b505050565b6104c63382610868565b6104e25760405162461bcd60e51b815260040161038190611030565b6104b783838361095f565b6104b7838383604051806020016040528060008152506106da565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610ff5565b6001600160a01b03821633141561066e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106e43383610868565b6107005760405162461bcd60e51b815260040161038190611030565b61070c84848484610aff565b50505050565b6000818152600260205260409020546060906001600160a01b03166107915760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006107a860408051602081019091526000815290565b905060008151116107c857604051806020016040528060008152506107f3565b806107d284610b32565b6040516020016107e3929190611081565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061082f82610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108e15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b60006108ec83610508565b9050806001600160a01b0316846001600160a01b031614806109275750836001600160a01b031661091c8461030c565b6001600160a01b0316145b8061095757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661097282610508565b6001600160a01b0316146109da5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b038216610a3c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610a476000826107fa565b6001600160a01b0383166000908152600360205260408120805460019290610a709084906110c6565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a9e9084906110dd565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b0a84848461095f565b610b1684848484610c30565b61070c5760405162461bcd60e51b8152600401610381906110f5565b606081610b565750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b805780610b6a81611147565b9150610b799050600a83611178565b9150610b5a565b60008167ffffffffffffffff811115610b9b57610b9b610ed0565b6040519080825280601f01601f191660200182016040528015610bc5576020820181803683370190505b5090505b841561095757610bda6001836110c6565b9150610be7600a8661118c565b610bf29060306110dd565b60f81b818381518110610c0757610c076111a0565b60200101906001600160f81b031916908160001a905350610c29600a86611178565b9450610bc9565b60006001600160a01b0384163b15610d3257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c749033908990889088906004016111b6565b602060405180830381600087803b158015610c8e57600080fd5b505af1925050508015610cbe575060408051601f3d908101601f19168201909252610cbb918101906111f3565b60015b610d18573d808015610cec576040519150601f19603f3d011682016040523d82523d6000602084013e610cf1565b606091505b508051610d105760405162461bcd60e51b8152600401610381906110f5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610957565b506001949350505050565b6001600160e01b031981168114610d5357600080fd5b50565b600060208284031215610d6857600080fd5b81356107f381610d3d565b60005b83811015610d8e578181015183820152602001610d76565b8381111561070c5750506000910152565b60008151808452610db7816020860160208601610d73565b601f01601f19169290920160200192915050565b6020815260006107f36020830184610d9f565b600060208284031215610df057600080fd5b5035919050565b80356001600160a01b0381168114610e0e57600080fd5b919050565b60008060408385031215610e2657600080fd5b610e2f83610df7565b946020939093013593505050565b600080600060608486031215610e5257600080fd5b610e5b84610df7565b9250610e6960208501610df7565b9150604084013590509250925092565b600060208284031215610e8b57600080fd5b6107f382610df7565b60008060408385031215610ea757600080fd5b610eb083610df7565b915060208301358015158114610ec557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610efc57600080fd5b610f0585610df7565b9350610f1360208601610df7565b925060408501359150606085013567ffffffffffffffff80821115610f3757600080fd5b818701915087601f830112610f4b57600080fd5b813581811115610f5d57610f5d610ed0565b604051601f8201601f19908116603f01168101908382118183101715610f8557610f85610ed0565b816040528281528a6020848701011115610f9e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fd557600080fd5b610fde83610df7565b9150610fec60208401610df7565b90509250929050565b600181811c9082168061100957607f821691505b6020821081141561102a57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611093818460208801610d73565b8351908301906110a7818360208801610d73565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110d8576110d86110b0565b500390565b600082198211156110f0576110f06110b0565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060001982141561115b5761115b6110b0565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118757611187611162565b500490565b60008261119b5761119b611162565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111e990830184610d9f565b9695505050505050565b60006020828403121561120557600080fd5b81516107f381610d3d56fea2646970667358221220138cad584595da6d033a62e43c2ccc656e793f1cce06a028bb4d4c462ff9184764736f6c63430008090033",
  "bytecodeSha1": "33e1606cf1eeeaac7cee0118de12a874eaf258d7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "10": {},
      "11": {},
      "3": {
        "ERC721._safeTransfer": {
          "60": [
            6809,
            6857,
            true
          ]
        },
        "ERC721._transfer": {
          "58": [
            10529,
            10560,
            true
          ],
          "59": [
            10624,
            10640,
            true
          ]
        },
        "ERC721.approve": {
          "49": [
            3600,
            3611,
            true
          ],
          "50": [
            3681,
            3702,
            true
          ],
          "51": [
            3706,
            3743,
            true
          ]
        },
        "ERC721.balanceOf": {
          "54": [
            1954,
            1973,
            true
          ]
        },
        "ERC721.ownerOf": {
          "53": [
            2258,
            2277,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "56": [
            5599,
            5640,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "55": [
            4311,
            4335,
            true
          ]
        },
        "ERC721.tokenURI": {
          "57": [
            2980,
            3005,
            true
          ]
        },
        "ERC721.transferFrom": {
          "52": [
            4978,
            5019,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "Strings.toString": {
          "61": [
            548,
            558,
            false
          ]
        }
      }
    },
    "statements": {
      "10": {
        "ERC165.supportsInterface": {
          "2": [
            864,
            911
          ]
        }
      },
      "11": {},
      "3": {
        "ERC721._approve": {
          "26": [
            11147,
            11176
          ],
          "27": [
            11186,
            11237
          ]
        },
        "ERC721._baseURI": {
          "24": [
            3390,
            3399
          ]
        },
        "ERC721._checkOnERC721Received": {
          "46": [
            12283,
            12343
          ],
          "47": [
            12117,
            12175
          ],
          "48": [
            12547,
            12558
          ]
        },
        "ERC721._exists": {
          "4": [
            7303,
            7340
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "28": [
            7614,
            7687
          ],
          "29": [
            7746,
            7842
          ]
        },
        "ERC721._safeTransfer": {
          "37": [
            6763,
            6791
          ],
          "38": [
            6801,
            6912
          ]
        },
        "ERC721._transfer": {
          "30": [
            10521,
            10606
          ],
          "31": [
            10616,
            10681
          ],
          "32": [
            10793,
            10822
          ],
          "33": [
            10833,
            10853
          ],
          "34": [
            10863,
            10881
          ],
          "35": [
            10891,
            10912
          ],
          "36": [
            10923,
            10955
          ]
        },
        "ERC721.approve": {
          "7": [
            3592,
            3649
          ],
          "9": [
            3660,
            3825
          ],
          "10": [
            3836,
            3857
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            1946,
            2020
          ],
          "16": [
            2030,
            2053
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4020,
            4093
          ],
          "6": [
            4104,
            4135
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4678,
            4720
          ]
        },
        "ERC721.name": {
          "3": [
            2493,
            2505
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2250,
            2323
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            5318,
            5357
          ],
          "21": [
            5591,
            5694
          ],
          "22": [
            5704,
            5743
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4303,
            4365
          ],
          "19": [
            4376,
            4429
          ],
          "20": [
            4439,
            4492
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1614,
            1789
          ]
        },
        "ERC721.symbol": {
          "17": [
            2657,
            2671
          ]
        },
        "ERC721.tokenURI": {
          "23": [
            2842,
            2918
          ],
          "25": [
            2973,
            3066
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            4970,
            5073
          ],
          "12": [
            5084,
            5112
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "Address.isContract": {
          "45": [
            1073,
            1088
          ]
        }
      },
      "8": {
        "Context._msgSender": {
          "8": [
            659,
            676
          ]
        }
      },
      "9": {
        "Strings.toString": {
          "39": [
            574,
            584
          ],
          "40": [
            690,
            698
          ],
          "41": [
            712,
            722
          ],
          "42": [
            824,
            835
          ],
          "43": [
            849,
            905
          ],
          "44": [
            919,
            930
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d56565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dcb565b61012461011f366004610dde565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e13565b6103a6565b005b61014f61015f366004610e3d565b6104bc565b61014f610172366004610e3d565b6104ed565b610124610185366004610dde565b610508565b61019d610198366004610e79565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610e94565b610615565b61014f6101d4366004610ee6565b6106da565b6101046101e7366004610dde565b610712565b6100e76101fa366004610fc2565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610ff5565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610ff5565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b783836107fa565b505050565b6104c63382610868565b6104e25760405162461bcd60e51b815260040161038190611030565b6104b783838361095f565b6104b7838383604051806020016040528060008152506106da565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610ff5565b6001600160a01b03821633141561066e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106e43383610868565b6107005760405162461bcd60e51b815260040161038190611030565b61070c84848484610aff565b50505050565b6000818152600260205260409020546060906001600160a01b03166107915760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006107a860408051602081019091526000815290565b905060008151116107c857604051806020016040528060008152506107f3565b806107d284610b32565b6040516020016107e3929190611081565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061082f82610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108e15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b60006108ec83610508565b9050806001600160a01b0316846001600160a01b031614806109275750836001600160a01b031661091c8461030c565b6001600160a01b0316145b8061095757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661097282610508565b6001600160a01b0316146109da5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b038216610a3c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610a476000826107fa565b6001600160a01b0383166000908152600360205260408120805460019290610a709084906110c6565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a9e9084906110dd565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b0a84848461095f565b610b1684848484610c30565b61070c5760405162461bcd60e51b8152600401610381906110f5565b606081610b565750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b805780610b6a81611147565b9150610b799050600a83611178565b9150610b5a565b60008167ffffffffffffffff811115610b9b57610b9b610ed0565b6040519080825280601f01601f191660200182016040528015610bc5576020820181803683370190505b5090505b841561095757610bda6001836110c6565b9150610be7600a8661118c565b610bf29060306110dd565b60f81b818381518110610c0757610c076111a0565b60200101906001600160f81b031916908160001a905350610c29600a86611178565b9450610bc9565b60006001600160a01b0384163b15610d3257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c749033908990889088906004016111b6565b602060405180830381600087803b158015610c8e57600080fd5b505af1925050508015610cbe575060408051601f3d908101601f19168201909252610cbb918101906111f3565b60015b610d18573d808015610cec576040519150601f19603f3d011682016040523d82523d6000602084013e610cf1565b606091505b508051610d105760405162461bcd60e51b8152600401610381906110f5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610957565b506001949350505050565b6001600160e01b031981168114610d5357600080fd5b50565b600060208284031215610d6857600080fd5b81356107f381610d3d565b60005b83811015610d8e578181015183820152602001610d76565b8381111561070c5750506000910152565b60008151808452610db7816020860160208601610d73565b601f01601f19169290920160200192915050565b6020815260006107f36020830184610d9f565b600060208284031215610df057600080fd5b5035919050565b80356001600160a01b0381168114610e0e57600080fd5b919050565b60008060408385031215610e2657600080fd5b610e2f83610df7565b946020939093013593505050565b600080600060608486031215610e5257600080fd5b610e5b84610df7565b9250610e6960208501610df7565b9150604084013590509250925092565b600060208284031215610e8b57600080fd5b6107f382610df7565b60008060408385031215610ea757600080fd5b610eb083610df7565b915060208301358015158114610ec557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610efc57600080fd5b610f0585610df7565b9350610f1360208601610df7565b925060408501359150606085013567ffffffffffffffff80821115610f3757600080fd5b818701915087601f830112610f4b57600080fd5b813581811115610f5d57610f5d610ed0565b604051601f8201601f19908116603f01168101908382118183101715610f8557610f85610ed0565b816040528281528a6020848701011115610f9e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fd557600080fd5b610fde83610df7565b9150610fec60208401610df7565b90509250929050565b600181811c9082168061100957607f821691505b6020821081141561102a57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611093818460208801610d73565b8351908301906110a7818360208801610d73565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110d8576110d86110b0565b500390565b600082198211156110f0576110f06110b0565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060001982141561115b5761115b6110b0565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118757611187611162565b500490565b60008261119b5761119b611162565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111e990830184610d9f565b9695505050505050565b60006020828403121561120557600080fd5b81516107f381610d3d56fea2646970667358221220138cad584595da6d033a62e43c2ccc656e793f1cce06a028bb4d4c462ff9184764736f6c63430008090033",
  "deployedSourceMap": "554:12701:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:14;;558:22;540:41;;528:2;513:18;1496:300:3;;;;;;;;2414:98;;;:::i;:::-;;;;;;;:::i;3925:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:14;;;1674:51;;1662:2;1647:18;3925:217:3;1528:203:14;3463:401:3;;;;;;:::i;:::-;;:::i;:::-;;4789:330;;;;;;:::i;:::-;;:::i;5185:179::-;;;;;;:::i;:::-;;:::i;2117:235::-;;;;;;:::i;:::-;;:::i;1855:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:14;;;2831:2;2816:18;1855:205:3;2697:177:14;2576:102:3;;;:::i;4209:290::-;;;;;;:::i;:::-;;:::i;5430:320::-;;;;;;:::i;:::-;;:::i;2744:329::-;;;;;;:::i;:::-;;:::i;4565:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4685:25:3;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4565:162;1496:300;1598:4;-1:-1:-1;;;;;;1633:40:3;;-1:-1:-1;;;1633:40:3;;:104;;-1:-1:-1;;;;;;;1689:48:3;;-1:-1:-1;;;1689:48:3;1633:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:10;;;1753:36:3;1614:175;1496:300;-1:-1:-1;;1496:300:3:o;2414:98::-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:3;4020:73;;;;-1:-1:-1;;;4020:73:3;;5358:2:14;4020:73:3;;;5340:21:14;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:14;;;5480:42;5539:19;;4020:73:3;;;;;;;;;-1:-1:-1;4111:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4111:24:3;;3925:217::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;-1:-1:-1;;;;;3600:11:3;:2;-1:-1:-1;;;;;3600:11:3;;;3592:57;;;;-1:-1:-1;;;3592:57:3;;5771:2:14;3592:57:3;;;5753:21:14;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:14;;;5893:31;5941:19;;3592:57:3;5569:397:14;3592:57:3;666:10:8;-1:-1:-1;;;;;3681:21:3;;;;:62;;-1:-1:-1;3706:37:3;3723:5;666:10:8;4565:162:3;:::i;3706:37::-;3660:165;;;;-1:-1:-1;;;3660:165:3;;6173:2:14;3660:165:3;;;6155:21:14;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;3660:165:3;5971:420:14;3660:165:3;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3533:331;3463:401;;:::o;4789:330::-;4978:41;666:10:8;5011:7:3;4978:18;:41::i;:::-;4970:103;;;;-1:-1:-1;;;4970:103:3;;;;;;;:::i;:::-;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;5185:179::-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;2117:235::-;2189:7;2224:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2224:16:3;2258:19;2250:73;;;;-1:-1:-1;;;2250:73:3;;7016:2:14;2250:73:3;;;6998:21:14;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:14;;;7138:39;7194:19;;2250:73:3;6814:405:14;1855:205:3;1927:7;-1:-1:-1;;;;;1954:19:3;;1946:74;;;;-1:-1:-1;;;1946:74:3;;7426:2:14;1946:74:3;;;7408:21:14;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:14;;;7548:40;7605:19;;1946:74:3;7224:406:14;1946:74:3;-1:-1:-1;;;;;;2037:16:3;;;;;:9;:16;;;;;;;1855:205::o;2576:102::-;2632:13;2664:7;2657:14;;;;;:::i;4209:290::-;-1:-1:-1;;;;;4311:24:3;;666:10:8;4311:24:3;;4303:62;;;;-1:-1:-1;;;4303:62:3;;7837:2:14;4303:62:3;;;7819:21:14;7876:2;7856:18;;;7849:30;7915:27;7895:18;;;7888:55;7960:18;;4303:62:3;7635:349:14;4303:62:3;666:10:8;4376:32:3;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4376:42:3;;;;;;;;;;;;:53;;-1:-1:-1;;4376:53:3;;;;;;;;;;4444:48;;540:41:14;;;4376:42:3;;666:10:8;4444:48:3;;513:18:14;4444:48:3;;;;;;;4209:290;;:::o;5430:320::-;5599:41;666:10:8;5632:7:3;5599:18;:41::i;:::-;5591:103;;;;-1:-1:-1;;;5591:103:3;;;;;;;:::i;:::-;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;2744:329::-;7287:4;7310:16;;;:7;:16;;;;;;2817:13;;-1:-1:-1;;;;;7310:16:3;2842:76;;;;-1:-1:-1;;;2842:76:3;;8191:2:14;2842:76:3;;;8173:21:14;8230:2;8210:18;;;8203:30;8269:34;8249:18;;;8242:62;-1:-1:-1;;;8320:18:14;;;8313:45;8375:19;;2842:76:3;7989:411:14;2842:76:3;2929:21;2953:10;3390:9;;;;;;;;;-1:-1:-1;3390:9:3;;;3314:92;2953:10;2929:34;;3004:1;2986:7;2980:21;:25;:86;;;;;;;;;;;;;;;;;3032:7;3041:18;:7;:16;:18::i;:::-;3015:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2980:86;2973:93;2744:329;-1:-1:-1;;;2744:329:3:o;11073:171::-;11147:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11147:29:3;-1:-1:-1;;;;;11147:29:3;;;;;;;;:24;;11200:23;11147:24;11200:14;:23::i;:::-;-1:-1:-1;;;;;11191:46:3;;;;;;;;;;;11073:171;;:::o;7505:344::-;7598:4;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:3;7614:73;;;;-1:-1:-1;;;7614:73:3;;9082:2:14;7614:73:3;;;9064:21:14;9121:2;9101:18;;;9094:30;9160:34;9140:18;;;9133:62;-1:-1:-1;;;9211:18:14;;;9204:42;9263:19;;7614:73:3;8880:408:14;7614:73:3;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;-1:-1:-1;;;;;7754:16:3;:7;-1:-1:-1;;;;;7754:16:3;;:51;;;;7798:7;-1:-1:-1;;;;;7774:31:3;:20;7786:7;7774:11;:20::i;:::-;-1:-1:-1;;;;;7774:31:3;;7754:51;:87;;;-1:-1:-1;;;;;;4685:25:3;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7809:32;7746:96;7505:344;-1:-1:-1;;;;7505:344:3:o;10402:560::-;10556:4;-1:-1:-1;;;;;10529:31:3;:23;10544:7;10529:14;:23::i;:::-;-1:-1:-1;;;;;10529:31:3;;10521:85;;;;-1:-1:-1;;;10521:85:3;;9495:2:14;10521:85:3;;;9477:21:14;9534:2;9514:18;;;9507:30;9573:34;9553:18;;;9546:62;-1:-1:-1;;;9624:18:14;;;9617:39;9673:19;;10521:85:3;9293:405:14;10521:85:3;-1:-1:-1;;;;;10624:16:3;;10616:65;;;;-1:-1:-1;;;10616:65:3;;9905:2:14;10616:65:3;;;9887:21:14;9944:2;9924:18;;;9917:30;9983:34;9963:18;;;9956:62;-1:-1:-1;;;10034:18:14;;;10027:34;10078:19;;10616:65:3;9703:400:14;10616:65:3;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;-1:-1:-1;;;;;10833:15:3;;;;;;:9;:15;;;;;:20;;10852:1;;10833:15;:20;;10852:1;;10833:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10863:13:3;;;;;;:9;:13;;;;;:18;;10880:1;;10863:13;:18;;10880:1;;10863:18;:::i;:::-;;;;-1:-1:-1;;10891:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10891:21:3;-1:-1:-1;;;;;10891:21:3;;;;;;;;;10928:27;;10891:16;;10928:27;;;;;;;10402:560;;;:::o;6612:307::-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;-1:-1:-1;;;6801:111:3;;;;;;;:::i;275:703:9:-;331:13;548:10;544:51;;-1:-1:-1;;574:10:9;;;;;;;;;;;;-1:-1:-1;;;574:10:9;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:9;;-1:-1:-1;720:2:9;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:9;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:9;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;849:56:9;;;;;;;;-1:-1:-1;919:11:9;928:2;919:11;;:::i;:::-;;;791:150;;11797:778:3;11947:4;-1:-1:-1;;;;;11967:13:3;;1034:20:7;1080:8;11963:606:3;;12002:72;;-1:-1:-1;;;12002:72:3;;-1:-1:-1;;;;;12002:36:3;;;;;:72;;666:10:8;;12053:4:3;;12059:7;;12068:5;;12002:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12002:72:3;;;;;;;;-1:-1:-1;;12002:72:3;;;;;;;;;;;;:::i;:::-;;;11998:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12241:13:3;;12237:266;;12283:60;;-1:-1:-1;;;12283:60:3;;;;;;;:::i;12237:266::-;12455:6;12449:13;12440:6;12436:2;12432:15;12425:38;11998:519;-1:-1:-1;;;;;;12124:51:3;-1:-1:-1;;;12124:51:3;;-1:-1:-1;12117:58:3;;11963:606;-1:-1:-1;12554:4:3;11797:778;;;;;;:::o;14:131:14:-;-1:-1:-1;;;;;;88:32:14;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:14;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:14;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:14:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:14;;1343:180;-1:-1:-1;1343:180:14:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:14;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:14:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:14;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:14;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8405:470::-;8584:3;8622:6;8616:13;8638:53;8684:6;8679:3;8672:4;8664:6;8660:17;8638:53;:::i;:::-;8754:13;;8713:16;;;;8776:57;8754:13;8713:16;8810:4;8798:17;;8776:57;:::i;:::-;8849:20;;8405:470;-1:-1:-1;;;;8405:470:14:o;10108:127::-;10169:10;10164:3;10160:20;10157:1;10150:31;10200:4;10197:1;10190:15;10224:4;10221:1;10214:15;10240:125;10280:4;10308:1;10305;10302:8;10299:34;;;10313:18;;:::i;:::-;-1:-1:-1;10350:9:14;;10240:125::o;10370:128::-;10410:3;10441:1;10437:6;10434:1;10431:13;10428:39;;;10447:18;;:::i;:::-;-1:-1:-1;10483:9:14;;10370:128::o;10503:414::-;10705:2;10687:21;;;10744:2;10724:18;;;10717:30;10783:34;10778:2;10763:18;;10756:62;-1:-1:-1;;;10849:2:14;10834:18;;10827:48;10907:3;10892:19;;10503:414::o;10922:135::-;10961:3;-1:-1:-1;;10982:17:14;;10979:43;;;11002:18;;:::i;:::-;-1:-1:-1;11049:1:14;11038:13;;10922:135::o;11062:127::-;11123:10;11118:3;11114:20;11111:1;11104:31;11154:4;11151:1;11144:15;11178:4;11175:1;11168:15;11194:120;11234:1;11260;11250:35;;11265:18;;:::i;:::-;-1:-1:-1;11299:9:14;;11194:120::o;11319:112::-;11351:1;11377;11367:35;;11382:18;;:::i;:::-;-1:-1:-1;11416:9:14;;11319:112::o;11436:127::-;11497:10;11492:3;11488:20;11485:1;11478:31;11528:4;11525:1;11518:15;11552:4;11549:1;11542:15;11568:489;-1:-1:-1;;;;;11837:15:14;;;11819:34;;11889:15;;11884:2;11869:18;;11862:43;11936:2;11921:18;;11914:34;;;11984:3;11979:2;11964:18;;11957:31;;;11762:4;;12005:46;;12031:19;;12023:6;12005:46;:::i;:::-;11997:54;11568:489;-1:-1:-1;;;;;;11568:489:14:o;12062:249::-;12131:6;12184:2;12172:9;12163:7;12159:23;12155:32;12152:52;;;12200:1;12197;12190:12;12152:52;12232:9;12226:16;12251:30;12275:5;12251:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    554,
    13255
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDCB JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE3D JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3D JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE94 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x7FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x95F JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6E4 CALLER DUP4 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x70C DUP5 DUP5 DUP5 DUP5 PUSH2 0xAFF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A8 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F3 JUMP JUMPDEST DUP1 PUSH2 0x7D2 DUP5 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7E3 SWAP3 SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x82F DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EC DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x927 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91C DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x957 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x972 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0xA47 PUSH1 0x0 DUP3 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA70 SWAP1 DUP5 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA9E SWAP1 DUP5 SWAP1 PUSH2 0x10DD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xB0A DUP5 DUP5 DUP5 PUSH2 0x95F JUMP JUMPDEST PUSH2 0xB16 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC30 JUMP JUMPDEST PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB56 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB80 JUMPI DUP1 PUSH2 0xB6A DUP2 PUSH2 0x1147 JUMP JUMPDEST SWAP2 POP PUSH2 0xB79 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9B PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBC5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x957 JUMPI PUSH2 0xBDA PUSH1 0x1 DUP4 PUSH2 0x10C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xBE7 PUSH1 0xA DUP7 PUSH2 0x118C JUMP JUMPDEST PUSH2 0xBF2 SWAP1 PUSH1 0x30 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC07 JUMPI PUSH2 0xC07 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC29 PUSH1 0xA DUP7 PUSH2 0x1178 JUMP JUMPDEST SWAP5 POP PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC74 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCBE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCBB SWAP2 DUP2 ADD SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD18 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCEC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x957 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7F3 DUP2 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD8E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD76 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDB7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2F DUP4 PUSH2 0xDF7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5B DUP5 PUSH2 0xDF7 JUMP JUMPDEST SWAP3 POP PUSH2 0xE69 PUSH1 0x20 DUP6 ADD PUSH2 0xDF7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB0 DUP4 PUSH2 0xDF7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF05 DUP6 PUSH2 0xDF7 JUMP JUMPDEST SWAP4 POP PUSH2 0xF13 PUSH1 0x20 DUP7 ADD PUSH2 0xDF7 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF5D JUMPI PUSH2 0xF5D PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF85 JUMPI PUSH2 0xF85 PUSH2 0xED0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFDE DUP4 PUSH2 0xDF7 JUMP JUMPDEST SWAP2 POP PUSH2 0xFEC PUSH1 0x20 DUP5 ADD PUSH2 0xDF7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1009 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x102A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1093 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD73 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10A7 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD73 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10D8 JUMPI PUSH2 0x10D8 PUSH2 0x10B0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F0 JUMPI PUSH2 0x10F0 PUSH2 0x10B0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x115B JUMPI PUSH2 0x115B PUSH2 0x10B0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1187 JUMPI PUSH2 0x1187 PUSH2 0x1162 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x119B JUMPI PUSH2 0x119B PUSH2 0x1162 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11E9 SWAP1 DUP4 ADD DUP5 PUSH2 0xD9F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7F3 DUP2 PUSH2 0xD3D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT DUP13 0xAD PC GASLIMIT SWAP6 0xDA PUSH14 0x33A62E43C2CCC656E793F1CCE06 LOG0 0x28 0xBB 0x4D 0x4C CHAINID 0x2F 0xF9 XOR SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "REVERT",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "REVERT",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "142": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "152": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "153": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "3"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "REVERT",
      "path": "3"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD56"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMP",
      "path": "3"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMP",
      "path": "3"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "DUP1",
      "path": "3"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SUB",
      "path": "3"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "RETURN",
      "path": "3"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "3"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDCB"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "3"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDE"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "3"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "3"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE13"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "3"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A6"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "3"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "STOP",
      "path": "3"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE3D"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4BC"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE3D"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMP",
      "path": "3"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4ED"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMP",
      "path": "3"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDE"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMP",
      "path": "3"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x508"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMP",
      "path": "3"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE79"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "3"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57F"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "3"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x606"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMP",
      "path": "3"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE94"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "3"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x615"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "3"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEE6"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "3"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DA"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "3"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDE"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMP",
      "path": "3"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x712"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMP",
      "path": "3"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC2"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP3",
      "path": "3"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "AND",
      "path": "3"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4662,
        4666
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "3"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "3"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "3"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP4",
      "path": "3"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "3"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP3",
      "path": "3"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "3"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1598,
        1602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "AND",
      "path": "3"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "EQ",
      "path": "3"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "DUP1",
      "path": "3"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "DUP3",
      "path": "3"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "AND",
      "path": "3"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "EQ",
      "path": "3"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "10"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "10"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1753,
        1789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1614,
        1789
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMP",
      "path": "3"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2468,
        2481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2500,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF5"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "3"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "3"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DIV",
      "path": "3"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MUL",
      "path": "3"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "3"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "3"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "3"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "3"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF5"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "3"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "LT",
      "path": "3"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "3"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DIV",
      "path": "3"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MUL",
      "path": "3"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "3"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "3"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "3"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "3"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "3"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "3"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "3"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "3"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "GT",
      "path": "3"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "3"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SUB",
      "path": "3"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "AND",
      "path": "3"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "3"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "3"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "3"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "3"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "3"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "3"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "3"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "3"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "3"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4001,
        4008
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 4
    },
    "784": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "3"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7317
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "791": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "3"
    },
    "794": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "AND",
      "path": "3"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 5,
      "value": "0x38A"
    },
    "808": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "823": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP3",
      "path": "3"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "ADD",
      "path": "3"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP1",
      "path": "3"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SUB",
      "path": "3"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x0"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "911": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP2",
      "path": "3"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "921": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "AND",
      "path": "3"
    },
    "932": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "3"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3574,
        3581
      ],
      "op": "DUP3",
      "path": "3"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3573
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x508"
    },
    "944": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMP",
      "path": "3"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3582
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3582
      ],
      "op": "POP",
      "path": "3"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3606,
        3611
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 7
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "AND",
      "path": "3"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3602
      ],
      "op": "DUP4",
      "path": "3"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "AND",
      "path": "3"
    },
    "968": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "EQ",
      "path": "3"
    },
    "969": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "970": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x41F"
    },
    "973": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "974": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "976": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "983": {
      "op": "SHL"
    },
    "984": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "DUP2",
      "path": "3"
    },
    "985": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "988": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "DUP3",
      "path": "3"
    },
    "991": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "ADD",
      "path": "3"
    },
    "992": {
      "op": "MSTORE"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "997": {
      "op": "DUP3"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1035": {
      "op": "DUP3"
    },
    "1036": {
      "op": "ADD"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1045": {
      "op": "DUP3"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1054": {
      "op": "JUMP"
    },
    "1055": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1056": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 8
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 9
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "AND",
      "path": "3"
    },
    "1067": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "EQ",
      "path": "3"
    },
    "1068": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1069": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3743
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43B"
    },
    "1072": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3743
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "fn": "ERC721.approve",
      "offset": [
        3706,
        3743
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43B"
    },
    "1077": {
      "fn": "ERC721.approve",
      "offset": [
        3723,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1078": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1079": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA"
    },
    "1082": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1083": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3706,
        3743
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1084": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AD"
    },
    "1087": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1088": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1097": {
      "op": "SHL"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1105": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "ADD",
      "path": "3"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1111": {
      "op": "DUP3"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1149": {
      "op": "DUP3"
    },
    "1150": {
      "op": "ADD"
    },
    "1151": {
      "op": "MSTORE"
    },
    "1152": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1187": {
      "op": "DUP3"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1192": {
      "op": "ADD"
    },
    "1193": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1196": {
      "op": "JUMP"
    },
    "1197": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1198": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3857
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 10,
      "value": "0x4B7"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        3845,
        3847
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1202": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3856
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1203": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3844
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7FA"
    },
    "1206": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3836,
        3857
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3857
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        3533,
        3864
      ],
      "op": "POP",
      "path": "3"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "POP",
      "path": "3"
    },
    "1210": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "POP",
      "path": "3"
    },
    "1211": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        5019
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 11,
      "value": "0x4C6"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5011,
        5018
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        4996
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x868"
    },
    "1221": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4978,
        5019
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1222": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        5019
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E2"
    },
    "1226": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1227": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "ADD",
      "path": "3"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1246": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1030"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5084,
        5112
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0x4B7"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5094,
        5098
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5100,
        5102
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5104,
        5111
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1257": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5084,
        5093
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x95F"
    },
    "1260": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5084,
        5112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1261": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1262": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 13,
      "value": "0x4B7"
    },
    "1265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5335,
        5339
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5341,
        5343
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5345,
        5352
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1268": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "ADD",
      "path": "3"
    },
    "1275": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1279": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "POP",
      "path": "3"
    },
    "1284": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5334
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DA"
    },
    "1287": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5318,
        5357
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1289": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2189,
        2196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1294": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1296": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1299": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1303": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1310": {
      "op": "SHL"
    },
    "1311": {
      "op": "SUB"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "AND",
      "path": "3"
    },
    "1313": {
      "branch": 53,
      "fn": "ERC721.ownerOf",
      "offset": [
        2258,
        2277
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 14
    },
    "1314": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x274"
    },
    "1317": {
      "branch": 53,
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1318": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1320": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1329": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1332": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1335": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "ADD",
      "path": "3"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1341": {
      "op": "DUP3"
    },
    "1342": {
      "op": "ADD"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "MSTORE"
    },
    "1382": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1397": {
      "op": "DUP3"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1406": {
      "op": "JUMP"
    },
    "1407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1927,
        1934
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1954,
        1973
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 15
    },
    "1419": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        1954,
        1973
      ],
      "op": "AND",
      "path": "3"
    },
    "1420": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5EA"
    },
    "1423": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1424": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1426": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1435": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1438": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1441": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "ADD",
      "path": "3"
    },
    "1442": {
      "op": "MSTORE"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1447": {
      "op": "DUP3"
    },
    "1448": {
      "op": "ADD"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "ADD"
    },
    "1487": {
      "op": "MSTORE"
    },
    "1488": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1504": {
      "op": "DUP3"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1513": {
      "op": "JUMP"
    },
    "1514": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1515": {
      "op": "POP"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "AND",
      "path": "3",
      "statement": 16
    },
    "1525": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1530": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2046
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1532": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1535": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1541": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1542": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1543": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2645
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1545": {
      "fn": "ERC721.symbol",
      "offset": [
        2664,
        2671
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x1"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1548": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1549": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x289"
    },
    "1552": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1553": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF5"
    },
    "1556": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2657,
        2671
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1564": {
      "op": "SHL"
    },
    "1565": {
      "op": "SUB"
    },
    "1566": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 18
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "AND",
      "path": "3"
    },
    "1568": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "EQ",
      "path": "3"
    },
    "1570": {
      "branch": 55,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1571": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66E"
    },
    "1574": {
      "branch": 55,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1575": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1577": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1584": {
      "op": "SHL"
    },
    "1585": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1586": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1589": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1591": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1592": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "ADD",
      "path": "3"
    },
    "1593": {
      "op": "MSTORE"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1598": {
      "op": "DUP3"
    },
    "1599": {
      "op": "ADD"
    },
    "1600": {
      "op": "MSTORE"
    },
    "1601": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1636": {
      "op": "DUP3"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1641": {
      "op": "ADD"
    },
    "1642": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1645": {
      "op": "JUMP"
    },
    "1646": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1647": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1648": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0x0"
    },
    "1650": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1651": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1652": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1653": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1655": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1657": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1658": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1659": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1660": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1662": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1663": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1664": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "op": "SUB"
    },
    "1673": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1674": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "AND",
      "path": "3"
    },
    "1675": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1676": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1677": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1678": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1679": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1680": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1681": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1682": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1683": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1684": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1685": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1686": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1689": {
      "op": "NOT"
    },
    "1690": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "AND",
      "path": "3"
    },
    "1691": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1692": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1693": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1694": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1695": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1696": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "OR",
      "path": "3"
    },
    "1697": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1698": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1699": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1700": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 20
    },
    "1701": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1702": {
      "op": "SWAP1"
    },
    "1703": {
      "op": "DUP2"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1706": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1707": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1708": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1741": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1742": {
      "op": "ADD"
    },
    "1743": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1745": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1746": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1747": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1748": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SUB",
      "path": "3"
    },
    "1749": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1750": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1751": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "POP",
      "path": "3"
    },
    "1752": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "POP",
      "path": "3"
    },
    "1753": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1754": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1755": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5640
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 21,
      "value": "0x6E4"
    },
    "1758": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1759": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5632,
        5639
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1760": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5617
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x868"
    },
    "1763": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5599,
        5640
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1764": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5640
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1765": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x700"
    },
    "1768": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1769": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1771": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1772": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1778": {
      "op": "SHL"
    },
    "1779": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1780": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1781": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1783": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "ADD",
      "path": "3"
    },
    "1784": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1787": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1788": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1030"
    },
    "1791": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1792": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1793": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5743
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 22,
      "value": "0x70C"
    },
    "1796": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5718,
        5722
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1797": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5724,
        5726
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1798": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5728,
        5735
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1799": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5737,
        5742
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1800": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5717
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFF"
    },
    "1803": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5704,
        5743
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1804": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5743
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1805": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "3"
    },
    "1806": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "3"
    },
    "1807": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "3"
    },
    "1808": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "3"
    },
    "1809": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1811": {
      "fn": "ERC721._exists",
      "offset": [
        7287,
        7291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1813": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1814": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1815": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1816": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7317
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1818": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1820": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1821": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1823": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1824": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1825": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2817,
        2830
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1828": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2817,
        2830
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1835": {
      "op": "SHL"
    },
    "1836": {
      "op": "SUB"
    },
    "1837": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "AND",
      "path": "3"
    },
    "1838": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 23,
      "value": "0x791"
    },
    "1841": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1844": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1845": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1851": {
      "op": "SHL"
    },
    "1852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1856": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1858": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1859": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "ADD",
      "path": "3"
    },
    "1860": {
      "op": "MSTORE"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1865": {
      "op": "DUP3"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "op": "MSTORE"
    },
    "1868": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1903": {
      "op": "DUP3"
    },
    "1904": {
      "op": "ADD"
    },
    "1905": {
      "op": "MSTORE"
    },
    "1906": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1927": {
      "op": "DUP3"
    },
    "1928": {
      "op": "ADD"
    },
    "1929": {
      "op": "MSTORE"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1932": {
      "op": "ADD"
    },
    "1933": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1936": {
      "op": "JUMP"
    },
    "1937": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1938": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        2950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1940": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2953,
        2963
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A8"
    },
    "1943": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 24,
      "value": "0x40"
    },
    "1945": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1946": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1947": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1949": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1950": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "ADD",
      "path": "3"
    },
    "1951": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1952": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1953": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1956": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1957": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1958": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1959": {
      "fn": "ERC721._baseURI",
      "offset": [
        3314,
        3406
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2953,
        2963
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1961": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        2963
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1962": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        2963
      ],
      "op": "POP",
      "path": "3"
    },
    "1963": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3004,
        3005
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 25,
      "value": "0x0"
    },
    "1965": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2986,
        2993
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1966": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3001
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1967": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3005
      ],
      "op": "GT",
      "path": "3"
    },
    "1968": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C8"
    },
    "1971": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1972": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1974": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1975": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1976": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1978": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "ADD",
      "path": "3"
    },
    "1979": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1981": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1982": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1983": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1985": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1986": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1987": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "POP",
      "path": "3"
    },
    "1988": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F3"
    },
    "1991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1992": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1993": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3032,
        3039
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1994": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3059
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D2"
    },
    "1997": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3048
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1998": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3057
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB32"
    },
    "2001": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3041,
        3059
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2002": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3059
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2003": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2005": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2006": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2008": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "ADD",
      "path": "3"
    },
    "2009": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E3"
    },
    "2012": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2013": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2014": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2015": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1081"
    },
    "2018": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3015,
        3060
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2019": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2020": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2022": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2023": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2025": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2026": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2027": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SUB",
      "path": "3"
    },
    "2028": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SUB",
      "path": "3"
    },
    "2029": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2030": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2031": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2032": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2034": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2035": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2036": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2973,
        3066
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2037": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2038": {
      "op": "POP"
    },
    "2039": {
      "op": "POP"
    },
    "2040": {
      "op": "POP"
    },
    "2041": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2042": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2043": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 26,
      "value": "0x0"
    },
    "2045": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2046": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2047": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2048": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11162
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2050": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2052": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2053": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2055": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2056": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2057": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2058": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2065": {
      "op": "SHL"
    },
    "2066": {
      "op": "SUB"
    },
    "2067": {
      "op": "NOT"
    },
    "2068": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "AND",
      "path": "3"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "op": "SUB"
    },
    "2077": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2078": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "AND",
      "path": "3"
    },
    "2079": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2080": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2081": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "OR",
      "path": "3"
    },
    "2082": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2083": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2084": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2085": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2086": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2087": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11223
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 27,
      "value": "0x82F"
    },
    "2090": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2091": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11214
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x508"
    },
    "2094": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11200,
        11223
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2095": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11223
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2102": {
      "op": "SHL"
    },
    "2103": {
      "op": "SUB"
    },
    "2104": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "AND",
      "path": "3"
    },
    "2105": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2138": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2140": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2141": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2143": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2144": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2145": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2146": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SUB",
      "path": "3"
    },
    "2147": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2148": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "LOG4",
      "path": "3"
    },
    "2149": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "POP",
      "path": "3"
    },
    "2150": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "POP",
      "path": "3"
    },
    "2151": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11073,
        11244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2152": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7849
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2153": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7598,
        7602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2155": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2156": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2157": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2158": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7317
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2160": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2162": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2163": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2165": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2166": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2167": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2174": {
      "op": "SHL"
    },
    "2175": {
      "op": "SUB"
    },
    "2176": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "AND",
      "path": "3"
    },
    "2177": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 28,
      "value": "0x8E1"
    },
    "2180": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2181": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2183": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2184": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2190": {
      "op": "SHL"
    },
    "2191": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2192": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2195": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2197": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2198": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "ADD",
      "path": "3"
    },
    "2199": {
      "op": "MSTORE"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2204": {
      "op": "DUP3"
    },
    "2205": {
      "op": "ADD"
    },
    "2206": {
      "op": "MSTORE"
    },
    "2207": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2242": {
      "op": "DUP3"
    },
    "2243": {
      "op": "ADD"
    },
    "2244": {
      "op": "MSTORE"
    },
    "2245": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2263": {
      "op": "DUP3"
    },
    "2264": {
      "op": "ADD"
    },
    "2265": {
      "op": "MSTORE"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "2272": {
      "op": "JUMP"
    },
    "2273": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2274": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7710
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2276": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7736
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8EC"
    },
    "2279": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7728,
        7735
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2280": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x508"
    },
    "2283": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7713,
        7736
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2284": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7736
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2285": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7736
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2286": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7736
      ],
      "op": "POP",
      "path": "3"
    },
    "2287": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7765,
        7770
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 29
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2294": {
      "op": "SHL"
    },
    "2295": {
      "op": "SUB"
    },
    "2296": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "AND",
      "path": "3"
    },
    "2297": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7761
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2304": {
      "op": "SHL"
    },
    "2305": {
      "op": "SUB"
    },
    "2306": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "AND",
      "path": "3"
    },
    "2307": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "EQ",
      "path": "3"
    },
    "2308": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2309": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x927"
    },
    "2312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2313": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "POP",
      "path": "3"
    },
    "2314": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7798,
        7805
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2321": {
      "op": "SHL"
    },
    "2322": {
      "op": "SUB"
    },
    "2323": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "AND",
      "path": "3"
    },
    "2324": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7794
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x91C"
    },
    "2327": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7786,
        7793
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2328": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30C"
    },
    "2331": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7774,
        7794
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2332": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7794
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "op": "SUB"
    },
    "2341": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "AND",
      "path": "3"
    },
    "2342": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "EQ",
      "path": "3"
    },
    "2343": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2344": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2345": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x957"
    },
    "2348": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2349": {
      "op": "POP"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2356": {
      "op": "SHL"
    },
    "2357": {
      "op": "SUB"
    },
    "2358": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2359": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2360": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "AND",
      "path": "3"
    },
    "2361": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4662,
        4666
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2363": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2364": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2365": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2366": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2368": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2370": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2371": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2372": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2373": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2375": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2376": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2377": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2378": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2379": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2380": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "3"
    },
    "2381": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2382": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2383": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2384": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2385": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2386": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2387": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2388": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2390": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "3"
    },
    "2391": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7809,
        7841
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2392": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7842
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2393": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7849
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2394": {
      "op": "POP"
    },
    "2395": {
      "op": "POP"
    },
    "2396": {
      "op": "POP"
    },
    "2397": {
      "op": "POP"
    },
    "2398": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7505,
        7849
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2399": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2400": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10560
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 30
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2407": {
      "op": "SHL"
    },
    "2408": {
      "op": "SUB"
    },
    "2409": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "AND",
      "path": "3"
    },
    "2410": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10552
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x972"
    },
    "2413": {
      "fn": "ERC721._transfer",
      "offset": [
        10544,
        10551
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2414": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x508"
    },
    "2417": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10529,
        10552
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2418": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10552
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "SUB"
    },
    "2427": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "AND",
      "path": "3"
    },
    "2428": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "EQ",
      "path": "3"
    },
    "2429": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9DA"
    },
    "2432": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2433": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2435": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2447": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2449": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2450": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "ADD",
      "path": "3"
    },
    "2451": {
      "op": "MSTORE"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2456": {
      "op": "DUP3"
    },
    "2457": {
      "op": "ADD"
    },
    "2458": {
      "op": "MSTORE"
    },
    "2459": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2494": {
      "op": "DUP3"
    },
    "2495": {
      "op": "ADD"
    },
    "2496": {
      "op": "MSTORE"
    },
    "2497": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2509": {
      "op": "SHL"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2512": {
      "op": "DUP3"
    },
    "2513": {
      "op": "ADD"
    },
    "2514": {
      "op": "MSTORE"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2517": {
      "op": "ADD"
    },
    "2518": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "2521": {
      "op": "JUMP"
    },
    "2522": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2529": {
      "op": "SHL"
    },
    "2530": {
      "op": "SUB"
    },
    "2531": {
      "fn": "ERC721._transfer",
      "offset": [
        10624,
        10640
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 31
    },
    "2532": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10624,
        10640
      ],
      "op": "AND",
      "path": "3"
    },
    "2533": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA3C"
    },
    "2536": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2537": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2539": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2540": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2546": {
      "op": "SHL"
    },
    "2547": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2548": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2553": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2554": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "ADD",
      "path": "3"
    },
    "2555": {
      "op": "MSTORE"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2558": {
      "op": "DUP1"
    },
    "2559": {
      "op": "DUP3"
    },
    "2560": {
      "op": "ADD"
    },
    "2561": {
      "op": "MSTORE"
    },
    "2562": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2597": {
      "op": "DUP3"
    },
    "2598": {
      "op": "ADD"
    },
    "2599": {
      "op": "MSTORE"
    },
    "2600": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2607": {
      "op": "SHL"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2610": {
      "op": "DUP3"
    },
    "2611": {
      "op": "ADD"
    },
    "2612": {
      "op": "MSTORE"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "2619": {
      "op": "JUMP"
    },
    "2620": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2621": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10822
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 32,
      "value": "0xA47"
    },
    "2624": {
      "fn": "ERC721._transfer",
      "offset": [
        10810,
        10811
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2626": {
      "fn": "ERC721._transfer",
      "offset": [
        10814,
        10821
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2627": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10801
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7FA"
    },
    "2630": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10793,
        10822
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2631": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10822
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2638": {
      "op": "SHL"
    },
    "2639": {
      "op": "SUB"
    },
    "2640": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 33
    },
    "2641": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "AND",
      "path": "3"
    },
    "2642": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2644": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2645": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2646": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2647": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2649": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2651": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2652": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2654": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2655": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2656": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2657": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2658": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2660": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2661": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2662": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA70"
    },
    "2665": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2666": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2667": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2668": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10C6"
    },
    "2671": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10833,
        10853
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2672": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2673": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2674": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2675": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2676": {
      "op": "POP"
    },
    "2677": {
      "op": "POP"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2684": {
      "op": "SHL"
    },
    "2685": {
      "op": "SUB"
    },
    "2686": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 34
    },
    "2687": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "AND",
      "path": "3"
    },
    "2688": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2690": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2691": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2692": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2693": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10872
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2695": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2697": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2698": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2700": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2701": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2702": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2703": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2704": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2706": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2707": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2708": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9E"
    },
    "2711": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2712": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2713": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2714": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10DD"
    },
    "2717": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10863,
        10881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2718": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2719": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2720": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2721": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2722": {
      "op": "POP"
    },
    "2723": {
      "op": "POP"
    },
    "2724": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 35,
      "value": "0x0"
    },
    "2726": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2727": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2728": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2729": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10898
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2731": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2733": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2734": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2736": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2737": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2738": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2739": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2740": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2747": {
      "op": "SHL"
    },
    "2748": {
      "op": "SUB"
    },
    "2749": {
      "op": "NOT"
    },
    "2750": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "AND",
      "path": "3"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2757": {
      "op": "SHL"
    },
    "2758": {
      "op": "SUB"
    },
    "2759": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2760": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2761": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "AND",
      "path": "3"
    },
    "2762": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2763": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2764": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "OR",
      "path": "3"
    },
    "2765": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2766": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2767": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2768": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 36
    },
    "2769": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2770": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2771": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2772": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2773": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2774": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "AND",
      "path": "3"
    },
    "2775": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2776": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2809": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2810": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "LOG4",
      "path": "3"
    },
    "2811": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "3"
    },
    "2812": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "3"
    },
    "2813": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "3"
    },
    "2814": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10402,
        10962
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2815": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2816": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6791
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 37,
      "value": "0xB0A"
    },
    "2819": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6777
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2820": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6781
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2821": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6783,
        6790
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2822": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6772
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x95F"
    },
    "2825": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6763,
        6791
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2826": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6791
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2827": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6857
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 38,
      "value": "0xB16"
    },
    "2830": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6832,
        6836
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2831": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6838,
        6840
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2832": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6842,
        6849
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2833": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6851,
        6856
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2834": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6831
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC30"
    },
    "2837": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6809,
        6857
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2838": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6857
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2839": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x70C"
    },
    "2842": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2843": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2845": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2852": {
      "op": "SHL"
    },
    "2853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2854": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2855": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2857": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "ADD",
      "path": "3"
    },
    "2858": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "2861": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2862": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F5"
    },
    "2865": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6801,
        6912
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2866": {
      "fn": "Strings.toString",
      "offset": [
        275,
        978
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2867": {
      "fn": "Strings.toString",
      "offset": [
        331,
        344
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "2869": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        548,
        558
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2870": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB56"
    },
    "2873": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2874": {
      "op": "POP"
    },
    "2875": {
      "op": "POP"
    },
    "2876": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 39,
      "value": "0x40"
    },
    "2878": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2879": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2880": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2881": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2882": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "9"
    },
    "2883": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2884": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2885": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2886": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2888": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2889": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2894": {
      "op": "SHL"
    },
    "2895": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2897": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2898": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "9"
    },
    "2899": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2900": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2901": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        275,
        978
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        619,
        624
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        604,
        616
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB80"
    },
    "2912": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2913": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 40
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB6A"
    },
    "2917": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2918": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1147"
    },
    "2921": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        690,
        698
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2922": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2924": {
      "op": "POP"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 41,
      "value": "0xB79"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2929": {
      "op": "POP"
    },
    "2930": {
      "fn": "Strings.toString",
      "offset": [
        720,
        722
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1178"
    },
    "2936": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        712,
        722
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2937": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "POP",
      "path": "9"
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB5A"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2944": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2945": {
      "fn": "Strings.toString",
      "offset": [
        742,
        761
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2947": {
      "fn": "Strings.toString",
      "offset": [
        774,
        780
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2957": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "GT",
      "path": "9"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2960": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB9B"
    },
    "2963": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB9B"
    },
    "2967": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xED0"
    },
    "2970": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        764,
        781
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2971": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2972": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2974": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2976": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2977": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2978": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2979": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2980": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2982": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "9"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "NOT",
      "path": "9"
    },
    "2986": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "AND",
      "path": "9"
    },
    "2987": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "9"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2991": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "9"
    },
    "2992": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2994": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2995": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBC5"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "9"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3007": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATACOPY",
      "path": "9"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "9"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3012": {
      "op": "POP"
    },
    "3013": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "POP",
      "path": "9"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "POP",
      "path": "9"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x957"
    },
    "3023": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3024": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 42,
      "value": "0xBDA"
    },
    "3027": {
      "fn": "Strings.toString",
      "offset": [
        834,
        835
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10C6"
    },
    "3033": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        824,
        835
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3034": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3036": {
      "op": "POP"
    },
    "3037": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 43,
      "value": "0xBE7"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        900,
        902
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        892,
        897
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x118C"
    },
    "3046": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        892,
        902
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3047": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3048": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBF2"
    },
    "3051": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3052": {
      "fn": "Strings.toString",
      "offset": [
        879,
        881
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x30"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10DD"
    },
    "3057": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        879,
        903
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3058": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xF8"
    },
    "3061": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "SHL",
      "path": "9"
    },
    "3062": {
      "fn": "Strings.toString",
      "offset": [
        849,
        855
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3063": {
      "fn": "Strings.toString",
      "offset": [
        856,
        862
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3064": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3065": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3066": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "LT",
      "path": "9"
    },
    "3068": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC07"
    },
    "3071": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3072": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC07"
    },
    "3075": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11A0"
    },
    "3078": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        849,
        863
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3079": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3080": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3082": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "9"
    },
    "3083": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "9"
    },
    "3084": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3091": {
      "op": "SHL"
    },
    "3092": {
      "op": "SUB"
    },
    "3093": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "NOT",
      "path": "9"
    },
    "3094": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "AND",
      "path": "9"
    },
    "3095": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3096": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3097": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3099": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "BYTE",
      "path": "9"
    },
    "3100": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "MSTORE8",
      "path": "9"
    },
    "3102": {
      "op": "POP"
    },
    "3103": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 44,
      "value": "0xC29"
    },
    "3106": {
      "fn": "Strings.toString",
      "offset": [
        928,
        930
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA"
    },
    "3108": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3109": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1178"
    },
    "3112": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        930
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3113": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3114": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "3115": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "POP",
      "path": "9"
    },
    "3116": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBC9"
    },
    "3119": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3120": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11947,
        11951
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3129": {
      "op": "SHL"
    },
    "3130": {
      "op": "SUB"
    },
    "3131": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11967,
        11980
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3132": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11967,
        11980
      ],
      "op": "AND",
      "path": "3"
    },
    "3133": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "3134": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "7",
      "statement": 45
    },
    "3135": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD32"
    },
    "3138": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12569
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3141": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3142": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3149": {
      "op": "SHL"
    },
    "3150": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "op": "SUB"
    },
    "3160": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "AND",
      "path": "3"
    },
    "3162": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "3168": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3169": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC74"
    },
    "3172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3173": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3174": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12053,
        12057
      ],
      "op": "DUP10",
      "path": "3"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12053,
        12057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12059,
        12066
      ],
      "op": "DUP9",
      "path": "3"
    },
    "3178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12059,
        12066
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12068,
        12073
      ],
      "op": "DUP9",
      "path": "3"
    },
    "3180": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12068,
        12073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "3"
    },
    "3184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11B6"
    },
    "3187": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3191": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3196": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SUB",
      "path": "3"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC8E"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "3"
    },
    "3216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "GAS",
      "path": "3"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "CALL",
      "path": "3"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "3"
    },
    "3220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "3"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "3"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCBE"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3228": {
      "op": "POP"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "3"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3241": {
      "op": "NOT"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "AND",
      "path": "3"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "3"
    },
    "3245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCBB"
    },
    "3251": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "3"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F3"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD18"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCEC"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "POP",
      "path": "3"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "NOT",
      "path": "3"
    },
    "3283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "ADD",
      "path": "3"
    },
    "3287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "AND",
      "path": "3"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "ADD",
      "path": "3"
    },
    "3290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3301": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "ADD",
      "path": "3"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF1"
    },
    "3307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3308": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3309": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3311": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "POP",
      "path": "3"
    },
    "3313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3314": {
      "op": "POP"
    },
    "3315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12254
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3316": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12254
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3317": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12237,
        12503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD10"
    },
    "3320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12237,
        12503
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 46,
      "value": "0x40"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3330": {
      "op": "SHL"
    },
    "3331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3332": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3335": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "ADD",
      "path": "3"
    },
    "3336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "3339": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3340": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F5"
    },
    "3343": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12283,
        12343
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3344": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12237,
        12503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12455,
        12461
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12449,
        12462
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3347": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12440,
        12446
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3348": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12436,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3350": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12447
      ],
      "op": "ADD",
      "path": "3"
    },
    "3351": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12425,
        12463
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3352": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3359": {
      "op": "SHL"
    },
    "3360": {
      "op": "SUB"
    },
    "3361": {
      "op": "NOT"
    },
    "3362": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12175
      ],
      "op": "AND",
      "path": "3",
      "statement": 47
    },
    "3363": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3370": {
      "op": "SHL"
    },
    "3371": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12175
      ],
      "op": "EQ",
      "path": "3"
    },
    "3372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3373": {
      "op": "POP"
    },
    "3374": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12117,
        12175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x957"
    },
    "3377": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12117,
        12175
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3378": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12569
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12554,
        12558
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 48,
      "value": "0x1"
    },
    "3382": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3383": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3384": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "POP",
      "path": "3"
    },
    "3385": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "POP",
      "path": "3"
    },
    "3386": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "POP",
      "path": "3"
    },
    "3387": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "POP",
      "path": "3"
    },
    "3388": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        11797,
        12575
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3389": {
      "op": "JUMPDEST"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3396": {
      "op": "SHL"
    },
    "3397": {
      "op": "SUB"
    },
    "3398": {
      "op": "NOT"
    },
    "3399": {
      "op": "DUP2"
    },
    "3400": {
      "op": "AND"
    },
    "3401": {
      "op": "DUP2"
    },
    "3402": {
      "op": "EQ"
    },
    "3403": {
      "op": "PUSH2",
      "value": "0xD53"
    },
    "3406": {
      "op": "JUMPI"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3409": {
      "op": "DUP1"
    },
    "3410": {
      "op": "REVERT"
    },
    "3411": {
      "op": "JUMPDEST"
    },
    "3412": {
      "op": "POP"
    },
    "3413": {
      "jump": "o",
      "op": "JUMP"
    },
    "3414": {
      "op": "JUMPDEST"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3419": {
      "op": "DUP3"
    },
    "3420": {
      "op": "DUP5"
    },
    "3421": {
      "op": "SUB"
    },
    "3422": {
      "op": "SLT"
    },
    "3423": {
      "op": "ISZERO"
    },
    "3424": {
      "op": "PUSH2",
      "value": "0xD68"
    },
    "3427": {
      "op": "JUMPI"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3430": {
      "op": "DUP1"
    },
    "3431": {
      "op": "REVERT"
    },
    "3432": {
      "op": "JUMPDEST"
    },
    "3433": {
      "op": "DUP2"
    },
    "3434": {
      "op": "CALLDATALOAD"
    },
    "3435": {
      "op": "PUSH2",
      "value": "0x7F3"
    },
    "3438": {
      "op": "DUP2"
    },
    "3439": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3442": {
      "jump": "i",
      "op": "JUMP"
    },
    "3443": {
      "op": "JUMPDEST"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3446": {
      "op": "JUMPDEST"
    },
    "3447": {
      "op": "DUP4"
    },
    "3448": {
      "op": "DUP2"
    },
    "3449": {
      "op": "LT"
    },
    "3450": {
      "op": "ISZERO"
    },
    "3451": {
      "op": "PUSH2",
      "value": "0xD8E"
    },
    "3454": {
      "op": "JUMPI"
    },
    "3455": {
      "op": "DUP2"
    },
    "3456": {
      "op": "DUP2"
    },
    "3457": {
      "op": "ADD"
    },
    "3458": {
      "op": "MLOAD"
    },
    "3459": {
      "op": "DUP4"
    },
    "3460": {
      "op": "DUP3"
    },
    "3461": {
      "op": "ADD"
    },
    "3462": {
      "op": "MSTORE"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3465": {
      "op": "ADD"
    },
    "3466": {
      "op": "PUSH2",
      "value": "0xD76"
    },
    "3469": {
      "op": "JUMP"
    },
    "3470": {
      "op": "JUMPDEST"
    },
    "3471": {
      "op": "DUP4"
    },
    "3472": {
      "op": "DUP2"
    },
    "3473": {
      "op": "GT"
    },
    "3474": {
      "op": "ISZERO"
    },
    "3475": {
      "op": "PUSH2",
      "value": "0x70C"
    },
    "3478": {
      "op": "JUMPI"
    },
    "3479": {
      "op": "POP"
    },
    "3480": {
      "op": "POP"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3483": {
      "op": "SWAP2"
    },
    "3484": {
      "op": "ADD"
    },
    "3485": {
      "op": "MSTORE"
    },
    "3486": {
      "jump": "o",
      "op": "JUMP"
    },
    "3487": {
      "op": "JUMPDEST"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3490": {
      "op": "DUP2"
    },
    "3491": {
      "op": "MLOAD"
    },
    "3492": {
      "op": "DUP1"
    },
    "3493": {
      "op": "DUP5"
    },
    "3494": {
      "op": "MSTORE"
    },
    "3495": {
      "op": "PUSH2",
      "value": "0xDB7"
    },
    "3498": {
      "op": "DUP2"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3501": {
      "op": "DUP7"
    },
    "3502": {
      "op": "ADD"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3505": {
      "op": "DUP7"
    },
    "3506": {
      "op": "ADD"
    },
    "3507": {
      "op": "PUSH2",
      "value": "0xD73"
    },
    "3510": {
      "jump": "i",
      "op": "JUMP"
    },
    "3511": {
      "op": "JUMPDEST"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3514": {
      "op": "ADD"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3517": {
      "op": "NOT"
    },
    "3518": {
      "op": "AND"
    },
    "3519": {
      "op": "SWAP3"
    },
    "3520": {
      "op": "SWAP1"
    },
    "3521": {
      "op": "SWAP3"
    },
    "3522": {
      "op": "ADD"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3525": {
      "op": "ADD"
    },
    "3526": {
      "op": "SWAP3"
    },
    "3527": {
      "op": "SWAP2"
    },
    "3528": {
      "op": "POP"
    },
    "3529": {
      "op": "POP"
    },
    "3530": {
      "jump": "o",
      "op": "JUMP"
    },
    "3531": {
      "op": "JUMPDEST"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3534": {
      "op": "DUP2"
    },
    "3535": {
      "op": "MSTORE"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3538": {
      "op": "PUSH2",
      "value": "0x7F3"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3543": {
      "op": "DUP4"
    },
    "3544": {
      "op": "ADD"
    },
    "3545": {
      "op": "DUP5"
    },
    "3546": {
      "op": "PUSH2",
      "value": "0xD9F"
    },
    "3549": {
      "jump": "i",
      "op": "JUMP"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3555": {
      "op": "DUP3"
    },
    "3556": {
      "op": "DUP5"
    },
    "3557": {
      "op": "SUB"
    },
    "3558": {
      "op": "SLT"
    },
    "3559": {
      "op": "ISZERO"
    },
    "3560": {
      "op": "PUSH2",
      "value": "0xDF0"
    },
    "3563": {
      "op": "JUMPI"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3566": {
      "op": "DUP1"
    },
    "3567": {
      "op": "REVERT"
    },
    "3568": {
      "op": "JUMPDEST"
    },
    "3569": {
      "op": "POP"
    },
    "3570": {
      "op": "CALLDATALOAD"
    },
    "3571": {
      "op": "SWAP2"
    },
    "3572": {
      "op": "SWAP1"
    },
    "3573": {
      "op": "POP"
    },
    "3574": {
      "jump": "o",
      "op": "JUMP"
    },
    "3575": {
      "op": "JUMPDEST"
    },
    "3576": {
      "op": "DUP1"
    },
    "3577": {
      "op": "CALLDATALOAD"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3584": {
      "op": "SHL"
    },
    "3585": {
      "op": "SUB"
    },
    "3586": {
      "op": "DUP2"
    },
    "3587": {
      "op": "AND"
    },
    "3588": {
      "op": "DUP2"
    },
    "3589": {
      "op": "EQ"
    },
    "3590": {
      "op": "PUSH2",
      "value": "0xE0E"
    },
    "3593": {
      "op": "JUMPI"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3596": {
      "op": "DUP1"
    },
    "3597": {
      "op": "REVERT"
    },
    "3598": {
      "op": "JUMPDEST"
    },
    "3599": {
      "op": "SWAP2"
    },
    "3600": {
      "op": "SWAP1"
    },
    "3601": {
      "op": "POP"
    },
    "3602": {
      "jump": "o",
      "op": "JUMP"
    },
    "3603": {
      "op": "JUMPDEST"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3606": {
      "op": "DUP1"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3609": {
      "op": "DUP4"
    },
    "3610": {
      "op": "DUP6"
    },
    "3611": {
      "op": "SUB"
    },
    "3612": {
      "op": "SLT"
    },
    "3613": {
      "op": "ISZERO"
    },
    "3614": {
      "op": "PUSH2",
      "value": "0xE26"
    },
    "3617": {
      "op": "JUMPI"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3620": {
      "op": "DUP1"
    },
    "3621": {
      "op": "REVERT"
    },
    "3622": {
      "op": "JUMPDEST"
    },
    "3623": {
      "op": "PUSH2",
      "value": "0xE2F"
    },
    "3626": {
      "op": "DUP4"
    },
    "3627": {
      "op": "PUSH2",
      "value": "0xDF7"
    },
    "3630": {
      "jump": "i",
      "op": "JUMP"
    },
    "3631": {
      "op": "JUMPDEST"
    },
    "3632": {
      "op": "SWAP5"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3635": {
      "op": "SWAP4"
    },
    "3636": {
      "op": "SWAP1"
    },
    "3637": {
      "op": "SWAP4"
    },
    "3638": {
      "op": "ADD"
    },
    "3639": {
      "op": "CALLDATALOAD"
    },
    "3640": {
      "op": "SWAP4"
    },
    "3641": {
      "op": "POP"
    },
    "3642": {
      "op": "POP"
    },
    "3643": {
      "op": "POP"
    },
    "3644": {
      "jump": "o",
      "op": "JUMP"
    },
    "3645": {
      "op": "JUMPDEST"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3648": {
      "op": "DUP1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3653": {
      "op": "DUP5"
    },
    "3654": {
      "op": "DUP7"
    },
    "3655": {
      "op": "SUB"
    },
    "3656": {
      "op": "SLT"
    },
    "3657": {
      "op": "ISZERO"
    },
    "3658": {
      "op": "PUSH2",
      "value": "0xE52"
    },
    "3661": {
      "op": "JUMPI"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3664": {
      "op": "DUP1"
    },
    "3665": {
      "op": "REVERT"
    },
    "3666": {
      "op": "JUMPDEST"
    },
    "3667": {
      "op": "PUSH2",
      "value": "0xE5B"
    },
    "3670": {
      "op": "DUP5"
    },
    "3671": {
      "op": "PUSH2",
      "value": "0xDF7"
    },
    "3674": {
      "jump": "i",
      "op": "JUMP"
    },
    "3675": {
      "op": "JUMPDEST"
    },
    "3676": {
      "op": "SWAP3"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3683": {
      "op": "DUP6"
    },
    "3684": {
      "op": "ADD"
    },
    "3685": {
      "op": "PUSH2",
      "value": "0xDF7"
    },
    "3688": {
      "jump": "i",
      "op": "JUMP"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "SWAP2"
    },
    "3691": {
      "op": "POP"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3694": {
      "op": "DUP5"
    },
    "3695": {
      "op": "ADD"
    },
    "3696": {
      "op": "CALLDATALOAD"
    },
    "3697": {
      "op": "SWAP1"
    },
    "3698": {
      "op": "POP"
    },
    "3699": {
      "op": "SWAP3"
    },
    "3700": {
      "op": "POP"
    },
    "3701": {
      "op": "SWAP3"
    },
    "3702": {
      "op": "POP"
    },
    "3703": {
      "op": "SWAP3"
    },
    "3704": {
      "jump": "o",
      "op": "JUMP"
    },
    "3705": {
      "op": "JUMPDEST"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3710": {
      "op": "DUP3"
    },
    "3711": {
      "op": "DUP5"
    },
    "3712": {
      "op": "SUB"
    },
    "3713": {
      "op": "SLT"
    },
    "3714": {
      "op": "ISZERO"
    },
    "3715": {
      "op": "PUSH2",
      "value": "0xE8B"
    },
    "3718": {
      "op": "JUMPI"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3721": {
      "op": "DUP1"
    },
    "3722": {
      "op": "REVERT"
    },
    "3723": {
      "op": "JUMPDEST"
    },
    "3724": {
      "op": "PUSH2",
      "value": "0x7F3"
    },
    "3727": {
      "op": "DUP3"
    },
    "3728": {
      "op": "PUSH2",
      "value": "0xDF7"
    },
    "3731": {
      "jump": "i",
      "op": "JUMP"
    },
    "3732": {
      "op": "JUMPDEST"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3735": {
      "op": "DUP1"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3738": {
      "op": "DUP4"
    },
    "3739": {
      "op": "DUP6"
    },
    "3740": {
      "op": "SUB"
    },
    "3741": {
      "op": "SLT"
    },
    "3742": {
      "op": "ISZERO"
    },
    "3743": {
      "op": "PUSH2",
      "value": "0xEA7"
    },
    "3746": {
      "op": "JUMPI"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3749": {
      "op": "DUP1"
    },
    "3750": {
      "op": "REVERT"
    },
    "3751": {
      "op": "JUMPDEST"
    },
    "3752": {
      "op": "PUSH2",
      "value": "0xEB0"
    },
    "3755": {
      "op": "DUP4"
    },
    "3756": {
      "op": "PUSH2",
      "value": "0xDF7"
    },
    "3759": {
      "jump": "i",
      "op": "JUMP"
    },
    "3760": {
      "op": "JUMPDEST"
    },
    "3761": {
      "op": "SWAP2"
    },
    "3762": {
      "op": "POP"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3765": {
      "op": "DUP4"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "op": "CALLDATALOAD"
    },
    "3768": {
      "op": "DUP1"
    },
    "3769": {
      "op": "ISZERO"
    },
    "3770": {
      "op": "ISZERO"
    },
    "3771": {
      "op": "DUP2"
    },
    "3772": {
      "op": "EQ"
    },
    "3773": {
      "op": "PUSH2",
      "value": "0xEC5"
    },
    "3776": {
      "op": "JUMPI"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3779": {
      "op": "DUP1"
    },
    "3780": {
      "op": "REVERT"
    },
    "3781": {
      "op": "JUMPDEST"
    },
    "3782": {
      "op": "DUP1"
    },
    "3783": {
      "op": "SWAP2"
    },
    "3784": {
      "op": "POP"
    },
    "3785": {
      "op": "POP"
    },
    "3786": {
      "op": "SWAP3"
    },
    "3787": {
      "op": "POP"
    },
    "3788": {
      "op": "SWAP3"
    },
    "3789": {
      "op": "SWAP1"
    },
    "3790": {
      "op": "POP"
    },
    "3791": {
      "jump": "o",
      "op": "JUMP"
    },
    "3792": {
      "op": "JUMPDEST"
    },
    "3793": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3800": {
      "op": "SHL"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3803": {
      "op": "MSTORE"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3808": {
      "op": "MSTORE"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3813": {
      "op": "REVERT"
    },
    "3814": {
      "op": "JUMPDEST"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3817": {
      "op": "DUP1"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3820": {
      "op": "DUP1"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3823": {
      "op": "DUP6"
    },
    "3824": {
      "op": "DUP8"
    },
    "3825": {
      "op": "SUB"
    },
    "3826": {
      "op": "SLT"
    },
    "3827": {
      "op": "ISZERO"
    },
    "3828": {
      "op": "PUSH2",
      "value": "0xEFC"
    },
    "3831": {
      "op": "JUMPI"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3834": {
      "op": "DUP1"
    },
    "3835": {
      "op": "REVERT"
    },
    "3836": {
      "op": "JUMPDEST"
    },
    "3837": {
      "op": "PUSH2",
      "value": "0xF05"
    },
    "3840": {
      "op": "DUP6"
    },
    "3841": {
      "op": "PUSH2",
      "value": "0xDF7"
    },
    "3844": {
      "jump": "i",
      "op": "JUMP"
    },
    "3845": {
      "op": "JUMPDEST"
    },
    "3846": {
      "op": "SWAP4"
    },
    "3847": {
      "op": "POP"
    },
    "3848": {
      "op": "PUSH2",
      "value": "0xF13"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3853": {
      "op": "DUP7"
    },
    "3854": {
      "op": "ADD"
    },
    "3855": {
      "op": "PUSH2",
      "value": "0xDF7"
    },
    "3858": {
      "jump": "i",
      "op": "JUMP"
    },
    "3859": {
      "op": "JUMPDEST"
    },
    "3860": {
      "op": "SWAP3"
    },
    "3861": {
      "op": "POP"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3864": {
      "op": "DUP6"
    },
    "3865": {
      "op": "ADD"
    },
    "3866": {
      "op": "CALLDATALOAD"
    },
    "3867": {
      "op": "SWAP2"
    },
    "3868": {
      "op": "POP"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3871": {
      "op": "DUP6"
    },
    "3872": {
      "op": "ADD"
    },
    "3873": {
      "op": "CALLDATALOAD"
    },
    "3874": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3883": {
      "op": "DUP1"
    },
    "3884": {
      "op": "DUP3"
    },
    "3885": {
      "op": "GT"
    },
    "3886": {
      "op": "ISZERO"
    },
    "3887": {
      "op": "PUSH2",
      "value": "0xF37"
    },
    "3890": {
      "op": "JUMPI"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3893": {
      "op": "DUP1"
    },
    "3894": {
      "op": "REVERT"
    },
    "3895": {
      "op": "JUMPDEST"
    },
    "3896": {
      "op": "DUP2"
    },
    "3897": {
      "op": "DUP8"
    },
    "3898": {
      "op": "ADD"
    },
    "3899": {
      "op": "SWAP2"
    },
    "3900": {
      "op": "POP"
    },
    "3901": {
      "op": "DUP8"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3904": {
      "op": "DUP4"
    },
    "3905": {
      "op": "ADD"
    },
    "3906": {
      "op": "SLT"
    },
    "3907": {
      "op": "PUSH2",
      "value": "0xF4B"
    },
    "3910": {
      "op": "JUMPI"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3913": {
      "op": "DUP1"
    },
    "3914": {
      "op": "REVERT"
    },
    "3915": {
      "op": "JUMPDEST"
    },
    "3916": {
      "op": "DUP2"
    },
    "3917": {
      "op": "CALLDATALOAD"
    },
    "3918": {
      "op": "DUP2"
    },
    "3919": {
      "op": "DUP2"
    },
    "3920": {
      "op": "GT"
    },
    "3921": {
      "op": "ISZERO"
    },
    "3922": {
      "op": "PUSH2",
      "value": "0xF5D"
    },
    "3925": {
      "op": "JUMPI"
    },
    "3926": {
      "op": "PUSH2",
      "value": "0xF5D"
    },
    "3929": {
      "op": "PUSH2",
      "value": "0xED0"
    },
    "3932": {
      "jump": "i",
      "op": "JUMP"
    },
    "3933": {
      "op": "JUMPDEST"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3936": {
      "op": "MLOAD"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3939": {
      "op": "DUP3"
    },
    "3940": {
      "op": "ADD"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3943": {
      "op": "NOT"
    },
    "3944": {
      "op": "SWAP1"
    },
    "3945": {
      "op": "DUP2"
    },
    "3946": {
      "op": "AND"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3949": {
      "op": "ADD"
    },
    "3950": {
      "op": "AND"
    },
    "3951": {
      "op": "DUP2"
    },
    "3952": {
      "op": "ADD"
    },
    "3953": {
      "op": "SWAP1"
    },
    "3954": {
      "op": "DUP4"
    },
    "3955": {
      "op": "DUP3"
    },
    "3956": {
      "op": "GT"
    },
    "3957": {
      "op": "DUP2"
    },
    "3958": {
      "op": "DUP4"
    },
    "3959": {
      "op": "LT"
    },
    "3960": {
      "op": "OR"
    },
    "3961": {
      "op": "ISZERO"
    },
    "3962": {
      "op": "PUSH2",
      "value": "0xF85"
    },
    "3965": {
      "op": "JUMPI"
    },
    "3966": {
      "op": "PUSH2",
      "value": "0xF85"
    },
    "3969": {
      "op": "PUSH2",
      "value": "0xED0"
    },
    "3972": {
      "jump": "i",
      "op": "JUMP"
    },
    "3973": {
      "op": "JUMPDEST"
    },
    "3974": {
      "op": "DUP2"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3977": {
      "op": "MSTORE"
    },
    "3978": {
      "op": "DUP3"
    },
    "3979": {
      "op": "DUP2"
    },
    "3980": {
      "op": "MSTORE"
    },
    "3981": {
      "op": "DUP11"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3984": {
      "op": "DUP5"
    },
    "3985": {
      "op": "DUP8"
    },
    "3986": {
      "op": "ADD"
    },
    "3987": {
      "op": "ADD"
    },
    "3988": {
      "op": "GT"
    },
    "3989": {
      "op": "ISZERO"
    },
    "3990": {
      "op": "PUSH2",
      "value": "0xF9E"
    },
    "3993": {
      "op": "JUMPI"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3996": {
      "op": "DUP1"
    },
    "3997": {
      "op": "REVERT"
    },
    "3998": {
      "op": "JUMPDEST"
    },
    "3999": {
      "op": "DUP3"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4002": {
      "op": "DUP7"
    },
    "4003": {
      "op": "ADD"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4006": {
      "op": "DUP4"
    },
    "4007": {
      "op": "ADD"
    },
    "4008": {
      "op": "CALLDATACOPY"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4013": {
      "op": "DUP5"
    },
    "4014": {
      "op": "DUP4"
    },
    "4015": {
      "op": "ADD"
    },
    "4016": {
      "op": "ADD"
    },
    "4017": {
      "op": "MSTORE"
    },
    "4018": {
      "op": "DUP1"
    },
    "4019": {
      "op": "SWAP6"
    },
    "4020": {
      "op": "POP"
    },
    "4021": {
      "op": "POP"
    },
    "4022": {
      "op": "POP"
    },
    "4023": {
      "op": "POP"
    },
    "4024": {
      "op": "POP"
    },
    "4025": {
      "op": "POP"
    },
    "4026": {
      "op": "SWAP3"
    },
    "4027": {
      "op": "SWAP6"
    },
    "4028": {
      "op": "SWAP2"
    },
    "4029": {
      "op": "SWAP5"
    },
    "4030": {
      "op": "POP"
    },
    "4031": {
      "op": "SWAP3"
    },
    "4032": {
      "op": "POP"
    },
    "4033": {
      "jump": "o",
      "op": "JUMP"
    },
    "4034": {
      "op": "JUMPDEST"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4037": {
      "op": "DUP1"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4040": {
      "op": "DUP4"
    },
    "4041": {
      "op": "DUP6"
    },
    "4042": {
      "op": "SUB"
    },
    "4043": {
      "op": "SLT"
    },
    "4044": {
      "op": "ISZERO"
    },
    "4045": {
      "op": "PUSH2",
      "value": "0xFD5"
    },
    "4048": {
      "op": "JUMPI"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4051": {
      "op": "DUP1"
    },
    "4052": {
      "op": "REVERT"
    },
    "4053": {
      "op": "JUMPDEST"
    },
    "4054": {
      "op": "PUSH2",
      "value": "0xFDE"
    },
    "4057": {
      "op": "DUP4"
    },
    "4058": {
      "op": "PUSH2",
      "value": "0xDF7"
    },
    "4061": {
      "jump": "i",
      "op": "JUMP"
    },
    "4062": {
      "op": "JUMPDEST"
    },
    "4063": {
      "op": "SWAP2"
    },
    "4064": {
      "op": "POP"
    },
    "4065": {
      "op": "PUSH2",
      "value": "0xFEC"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4070": {
      "op": "DUP5"
    },
    "4071": {
      "op": "ADD"
    },
    "4072": {
      "op": "PUSH2",
      "value": "0xDF7"
    },
    "4075": {
      "jump": "i",
      "op": "JUMP"
    },
    "4076": {
      "op": "JUMPDEST"
    },
    "4077": {
      "op": "SWAP1"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "op": "SWAP3"
    },
    "4080": {
      "op": "POP"
    },
    "4081": {
      "op": "SWAP3"
    },
    "4082": {
      "op": "SWAP1"
    },
    "4083": {
      "op": "POP"
    },
    "4084": {
      "jump": "o",
      "op": "JUMP"
    },
    "4085": {
      "op": "JUMPDEST"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4088": {
      "op": "DUP2"
    },
    "4089": {
      "op": "DUP2"
    },
    "4090": {
      "op": "SHR"
    },
    "4091": {
      "op": "SWAP1"
    },
    "4092": {
      "op": "DUP3"
    },
    "4093": {
      "op": "AND"
    },
    "4094": {
      "op": "DUP1"
    },
    "4095": {
      "op": "PUSH2",
      "value": "0x1009"
    },
    "4098": {
      "op": "JUMPI"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4101": {
      "op": "DUP3"
    },
    "4102": {
      "op": "AND"
    },
    "4103": {
      "op": "SWAP2"
    },
    "4104": {
      "op": "POP"
    },
    "4105": {
      "op": "JUMPDEST"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4108": {
      "op": "DUP3"
    },
    "4109": {
      "op": "LT"
    },
    "4110": {
      "op": "DUP2"
    },
    "4111": {
      "op": "EQ"
    },
    "4112": {
      "op": "ISZERO"
    },
    "4113": {
      "op": "PUSH2",
      "value": "0x102A"
    },
    "4116": {
      "op": "JUMPI"
    },
    "4117": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4124": {
      "op": "SHL"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4127": {
      "op": "MSTORE"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4132": {
      "op": "MSTORE"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4137": {
      "op": "REVERT"
    },
    "4138": {
      "op": "JUMPDEST"
    },
    "4139": {
      "op": "POP"
    },
    "4140": {
      "op": "SWAP2"
    },
    "4141": {
      "op": "SWAP1"
    },
    "4142": {
      "op": "POP"
    },
    "4143": {
      "jump": "o",
      "op": "JUMP"
    },
    "4144": {
      "op": "JUMPDEST"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4147": {
      "op": "DUP1"
    },
    "4148": {
      "op": "DUP3"
    },
    "4149": {
      "op": "MSTORE"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4152": {
      "op": "SWAP1"
    },
    "4153": {
      "op": "DUP3"
    },
    "4154": {
      "op": "ADD"
    },
    "4155": {
      "op": "MSTORE"
    },
    "4156": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4191": {
      "op": "DUP3"
    },
    "4192": {
      "op": "ADD"
    },
    "4193": {
      "op": "MSTORE"
    },
    "4194": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4214": {
      "op": "SHL"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4217": {
      "op": "DUP3"
    },
    "4218": {
      "op": "ADD"
    },
    "4219": {
      "op": "MSTORE"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4222": {
      "op": "ADD"
    },
    "4223": {
      "op": "SWAP1"
    },
    "4224": {
      "jump": "o",
      "op": "JUMP"
    },
    "4225": {
      "op": "JUMPDEST"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4228": {
      "op": "DUP4"
    },
    "4229": {
      "op": "MLOAD"
    },
    "4230": {
      "op": "PUSH2",
      "value": "0x1093"
    },
    "4233": {
      "op": "DUP2"
    },
    "4234": {
      "op": "DUP5"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4237": {
      "op": "DUP9"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "op": "PUSH2",
      "value": "0xD73"
    },
    "4242": {
      "jump": "i",
      "op": "JUMP"
    },
    "4243": {
      "op": "JUMPDEST"
    },
    "4244": {
      "op": "DUP4"
    },
    "4245": {
      "op": "MLOAD"
    },
    "4246": {
      "op": "SWAP1"
    },
    "4247": {
      "op": "DUP4"
    },
    "4248": {
      "op": "ADD"
    },
    "4249": {
      "op": "SWAP1"
    },
    "4250": {
      "op": "PUSH2",
      "value": "0x10A7"
    },
    "4253": {
      "op": "DUP2"
    },
    "4254": {
      "op": "DUP4"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4257": {
      "op": "DUP9"
    },
    "4258": {
      "op": "ADD"
    },
    "4259": {
      "op": "PUSH2",
      "value": "0xD73"
    },
    "4262": {
      "jump": "i",
      "op": "JUMP"
    },
    "4263": {
      "op": "JUMPDEST"
    },
    "4264": {
      "op": "ADD"
    },
    "4265": {
      "op": "SWAP5"
    },
    "4266": {
      "op": "SWAP4"
    },
    "4267": {
      "op": "POP"
    },
    "4268": {
      "op": "POP"
    },
    "4269": {
      "op": "POP"
    },
    "4270": {
      "op": "POP"
    },
    "4271": {
      "jump": "o",
      "op": "JUMP"
    },
    "4272": {
      "op": "JUMPDEST"
    },
    "4273": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4280": {
      "op": "SHL"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4283": {
      "op": "MSTORE"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4288": {
      "op": "MSTORE"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4293": {
      "op": "REVERT"
    },
    "4294": {
      "op": "JUMPDEST"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4297": {
      "op": "DUP3"
    },
    "4298": {
      "op": "DUP3"
    },
    "4299": {
      "op": "LT"
    },
    "4300": {
      "op": "ISZERO"
    },
    "4301": {
      "op": "PUSH2",
      "value": "0x10D8"
    },
    "4304": {
      "op": "JUMPI"
    },
    "4305": {
      "op": "PUSH2",
      "value": "0x10D8"
    },
    "4308": {
      "op": "PUSH2",
      "value": "0x10B0"
    },
    "4311": {
      "jump": "i",
      "op": "JUMP"
    },
    "4312": {
      "op": "JUMPDEST"
    },
    "4313": {
      "op": "POP"
    },
    "4314": {
      "op": "SUB"
    },
    "4315": {
      "op": "SWAP1"
    },
    "4316": {
      "jump": "o",
      "op": "JUMP"
    },
    "4317": {
      "op": "JUMPDEST"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4320": {
      "op": "DUP3"
    },
    "4321": {
      "op": "NOT"
    },
    "4322": {
      "op": "DUP3"
    },
    "4323": {
      "op": "GT"
    },
    "4324": {
      "op": "ISZERO"
    },
    "4325": {
      "op": "PUSH2",
      "value": "0x10F0"
    },
    "4328": {
      "op": "JUMPI"
    },
    "4329": {
      "op": "PUSH2",
      "value": "0x10F0"
    },
    "4332": {
      "op": "PUSH2",
      "value": "0x10B0"
    },
    "4335": {
      "jump": "i",
      "op": "JUMP"
    },
    "4336": {
      "op": "JUMPDEST"
    },
    "4337": {
      "op": "POP"
    },
    "4338": {
      "op": "ADD"
    },
    "4339": {
      "op": "SWAP1"
    },
    "4340": {
      "jump": "o",
      "op": "JUMP"
    },
    "4341": {
      "op": "JUMPDEST"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4344": {
      "op": "DUP1"
    },
    "4345": {
      "op": "DUP3"
    },
    "4346": {
      "op": "MSTORE"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4349": {
      "op": "SWAP1"
    },
    "4350": {
      "op": "DUP3"
    },
    "4351": {
      "op": "ADD"
    },
    "4352": {
      "op": "MSTORE"
    },
    "4353": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4388": {
      "op": "DUP3"
    },
    "4389": {
      "op": "ADD"
    },
    "4390": {
      "op": "MSTORE"
    },
    "4391": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4412": {
      "op": "SHL"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4415": {
      "op": "DUP3"
    },
    "4416": {
      "op": "ADD"
    },
    "4417": {
      "op": "MSTORE"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4420": {
      "op": "ADD"
    },
    "4421": {
      "op": "SWAP1"
    },
    "4422": {
      "jump": "o",
      "op": "JUMP"
    },
    "4423": {
      "op": "JUMPDEST"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4428": {
      "op": "NOT"
    },
    "4429": {
      "op": "DUP3"
    },
    "4430": {
      "op": "EQ"
    },
    "4431": {
      "op": "ISZERO"
    },
    "4432": {
      "op": "PUSH2",
      "value": "0x115B"
    },
    "4435": {
      "op": "JUMPI"
    },
    "4436": {
      "op": "PUSH2",
      "value": "0x115B"
    },
    "4439": {
      "op": "PUSH2",
      "value": "0x10B0"
    },
    "4442": {
      "jump": "i",
      "op": "JUMP"
    },
    "4443": {
      "op": "JUMPDEST"
    },
    "4444": {
      "op": "POP"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4447": {
      "op": "ADD"
    },
    "4448": {
      "op": "SWAP1"
    },
    "4449": {
      "jump": "o",
      "op": "JUMP"
    },
    "4450": {
      "op": "JUMPDEST"
    },
    "4451": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4458": {
      "op": "SHL"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4461": {
      "op": "MSTORE"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4466": {
      "op": "MSTORE"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4471": {
      "op": "REVERT"
    },
    "4472": {
      "op": "JUMPDEST"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4475": {
      "op": "DUP3"
    },
    "4476": {
      "op": "PUSH2",
      "value": "0x1187"
    },
    "4479": {
      "op": "JUMPI"
    },
    "4480": {
      "op": "PUSH2",
      "value": "0x1187"
    },
    "4483": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4486": {
      "jump": "i",
      "op": "JUMP"
    },
    "4487": {
      "op": "JUMPDEST"
    },
    "4488": {
      "op": "POP"
    },
    "4489": {
      "op": "DIV"
    },
    "4490": {
      "op": "SWAP1"
    },
    "4491": {
      "jump": "o",
      "op": "JUMP"
    },
    "4492": {
      "op": "JUMPDEST"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4495": {
      "op": "DUP3"
    },
    "4496": {
      "op": "PUSH2",
      "value": "0x119B"
    },
    "4499": {
      "op": "JUMPI"
    },
    "4500": {
      "op": "PUSH2",
      "value": "0x119B"
    },
    "4503": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4506": {
      "jump": "i",
      "op": "JUMP"
    },
    "4507": {
      "op": "JUMPDEST"
    },
    "4508": {
      "op": "POP"
    },
    "4509": {
      "op": "MOD"
    },
    "4510": {
      "op": "SWAP1"
    },
    "4511": {
      "jump": "o",
      "op": "JUMP"
    },
    "4512": {
      "op": "JUMPDEST"
    },
    "4513": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4520": {
      "op": "SHL"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4523": {
      "op": "MSTORE"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4528": {
      "op": "MSTORE"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4533": {
      "op": "REVERT"
    },
    "4534": {
      "op": "JUMPDEST"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4541": {
      "op": "SHL"
    },
    "4542": {
      "op": "SUB"
    },
    "4543": {
      "op": "DUP6"
    },
    "4544": {
      "op": "DUP2"
    },
    "4545": {
      "op": "AND"
    },
    "4546": {
      "op": "DUP3"
    },
    "4547": {
      "op": "MSTORE"
    },
    "4548": {
      "op": "DUP5"
    },
    "4549": {
      "op": "AND"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4552": {
      "op": "DUP3"
    },
    "4553": {
      "op": "ADD"
    },
    "4554": {
      "op": "MSTORE"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4557": {
      "op": "DUP2"
    },
    "4558": {
      "op": "ADD"
    },
    "4559": {
      "op": "DUP4"
    },
    "4560": {
      "op": "SWAP1"
    },
    "4561": {
      "op": "MSTORE"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4566": {
      "op": "DUP3"
    },
    "4567": {
      "op": "ADD"
    },
    "4568": {
      "op": "DUP2"
    },
    "4569": {
      "op": "SWAP1"
    },
    "4570": {
      "op": "MSTORE"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4573": {
      "op": "SWAP1"
    },
    "4574": {
      "op": "PUSH2",
      "value": "0x11E9"
    },
    "4577": {
      "op": "SWAP1"
    },
    "4578": {
      "op": "DUP4"
    },
    "4579": {
      "op": "ADD"
    },
    "4580": {
      "op": "DUP5"
    },
    "4581": {
      "op": "PUSH2",
      "value": "0xD9F"
    },
    "4584": {
      "jump": "i",
      "op": "JUMP"
    },
    "4585": {
      "op": "JUMPDEST"
    },
    "4586": {
      "op": "SWAP7"
    },
    "4587": {
      "op": "SWAP6"
    },
    "4588": {
      "op": "POP"
    },
    "4589": {
      "op": "POP"
    },
    "4590": {
      "op": "POP"
    },
    "4591": {
      "op": "POP"
    },
    "4592": {
      "op": "POP"
    },
    "4593": {
      "op": "POP"
    },
    "4594": {
      "jump": "o",
      "op": "JUMP"
    },
    "4595": {
      "op": "JUMPDEST"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4600": {
      "op": "DUP3"
    },
    "4601": {
      "op": "DUP5"
    },
    "4602": {
      "op": "SUB"
    },
    "4603": {
      "op": "SLT"
    },
    "4604": {
      "op": "ISZERO"
    },
    "4605": {
      "op": "PUSH2",
      "value": "0x1205"
    },
    "4608": {
      "op": "JUMPI"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4611": {
      "op": "DUP1"
    },
    "4612": {
      "op": "REVERT"
    },
    "4613": {
      "op": "JUMPDEST"
    },
    "4614": {
      "op": "DUP2"
    },
    "4615": {
      "op": "MLOAD"
    },
    "4616": {
      "op": "PUSH2",
      "value": "0x7F3"
    },
    "4619": {
      "op": "DUP2"
    },
    "4620": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "4623": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "2da1cf5c791d579ab2acb40762ef9fac5bb1f64b",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "554:12701:3:-:0;;;1316:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1382:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1405:17:3;;;;:7;;:17;;;;;:::i;:::-;;1316:113;;554:12701;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;554:12701:3;;;-1:-1:-1;554:12701:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:14;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:14;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:14;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:14:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:14;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;554:12701:3;;;;;;",
  "sourcePath": "/home/wright/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}